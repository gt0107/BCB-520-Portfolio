{"title":"Practice with Spatial Data","markdown":{"yaml":{"title":"Practice with Spatial Data","subtitle":"MAPS!","format":{"html":{"toc":false,"echo":true}},"author":"Geraline Trossi-Torres","date":"2024-04-18","categories":["DataViz","Spatial","GGPlot","Assignment"],"image":"map.png","description":"Maps and Spatial Fields are fun!","code-fold":true,"code-tools":true},"headingText":"OVERVIEW","containsRefs":false,"markdown":"\n\n\nIn this assignment, we'll consider some of the tools and techniques for visualizing spatial data. Spatial data comes in two broad categories, geographic and spatial fields. Let's practice a few visualizations to get a feel for how these things work!\n\n## GEOGRAPHIC MAPS!\n\nIn class I bet Ronald that he would end up creating some kind of map based visualization before he graduated with his PHD. This is because he works on Malaria - a terrible disease with a strong spatial component to its risk levels. Let's get some Malaria data and map it!\n\nThe data I obtained were from the [Malaria Atlas](https://data.malariaatlas.org/trends?year=2020&metricGroup=Malaria&geographicLevel=admin0&metricSubcategory=Pf&metricType=rate&metricName=incidence). I downloaded a csv for 10 years of data for all the countries the had on file.\n\n```{r, include=FALSE}\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(knitr)\nlibrary(ggplot2)\nlibrary(readxl)\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\nlibrary(gganimate)\nlibrary(transformr)\nlibrary(magick)\nlibrary(gifski)\nlibrary(sf)\nlibrary(maps)\n```\n\n```{r}\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\nlibrary(dplyr)\n\nMalaria <- read.csv(\"National_Unit_data.csv\")\n\nIncidence<- Malaria%>%\n  filter(Metric == \"Infection Prevalence\")%>%\n  mutate(Prevalence = Value, Year = as.factor(Year))\n\n#%>%\n  #select(c(ISO3, Prevalence, Year))\n```\n\nNow I'm going to use the `rnaturalearth` package to create contry polygons. Then I'll add the Malaria data to that data frame.\n\n```{r}\nworld_map <- ne_countries(scale = \"medium\", returnclass = \"sf\")\n\nmap_data <- world_map %>%\n  left_join(Incidence, by = c(\"iso_a3\" = \"ISO3\"))%>%\n  filter(!is.na(Prevalence))\n```\n\nNow I will make a plot!\n\n```{r}\nlibrary(gganimate)\nlibrary(transformr)\nlibrary(magick)\nlibrary(gifski)\n# \nggplot() +\n  geom_sf(data = map_data%>%\n            filter(continent==\"Africa\"),\n          aes(fill = Prevalence)) +\n  scale_fill_gradient(low = \"white\", high = \"red\", na.value = \"gray\", name = \"Malaria Prevalence\") +\n  theme_minimal() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +\n  labs(title = \"Malaria Prevalence by Country\")\n```\n\n## My VERSION\n```{r}\nlibrary(ggplot2)\nlibrary(sf)\nlibrary(maps)\n\n# Load U.S. map data\nusa <- map_data(\"usa\")\n\n# Plot U.S. map\nggplot() +\n  geom_polygon(data = usa, aes(x = long, y = lat, group = group), fill = \"white\", color = \"black\") +\n  coord_fixed(1.3) +  # Aspect ratio adjustment\n  theme_void()  # Remove unnecessary elements\n\n# Load U.S. state boundary data\nstates <- map_data(\"state\")\n\n# Plot U.S. map with state boundaries\nggplot() +\n  geom_polygon(data = usa, aes(x = long, y = lat, group = group), fill = \"white\", color = \"black\") +\n  geom_polygon(data = states, aes(x = long, y = lat, group = group), fill = NA, color = \"gray\") + # Add state boundaries\n  coord_fixed(1.3) +  # Aspect ratio adjustment\n  theme_void()  # Remove unnecessary elements\n```\n\n```{r}\n# Load required packages\nlibrary(readxl)\nlibrary(ggplot2)\n\n# Load your Chlamydia cases dataset (assuming it's named 'ChlamydiaInfectionRate.xlsx')\nchlamydia_data <- read_excel(\"ChlamydiaInfectionRate.xlsx\")\n\n# Merge Chlamydia cases data with state boundaries data\nstates_chlamydia <- merge(states, chlamydia_data, by.x = \"region\", by.y = \"State\", all.x = TRUE)\n\n# Unique values in the 'region' column of the 'states' dataframe\nunique(states$region)\n\n# Unique values in the 'State' column of the 'chlamydia_data' dataframe\nunique(chlamydia_data$State)\n\n# Trim leading and trailing spaces from the key columns\nstates$region <- trimws(states$region)\nchlamydia_data$State <- trimws(chlamydia_data$State)\n\n# Convert key columns to lowercase before merging\nstates$region <- tolower(states$region)\nchlamydia_data$State <- tolower(chlamydia_data$State)\n\n# Perform merge\nstates_chlamydia <- merge(states, chlamydia_data, by.x = \"region\", by.y = \"State\", all.x = TRUE)\n\n# Plot the map with Chlamydia cases data\nggplot() +\n  geom_polygon(data = usa, aes(x = long, y = lat, group = group), fill = \"white\", color = \"black\") +\n  geom_polygon(data = states_chlamydia, aes(x = long, y = lat, group = group, fill = Cases), color = \"darkgray\") + # Add state boundaries with Chlamydia cases\n  scale_fill_gradient(low = \"lightpink\", high = \"darkred\", name = \"Chlamydia Cases\") + # Customize the color scale\n  coord_fixed(1.3) +  # Aspect ratio adjustment\n  theme_void()  # Remove unnecessary elements\n```\n\n```{r}\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\nlibrary(dplyr)\nlibrary(rnaturalearthhires)\n\n# Get the spatial data for countries\ncountries <- ne_countries(scale = \"medium\", returnclass = \"sf\")\n\n# Filter the dataset to extract Puerto Rico\npuerto_rico <- subset(countries, admin == \"Puerto Rico\")\n\n# Plot Puerto Rico's geometry\nggplot() +\n  geom_sf(data = puerto_rico) +\n  theme_void()\n```","srcMarkdownNoYaml":"\n\n## OVERVIEW\n\nIn this assignment, we'll consider some of the tools and techniques for visualizing spatial data. Spatial data comes in two broad categories, geographic and spatial fields. Let's practice a few visualizations to get a feel for how these things work!\n\n## GEOGRAPHIC MAPS!\n\nIn class I bet Ronald that he would end up creating some kind of map based visualization before he graduated with his PHD. This is because he works on Malaria - a terrible disease with a strong spatial component to its risk levels. Let's get some Malaria data and map it!\n\nThe data I obtained were from the [Malaria Atlas](https://data.malariaatlas.org/trends?year=2020&metricGroup=Malaria&geographicLevel=admin0&metricSubcategory=Pf&metricType=rate&metricName=incidence). I downloaded a csv for 10 years of data for all the countries the had on file.\n\n```{r, include=FALSE}\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(knitr)\nlibrary(ggplot2)\nlibrary(readxl)\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\nlibrary(gganimate)\nlibrary(transformr)\nlibrary(magick)\nlibrary(gifski)\nlibrary(sf)\nlibrary(maps)\n```\n\n```{r}\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\nlibrary(dplyr)\n\nMalaria <- read.csv(\"National_Unit_data.csv\")\n\nIncidence<- Malaria%>%\n  filter(Metric == \"Infection Prevalence\")%>%\n  mutate(Prevalence = Value, Year = as.factor(Year))\n\n#%>%\n  #select(c(ISO3, Prevalence, Year))\n```\n\nNow I'm going to use the `rnaturalearth` package to create contry polygons. Then I'll add the Malaria data to that data frame.\n\n```{r}\nworld_map <- ne_countries(scale = \"medium\", returnclass = \"sf\")\n\nmap_data <- world_map %>%\n  left_join(Incidence, by = c(\"iso_a3\" = \"ISO3\"))%>%\n  filter(!is.na(Prevalence))\n```\n\nNow I will make a plot!\n\n```{r}\nlibrary(gganimate)\nlibrary(transformr)\nlibrary(magick)\nlibrary(gifski)\n# \nggplot() +\n  geom_sf(data = map_data%>%\n            filter(continent==\"Africa\"),\n          aes(fill = Prevalence)) +\n  scale_fill_gradient(low = \"white\", high = \"red\", na.value = \"gray\", name = \"Malaria Prevalence\") +\n  theme_minimal() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +\n  labs(title = \"Malaria Prevalence by Country\")\n```\n\n## My VERSION\n```{r}\nlibrary(ggplot2)\nlibrary(sf)\nlibrary(maps)\n\n# Load U.S. map data\nusa <- map_data(\"usa\")\n\n# Plot U.S. map\nggplot() +\n  geom_polygon(data = usa, aes(x = long, y = lat, group = group), fill = \"white\", color = \"black\") +\n  coord_fixed(1.3) +  # Aspect ratio adjustment\n  theme_void()  # Remove unnecessary elements\n\n# Load U.S. state boundary data\nstates <- map_data(\"state\")\n\n# Plot U.S. map with state boundaries\nggplot() +\n  geom_polygon(data = usa, aes(x = long, y = lat, group = group), fill = \"white\", color = \"black\") +\n  geom_polygon(data = states, aes(x = long, y = lat, group = group), fill = NA, color = \"gray\") + # Add state boundaries\n  coord_fixed(1.3) +  # Aspect ratio adjustment\n  theme_void()  # Remove unnecessary elements\n```\n\n```{r}\n# Load required packages\nlibrary(readxl)\nlibrary(ggplot2)\n\n# Load your Chlamydia cases dataset (assuming it's named 'ChlamydiaInfectionRate.xlsx')\nchlamydia_data <- read_excel(\"ChlamydiaInfectionRate.xlsx\")\n\n# Merge Chlamydia cases data with state boundaries data\nstates_chlamydia <- merge(states, chlamydia_data, by.x = \"region\", by.y = \"State\", all.x = TRUE)\n\n# Unique values in the 'region' column of the 'states' dataframe\nunique(states$region)\n\n# Unique values in the 'State' column of the 'chlamydia_data' dataframe\nunique(chlamydia_data$State)\n\n# Trim leading and trailing spaces from the key columns\nstates$region <- trimws(states$region)\nchlamydia_data$State <- trimws(chlamydia_data$State)\n\n# Convert key columns to lowercase before merging\nstates$region <- tolower(states$region)\nchlamydia_data$State <- tolower(chlamydia_data$State)\n\n# Perform merge\nstates_chlamydia <- merge(states, chlamydia_data, by.x = \"region\", by.y = \"State\", all.x = TRUE)\n\n# Plot the map with Chlamydia cases data\nggplot() +\n  geom_polygon(data = usa, aes(x = long, y = lat, group = group), fill = \"white\", color = \"black\") +\n  geom_polygon(data = states_chlamydia, aes(x = long, y = lat, group = group, fill = Cases), color = \"darkgray\") + # Add state boundaries with Chlamydia cases\n  scale_fill_gradient(low = \"lightpink\", high = \"darkred\", name = \"Chlamydia Cases\") + # Customize the color scale\n  coord_fixed(1.3) +  # Aspect ratio adjustment\n  theme_void()  # Remove unnecessary elements\n```\n\n```{r}\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\nlibrary(dplyr)\nlibrary(rnaturalearthhires)\n\n# Get the spatial data for countries\ncountries <- ne_countries(scale = \"medium\", returnclass = \"sf\")\n\n# Filter the dataset to extract Puerto Rico\npuerto_rico <- subset(countries, admin == \"Puerto Rico\")\n\n# Plot Puerto Rico's geometry\nggplot() +\n  geom_sf(data = puerto_rico) +\n  theme_void()\n```"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["customstyles.css"],"toc":false,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","title-block-banner":true,"title":"Practice with Spatial Data","subtitle":"MAPS!","author":"Geraline Trossi-Torres","date":"2024-04-18","categories":["DataViz","Spatial","GGPlot","Assignment"],"image":"map.png","description":"Maps and Spatial Fields are fun!"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}