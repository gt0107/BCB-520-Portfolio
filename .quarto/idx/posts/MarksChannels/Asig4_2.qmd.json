{"title":"ASSIGNMENT 4","markdown":{"yaml":{"title":"ASSIGNMENT 4","subtitle":"Marks And Channel","author":"Geraline Trossi-Torres","Date":"2024-02-14","categories":["Assignment","DataViz"],"image":"Profile_2.jpg","code-fold":true,"code-tools":true,"description":"Lets Learn about Marks and Channels"},"headingText":"Video Games Sales 1980 - 2020","containsRefs":false,"markdown":"\n\n\nThe data set contains a list of more that 100,000 copies of video games, from the time period of 1983 - 2012. It is a public data set that it can be obtain by the following website [Kaggle - Video Game Sales](https://www.kaggle.com/datasets/gregorut/videogamesales?resource=download)\n\nThe data contains the rank of overall sales, game title, platform of the video game release, year of game release, genre of the game, publisher of game, and sales in the millions for US, Europe, Japan, rest of world wide and total global sales. \n\n### Flat Table - Video Games Sales\n\nWe have a **Flat Table**, the **items** are the rows, wherein each row is the different types of games that has been released from 1983 - 2012. Each item (games) is described by attributes, which are put in columns. Those **attributes** represent: index, rank, game title, platform, year, genre, publisher, US, Europe, Japan, Rest of the Word, Global (total of sales), and reviews. For each column of the different countries represent the total sales from each one in terms of millions in sales.\n\n```{r}\nlibrary(readxl)\nmy_df <- read_excel(\"VIdeo_Game_sales.xlsx\")\n\nknitr::kable(head(my_df,10))\nlibrary(tidyverse)\n```\n\n### ATTRIBUTE TYPES\n\n* **Categorical:** game title, platform, year, genre, publisher\n* **Ordinal:** Index, ranking\n* **Quantitative:** US (sales in millions), Europe (sales in millions), Japan (sales in millions), rest of the word (sales in millions), global  (sales in millions), reviews in the sales\n\n## Expressiveness and Effectiveness\n\n```{r}\nlibrary(tidyr)\nlibrary(ggplot2)\n\nlong_df <- pivot_longer(my_df, cols = c(NA_Sales, JP_Sales, EU_Sales), \n                        names_to = \"Sales_Type\", values_to = \"Sales\")\n\nggplot(long_df, aes(x=Genre, y=Sales, color=Sales_Type)) +\n  geom_boxplot(alpha=0.5) +\n  geom_jitter(width=0.2, height=0, size=1.5) +\n  theme_minimal(base_size = 14) +\n  ggtitle(\"Comparative Video Game Sales by Genre across Regions\") +\n  xlab(\"Video Game Genre\") + ylab(\"Sales (Millions)\") +\n  theme(axis.text.x = element_text(angle = 45, vjust = 0.5),\n        legend.title = element_blank(),\n        plot.title = element_text(face = \"bold\", size = 16),\n        axis.title = element_text(size = 14))\n```\n\n**Figure 1:** It's a Jitter plot that represents the individual data points for video game sales (in millions) by their Genre from different Regions; these regions are NA (North America), EU (Europe), and JP (Japan). For marks I used Points to present my observations, and my channels are spatial position, shape and color.\n\n```{r}\nlong_df <- pivot_longer(my_df, cols = c(NA_Sales, JP_Sales, EU_Sales, Other_Sales, Global_Sales), \n                        names_to = \"Sales_Type\", values_to = \"Sales\")\n\nggplot(long_df, aes(x=Genre, y=Sales, color=Sales_Type, shape=Sales_Type)) +\n  geom_boxplot(alpha=0.5) +\n  geom_jitter(width=0.2, height=0, size=2.5) +\n  theme_minimal(base_size = 14) +\n  ggtitle(\"Comparative Video Game Sales by Genre across Regions\") +\n  xlab(\"Video Game Genre\") + ylab(\"Sales (Millions)\") +\n  theme(axis.text.x = element_text(angle = 45, vjust = 0.5),\n        legend.title = element_blank(),\n        plot.title = element_text(face = \"bold\", size = 16),\n        axis.title = element_text(size = 14)) +\n  scale_color_brewer(palette = \"Set3\") +\n  guides(shape = guide_legend(override.aes = list(size = 6)))\n\n```\n\n**Figure 2:** For this second Jitter plot, I added more regions to compare the video game sales (in millions), so now we have the regions NA (North America), EU (Europe), JP (Japan), Other (other countries), and Global. The marks is still the same as the previous plot, but my channels I distorded. I changed the shape for each of the individual regions and its color. These makes it more distorted to understand the data.\n\n## Discriminability\n\n```{r}\ntitle_platform<-my_df%>%\n  select(Platform,Name)%>%\n  group_by(Platform, Name)%>%\n  summarise(count=n_distinct(Name))%>%\n  group_by(Platform) %>%\n  summarise(TotalCount = sum(count))\n\nsuppressMessages({title_platform<-my_df%>%\n  select(Platform,Name)%>%\n  group_by(Platform,Name)%>%\n  summarise(count=n_distinct(Name))%>%\n  group_by(Platform) %>%\n  summarise(TotalCount = sum(count))})\n\nlibrary(ggplot2)\n\ntitle_platform$Platform <- reorder(title_platform$Platform, title_platform$TotalCount)\n\nlibrary(ggplot2)\n\nlibrary(ggplot2)\n\nggplot(data = title_platform, aes(x = Platform, y = TotalCount, fill = Platform)) +\n  geom_col(color = \"black\", width = 0.7) +\n  ggtitle(\"Comparative Distribution of Game Titles Across Platforms\") +\n  xlab(\"Platform\") + ylab(\"Game Titles\") +\n  scale_fill_viridis_d() +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 16),\n    axis.title = element_text(size = 14),\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"none\"\n  )\n```\n\n**Figure 3:** It's a Bar plot that represents the distribution of game title counts across from different platforms. For marks, I used \"lines\" to present my observations, and my channels are spatial position and color. The game title counts are ordered from lowest to highest according to their platform. It helps us to perceive how many games there are for each platform. Looking at the color range it's from dark blue to bright yellow, meaning that with a brighter color, we have more game titles for that specific platform. \n\n```{r}\nggplot(my_df, aes(x = Platform, fill = Platform)) +\n  geom_bar(color = \"black\", width = 0.7) +\n  ggtitle(\"Platform Distribution\") +\n  xlab(\"Platform\") +\n  ylab(\"Game Titles\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5),\n        axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n**Figure 4:** This second Bar plot is the same representation for the distribution of game title counts across from different platforms. I used the same marks and channels from the previous figure. The difference from the previous figure is that there's no order between game title counts regarding to platform. The color scheme has no meaning that helps as a guide to perceive the highest and lowest count, which just makes it difficult to perceive at first glance.  \n\n## Seperability\n\n```{r}\ntitle_year_games <- my_df %>%\n  select(Year, Genre) %>%\n  count(Year, Genre)\n\n\nlibrary(ggplot2)\nlibrary(viridis)  # Load the viridis package for its color palettes\n\n# Enhanced ggplot with the viridis color palette\nggplot(title_year_games, aes(x = Year, y = n, fill = Genre)) +\n  geom_bar(stat = \"identity\", position = \"stack\", color = \"grey80\", size = 0.1) +  # Adding subtle borders\n  scale_fill_viridis_d() +  # Use the viridis discrete color palette\n  theme_minimal(base_size = 12) +  # Adjusting base font size for overall consistency\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1, size = 10, color = \"grey20\"),  # Enhancing x-axis labels\n    axis.text.y = element_text(size = 10, color = \"grey20\"),  # Enhancing y-axis labels\n    axis.title.x = element_text(size = 12, face = \"bold\", margin = margin(t = 10)),  # Styling x-axis title\n    axis.title.y = element_text(size = 12, face = \"bold\", margin = margin(r = 10)),  # Styling y-axis title\n    plot.title = element_text(size = 16, face = \"bold\", hjust = 0.5),  # Centering and emphasizing the plot title\n    legend.position = \"right\",  # Adjusting legend position for better layout\n    legend.title = element_text(size = 12),  # Styling the legend title for clarity\n    legend.text = element_text(size = 10)  # Adjusting legend text size for readability\n  ) +\n  ggtitle(\"Number of Games per Genre per Year\") +\n  xlab(\"Year\") +\n  ylab(\"Number of Games\") +\n  scale_x_discrete(breaks = function(x) x[seq(1, length(x), by = 2)])\n\n```\n\n**Figure 5:** The stacked Bar Chart represents the number of games per genre per year. For marks, I used \"lines\" to present my observations, and my channels are spatial position and color. Looking at the color range it's from dark blue to bright yellow, meaning that with a darker blue color, we have more number games per genre on per year. \n\n```{r}\ntitle_year_games <- my_df %>%\n  select(Year, Genre) %>%\n  count(Year, Genre)\n\nlibrary(ggplot2)\n\n# Example using title_year_games data frame\nggplot(title_year_games, aes(x = Year, y = n, fill = Genre)) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1, size = 10), # Rotate and adjust size of x-axis labels\n    axis.title.x = element_text(size = 12),\n    axis.title.y = element_text(size = 12)\n  ) +\n  ggtitle(\"Number of Games per Genre per Year\") +\n  xlab(\"Year\") +\n  ylab(\"Number of Games\")\n```\n\n**Figure 6:** The stacked Bar Chart represents the number of games per genre per year. For marks, I used \"lines\" to present my observations, and my channels are spatial position and color. Looking at this chart it's difficult to distinguish the number of games per genre for some of the years. \n\n## Popout\n\n```{r}\ntitle_genre<-my_df%>%\n  select(Genre,Name)%>%\n  group_by(Genre, Name)%>%\n  summarise(count=n_distinct(Name))%>%\n  group_by(Genre) %>%\n  summarise(TotalCount = sum(count))\n\nlibrary(ggplot2)\nlibrary(viridis)\n\ntitle_genre$Genre <- reorder(title_genre$Genre, title_genre$TotalCount)\n\nggplot(data = title_genre, aes(x = Genre, y = TotalCount, fill = Genre)) +\n  geom_col(color = \"black\", width = 0.7) +\n  scale_fill_viridis_d(option = \"plasma\", begin = 0.1, end = 0.9) +  # Applying a vibrant color palette with good contrast\n  ggtitle(\"Genre Distribution\") +\n  xlab(\"Genre\") +\n  ylab(\"Game Titles\") +\n  theme_minimal(base_size = 12) +  # Using a minimal theme with a base font size for better readability\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 18, face = \"bold\", color = \"grey20\"),  # Centered and bold title with adjusted color\n    axis.title = element_text(size = 14, face = \"bold\", color = \"grey20\"),  # Bold and slightly larger axis titles for clarity\n    axis.text.x = element_text(angle = 45, hjust = 1, size = 12, color = \"grey20\", vjust = 1),  # Adjusted x-axis labels for better legibility\n    axis.text.y = element_text(size = 12, color = \"grey20\"),  # Y-axis labels with adjusted size and color\n    legend.position = \"none\"  # Removing the legend since the fill color is directly linked to the x-axis labels\n  )\n\n```\n\n**Figure 7:** The Bar Chart represents the number of game titles per genre. For marks, I used \"lines\" to present my observations, and my channels are spatial position and color. Looking at the color range it's from dark purple to bright yellow, meaning that a dark blue color, is the least number of game titles per genre and bright yellow is for the highest number of game titles for that genre w. It is also in order from least number to highest number of game titles per genre. \n\n\n```{r}\ntitle_genre<-my_df%>%\n  select(Genre,Name)%>%\n  group_by(Genre, Name)%>%\n  summarise(count=n_distinct(Name))%>%\n  group_by(Genre) %>%\n  summarise(TotalCount = sum(count))\n\n\nggplot(data = title_genre, aes(x = Genre, y = TotalCount, fill = Genre)) +\n  geom_col(color = \"black\", width = 0.7) +\n  ggtitle(\"Genre Distribution\") +\n  xlab(\"Genre\") +\n  ylab(\"Game Titles\") +\n  theme_minimal(base_size = 12)\n\n```\n\n**Figure 8:**This Bar Chart represents the number of game titles per genre. For marks, I used \"lines\" to present my observations, and my channels are spatial position and color. The color scheme and the order of the game titles per genre don't help to perceive the lowest game titles, for example, the ones that have the same quantity of game titles in different genres, you have to search for them to be able to identify them. The color scheme doesn't give that pop out to easily identify which game title has the lowest quantity per genre. \n","srcMarkdownNoYaml":"\n\n## Video Games Sales 1980 - 2020\n\nThe data set contains a list of more that 100,000 copies of video games, from the time period of 1983 - 2012. It is a public data set that it can be obtain by the following website [Kaggle - Video Game Sales](https://www.kaggle.com/datasets/gregorut/videogamesales?resource=download)\n\nThe data contains the rank of overall sales, game title, platform of the video game release, year of game release, genre of the game, publisher of game, and sales in the millions for US, Europe, Japan, rest of world wide and total global sales. \n\n### Flat Table - Video Games Sales\n\nWe have a **Flat Table**, the **items** are the rows, wherein each row is the different types of games that has been released from 1983 - 2012. Each item (games) is described by attributes, which are put in columns. Those **attributes** represent: index, rank, game title, platform, year, genre, publisher, US, Europe, Japan, Rest of the Word, Global (total of sales), and reviews. For each column of the different countries represent the total sales from each one in terms of millions in sales.\n\n```{r}\nlibrary(readxl)\nmy_df <- read_excel(\"VIdeo_Game_sales.xlsx\")\n\nknitr::kable(head(my_df,10))\nlibrary(tidyverse)\n```\n\n### ATTRIBUTE TYPES\n\n* **Categorical:** game title, platform, year, genre, publisher\n* **Ordinal:** Index, ranking\n* **Quantitative:** US (sales in millions), Europe (sales in millions), Japan (sales in millions), rest of the word (sales in millions), global  (sales in millions), reviews in the sales\n\n## Expressiveness and Effectiveness\n\n```{r}\nlibrary(tidyr)\nlibrary(ggplot2)\n\nlong_df <- pivot_longer(my_df, cols = c(NA_Sales, JP_Sales, EU_Sales), \n                        names_to = \"Sales_Type\", values_to = \"Sales\")\n\nggplot(long_df, aes(x=Genre, y=Sales, color=Sales_Type)) +\n  geom_boxplot(alpha=0.5) +\n  geom_jitter(width=0.2, height=0, size=1.5) +\n  theme_minimal(base_size = 14) +\n  ggtitle(\"Comparative Video Game Sales by Genre across Regions\") +\n  xlab(\"Video Game Genre\") + ylab(\"Sales (Millions)\") +\n  theme(axis.text.x = element_text(angle = 45, vjust = 0.5),\n        legend.title = element_blank(),\n        plot.title = element_text(face = \"bold\", size = 16),\n        axis.title = element_text(size = 14))\n```\n\n**Figure 1:** It's a Jitter plot that represents the individual data points for video game sales (in millions) by their Genre from different Regions; these regions are NA (North America), EU (Europe), and JP (Japan). For marks I used Points to present my observations, and my channels are spatial position, shape and color.\n\n```{r}\nlong_df <- pivot_longer(my_df, cols = c(NA_Sales, JP_Sales, EU_Sales, Other_Sales, Global_Sales), \n                        names_to = \"Sales_Type\", values_to = \"Sales\")\n\nggplot(long_df, aes(x=Genre, y=Sales, color=Sales_Type, shape=Sales_Type)) +\n  geom_boxplot(alpha=0.5) +\n  geom_jitter(width=0.2, height=0, size=2.5) +\n  theme_minimal(base_size = 14) +\n  ggtitle(\"Comparative Video Game Sales by Genre across Regions\") +\n  xlab(\"Video Game Genre\") + ylab(\"Sales (Millions)\") +\n  theme(axis.text.x = element_text(angle = 45, vjust = 0.5),\n        legend.title = element_blank(),\n        plot.title = element_text(face = \"bold\", size = 16),\n        axis.title = element_text(size = 14)) +\n  scale_color_brewer(palette = \"Set3\") +\n  guides(shape = guide_legend(override.aes = list(size = 6)))\n\n```\n\n**Figure 2:** For this second Jitter plot, I added more regions to compare the video game sales (in millions), so now we have the regions NA (North America), EU (Europe), JP (Japan), Other (other countries), and Global. The marks is still the same as the previous plot, but my channels I distorded. I changed the shape for each of the individual regions and its color. These makes it more distorted to understand the data.\n\n## Discriminability\n\n```{r}\ntitle_platform<-my_df%>%\n  select(Platform,Name)%>%\n  group_by(Platform, Name)%>%\n  summarise(count=n_distinct(Name))%>%\n  group_by(Platform) %>%\n  summarise(TotalCount = sum(count))\n\nsuppressMessages({title_platform<-my_df%>%\n  select(Platform,Name)%>%\n  group_by(Platform,Name)%>%\n  summarise(count=n_distinct(Name))%>%\n  group_by(Platform) %>%\n  summarise(TotalCount = sum(count))})\n\nlibrary(ggplot2)\n\ntitle_platform$Platform <- reorder(title_platform$Platform, title_platform$TotalCount)\n\nlibrary(ggplot2)\n\nlibrary(ggplot2)\n\nggplot(data = title_platform, aes(x = Platform, y = TotalCount, fill = Platform)) +\n  geom_col(color = \"black\", width = 0.7) +\n  ggtitle(\"Comparative Distribution of Game Titles Across Platforms\") +\n  xlab(\"Platform\") + ylab(\"Game Titles\") +\n  scale_fill_viridis_d() +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 16),\n    axis.title = element_text(size = 14),\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"none\"\n  )\n```\n\n**Figure 3:** It's a Bar plot that represents the distribution of game title counts across from different platforms. For marks, I used \"lines\" to present my observations, and my channels are spatial position and color. The game title counts are ordered from lowest to highest according to their platform. It helps us to perceive how many games there are for each platform. Looking at the color range it's from dark blue to bright yellow, meaning that with a brighter color, we have more game titles for that specific platform. \n\n```{r}\nggplot(my_df, aes(x = Platform, fill = Platform)) +\n  geom_bar(color = \"black\", width = 0.7) +\n  ggtitle(\"Platform Distribution\") +\n  xlab(\"Platform\") +\n  ylab(\"Game Titles\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5),\n        axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n**Figure 4:** This second Bar plot is the same representation for the distribution of game title counts across from different platforms. I used the same marks and channels from the previous figure. The difference from the previous figure is that there's no order between game title counts regarding to platform. The color scheme has no meaning that helps as a guide to perceive the highest and lowest count, which just makes it difficult to perceive at first glance.  \n\n## Seperability\n\n```{r}\ntitle_year_games <- my_df %>%\n  select(Year, Genre) %>%\n  count(Year, Genre)\n\n\nlibrary(ggplot2)\nlibrary(viridis)  # Load the viridis package for its color palettes\n\n# Enhanced ggplot with the viridis color palette\nggplot(title_year_games, aes(x = Year, y = n, fill = Genre)) +\n  geom_bar(stat = \"identity\", position = \"stack\", color = \"grey80\", size = 0.1) +  # Adding subtle borders\n  scale_fill_viridis_d() +  # Use the viridis discrete color palette\n  theme_minimal(base_size = 12) +  # Adjusting base font size for overall consistency\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1, size = 10, color = \"grey20\"),  # Enhancing x-axis labels\n    axis.text.y = element_text(size = 10, color = \"grey20\"),  # Enhancing y-axis labels\n    axis.title.x = element_text(size = 12, face = \"bold\", margin = margin(t = 10)),  # Styling x-axis title\n    axis.title.y = element_text(size = 12, face = \"bold\", margin = margin(r = 10)),  # Styling y-axis title\n    plot.title = element_text(size = 16, face = \"bold\", hjust = 0.5),  # Centering and emphasizing the plot title\n    legend.position = \"right\",  # Adjusting legend position for better layout\n    legend.title = element_text(size = 12),  # Styling the legend title for clarity\n    legend.text = element_text(size = 10)  # Adjusting legend text size for readability\n  ) +\n  ggtitle(\"Number of Games per Genre per Year\") +\n  xlab(\"Year\") +\n  ylab(\"Number of Games\") +\n  scale_x_discrete(breaks = function(x) x[seq(1, length(x), by = 2)])\n\n```\n\n**Figure 5:** The stacked Bar Chart represents the number of games per genre per year. For marks, I used \"lines\" to present my observations, and my channels are spatial position and color. Looking at the color range it's from dark blue to bright yellow, meaning that with a darker blue color, we have more number games per genre on per year. \n\n```{r}\ntitle_year_games <- my_df %>%\n  select(Year, Genre) %>%\n  count(Year, Genre)\n\nlibrary(ggplot2)\n\n# Example using title_year_games data frame\nggplot(title_year_games, aes(x = Year, y = n, fill = Genre)) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1, size = 10), # Rotate and adjust size of x-axis labels\n    axis.title.x = element_text(size = 12),\n    axis.title.y = element_text(size = 12)\n  ) +\n  ggtitle(\"Number of Games per Genre per Year\") +\n  xlab(\"Year\") +\n  ylab(\"Number of Games\")\n```\n\n**Figure 6:** The stacked Bar Chart represents the number of games per genre per year. For marks, I used \"lines\" to present my observations, and my channels are spatial position and color. Looking at this chart it's difficult to distinguish the number of games per genre for some of the years. \n\n## Popout\n\n```{r}\ntitle_genre<-my_df%>%\n  select(Genre,Name)%>%\n  group_by(Genre, Name)%>%\n  summarise(count=n_distinct(Name))%>%\n  group_by(Genre) %>%\n  summarise(TotalCount = sum(count))\n\nlibrary(ggplot2)\nlibrary(viridis)\n\ntitle_genre$Genre <- reorder(title_genre$Genre, title_genre$TotalCount)\n\nggplot(data = title_genre, aes(x = Genre, y = TotalCount, fill = Genre)) +\n  geom_col(color = \"black\", width = 0.7) +\n  scale_fill_viridis_d(option = \"plasma\", begin = 0.1, end = 0.9) +  # Applying a vibrant color palette with good contrast\n  ggtitle(\"Genre Distribution\") +\n  xlab(\"Genre\") +\n  ylab(\"Game Titles\") +\n  theme_minimal(base_size = 12) +  # Using a minimal theme with a base font size for better readability\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 18, face = \"bold\", color = \"grey20\"),  # Centered and bold title with adjusted color\n    axis.title = element_text(size = 14, face = \"bold\", color = \"grey20\"),  # Bold and slightly larger axis titles for clarity\n    axis.text.x = element_text(angle = 45, hjust = 1, size = 12, color = \"grey20\", vjust = 1),  # Adjusted x-axis labels for better legibility\n    axis.text.y = element_text(size = 12, color = \"grey20\"),  # Y-axis labels with adjusted size and color\n    legend.position = \"none\"  # Removing the legend since the fill color is directly linked to the x-axis labels\n  )\n\n```\n\n**Figure 7:** The Bar Chart represents the number of game titles per genre. For marks, I used \"lines\" to present my observations, and my channels are spatial position and color. Looking at the color range it's from dark purple to bright yellow, meaning that a dark blue color, is the least number of game titles per genre and bright yellow is for the highest number of game titles for that genre w. It is also in order from least number to highest number of game titles per genre. \n\n\n```{r}\ntitle_genre<-my_df%>%\n  select(Genre,Name)%>%\n  group_by(Genre, Name)%>%\n  summarise(count=n_distinct(Name))%>%\n  group_by(Genre) %>%\n  summarise(TotalCount = sum(count))\n\n\nggplot(data = title_genre, aes(x = Genre, y = TotalCount, fill = Genre)) +\n  geom_col(color = \"black\", width = 0.7) +\n  ggtitle(\"Genre Distribution\") +\n  xlab(\"Genre\") +\n  ylab(\"Game Titles\") +\n  theme_minimal(base_size = 12)\n\n```\n\n**Figure 8:**This Bar Chart represents the number of game titles per genre. For marks, I used \"lines\" to present my observations, and my channels are spatial position and color. The color scheme and the order of the game titles per genre don't help to perceive the lowest game titles, for example, the ones that have the same quantity of game titles in different genres, you have to search for them to be able to identify them. The color scheme doesn't give that pop out to easily identify which game title has the lowest quantity per genre. \n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["customstyles.css"],"output-file":"Asig4_2.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","title-block-banner":true,"title":"ASSIGNMENT 4","subtitle":"Marks And Channel","author":"Geraline Trossi-Torres","Date":"2024-02-14","categories":["Assignment","DataViz"],"image":"Profile_2.jpg","description":"Lets Learn about Marks and Channels"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}