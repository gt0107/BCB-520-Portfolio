{
  "hash": "6f7e7eee28e0406408e2182b0bd9e913",
  "result": {
    "markdown": "---\ntitle: ASSIGNMENT 4\nsubtitle: Marks And Channel\nauthor: Geraline Trossi-Torres\nDate: 2024-02-14\ncategories: [Assignment, DataViz]\nimage: Profile_2.jpg\ncode-fold: true\ncode-tools: true\ndescription: Lets Learn about Marks and Channels\n---\n\n\n## Video Games Sales 1983 - 2012\n\nThe data set contains a list of more that 100,000 copies of video games, from the time period of 1983 - 2012. It is a public data set that it can be obtain by the following website [Kaggle - Video Game Sales](https://www.kaggle.com/datasets/gregorut/videogamesales?resource=download)\n\nThe data contains the rank of overall sales, game title, platform of the video game release, year of game release, genre of the game, publisher of game, and sales in the millions for US, Europe, Japan, rest of world wide and total global sales. \n\n### Flat Table - Video Games Sales\n\nWe have a **Flat Table**, the **items** are the rows, wherein each row is the different types of games that has been released from 1983 - 2012. Each item (games) is described by attributes, which are put in columns. Those **attributes** represent: index, rank, game title, platform, year, genre, publisher, US, Europe, Japan, Rest of the Word, Global (total of sales), and reviews. For each column of the different countries represent the total sales from each one in terms of millions in sales.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nmy_df <- read_excel(\"VIdeo_Game_sales.xlsx\")\n\nknitr::kable(head(my_df,10))\n```\n\n::: {.cell-output-display}\n| Rank|Name                      |Platform |Year |Genre        |Publisher | NA_Sales| EU_Sales| JP_Sales| Other_Sales| Global_Sales|\n|----:|:-------------------------|:--------|:----|:------------|:---------|--------:|--------:|--------:|-----------:|------------:|\n|    1|Wii Sports                |Wii      |2006 |Sports       |Nintendo  |    41.49|    29.02|     3.77|        8.46|        82.74|\n|    2|Super Mario Bros.         |NES      |1985 |Platform     |Nintendo  |    29.08|     3.58|     6.81|        0.77|        40.24|\n|    3|Mario Kart Wii            |Wii      |2008 |Racing       |Nintendo  |    15.85|    12.88|     3.79|        3.31|        35.82|\n|    4|Wii Sports Resort         |Wii      |2009 |Sports       |Nintendo  |    15.75|    11.01|     3.28|        2.96|        33.00|\n|    5|Pokemon Red/Pokemon Blue  |GB       |1996 |Role-Playing |Nintendo  |    11.27|     8.89|    10.22|        1.00|        31.37|\n|    6|Tetris                    |GB       |1989 |Puzzle       |Nintendo  |    23.20|     2.26|     4.22|        0.58|        30.26|\n|    7|New Super Mario Bros.     |DS       |2006 |Platform     |Nintendo  |    11.38|     9.23|     6.50|        2.90|        30.01|\n|    8|Wii Play                  |Wii      |2006 |Misc         |Nintendo  |    14.03|     9.20|     2.93|        2.85|        29.02|\n|    9|New Super Mario Bros. Wii |Wii      |2009 |Platform     |Nintendo  |    14.59|     7.06|     4.70|        2.26|        28.62|\n|   10|Duck Hunt                 |NES      |1984 |Shooter      |Nintendo  |    26.93|     0.63|     0.28|        0.47|        28.31|\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n:::\n\n\n### ATTRIBUTE TYPES\n\n* **Categorical:** game title, platform, year, genre, publisher\n* **Ordinal:** Index, ranking\n* **Quantitative:** US (sales in millions), Europe (sales in millions), Japan (sales in millions), rest of the word (sales in millions), global  (sales in millions), reviews in the sales\n\n## Expressiveness and Effectiveness\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlong_df <- pivot_longer(my_df, cols = c(NA_Sales, JP_Sales, EU_Sales, Other_Sales, Global_Sales), \n                        names_to = \"Sales_Type\", values_to = \"Sales\")\n\nggplot(long_df, aes(x=Genre, y=Sales, color=Sales_Type, shape=Sales_Type)) +\n  geom_boxplot(alpha=0.5) +\n  geom_jitter(width=0.2, height=0, size=2.5) +\n  theme_minimal(base_size = 14) +\n  ggtitle(\"Comparative Video Game Sales by Genre across Regions\") +\n  xlab(\"Video Game Genre\") + ylab(\"Sales (Millions)\") +\n  theme(axis.text.x = element_text(angle = 45, vjust = 0.5),\n        legend.title = element_blank(),\n        plot.title = element_text(face = \"bold\", size = 16),\n        axis.title = element_text(size = 14)) +\n  scale_color_brewer(palette = \"Set3\") +\n  guides(shape = guide_legend(override.aes = list(size = 6)))\n```\n\n::: {.cell-output-display}\n![](Asig4_2_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n**Figure 1:** This is so bab. You cant see shit, and the color scheme so fucking terrible\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyr)\nlibrary(ggplot2)\n\nlong_df <- pivot_longer(my_df, cols = c(NA_Sales, JP_Sales, EU_Sales, Other_Sales, Global_Sales), \n                        names_to = \"Sales_Type\", values_to = \"Sales\")\n\nggplot(long_df, aes(x=Genre, y=Sales, color=Sales_Type)) +\n  geom_boxplot(alpha=0.5) +\n  geom_jitter(width=0.2, height=0, size=1.5) +\n  theme_minimal() +\n  ggtitle(\"Sales By Genre\") +\n  xlab(\"Genre\") + ylab(\"Sales\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12))\n```\n\n::: {.cell-output-display}\n![](Asig4_2_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n**Figure 2:** \n\n## Discriminability\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(my_df, aes(x = Platform, fill = Platform)) +\n  geom_bar(color = \"black\", width = 0.7) +\n  ggtitle(\"Platform Distribution\") +\n  xlab(\"Platform\") +\n  ylab(\"Game Titles\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5),\n        axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](Asig4_2_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n**Figure 3:** \n\n\n::: {.cell}\n\n```{.r .cell-code}\ntitle_platform<-my_df%>%\n  select(Platform,Name)%>%\n  group_by(Platform, Name)%>%\n  summarise(count=n_distinct(Name))%>%\n  group_by(Platform) %>%\n  summarise(TotalCount = sum(count))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'Platform'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nsuppressMessages({title_platform<-my_df%>%\n  select(Platform,Name)%>%\n  group_by(Platform,Name)%>%\n  summarise(count=n_distinct(Name))%>%\n  group_by(Platform) %>%\n  summarise(TotalCount = sum(count))})\n\nlibrary(ggplot2)\n\ntitle_platform$Platform <- reorder(title_platform$Platform, title_platform$TotalCount)\n\nggplot(data = title_platform, aes(x = Platform, y = TotalCount, fill = Platform)) +\n  geom_col(color = \"black\", width = 0.7) +\n  ggtitle(\"Platform Distribution\") +\n  xlab(\"Platform\") +\n  ylab(\"Game Titles\") +\n  scale_fill_viridis_d() +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5),\n        axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](Asig4_2_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n**Figure 4:** \n\n## Seperability\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntitle_plubisher<-my_df%>%\n  select(Publisher,Name)%>%\n  group_by(Publisher, Name)%>%\n  summarise(count=n_distinct(Name))%>%\n  group_by(Publisher) %>%\n  summarise(TotalCount = sum(count))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'Publisher'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\n# Assuming title_publisher is the result from the previous aggregation\ntitle_publisher <- my_df %>%\n  select(Publisher, Name) %>%\n  distinct(Publisher, Name) %>%\n  count(Publisher, name = \"TotalTitles\")\n\n# Create a basic bar plot\nggplot(title_publisher, aes(x = reorder(Publisher, TotalTitles), y = TotalTitles, fill = Publisher)) +\n  geom_bar(stat = \"identity\") +\n  theme_minimal() +\n  labs(x = \"Publisher\", y = \"Total Number of Distinct Titles\", title = \"Distinct Titles per Publisher\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +\n  guides(fill=FALSE) # Remove the legend if it's redundant\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\nof ggplot2 3.3.4.\n```\n:::\n\n::: {.cell-output-display}\n![](Asig4_2_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- data.frame(\n  Genre = c(\"Action\", \"Action\", \"Adventure\", \"Adventure\", \"Sports\", \"Sports\"),\n  Region = c(\"NA\", \"EU\", \"NA\", \"EU\", \"NA\", \"EU\"),\n  Sales = c(300, 150, 80, 40, 200, 100)\n)\n\nlibrary(ggplot2)\n\nggplot(df, aes(x = Genre, y = Sales, fill = Region)) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  ggtitle(\"Sales by Genre and Region\") +\n  xlab(\"Genre\") + ylab(\"Sales\")\n```\n\n::: {.cell-output-display}\n![](Asig4_2_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(df, aes(x = Genre, y = Sales, fill = Region)) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  scale_fill_brewer(palette = \"Pastel1\") + # Custom color scheme\n  ggtitle(\"Sales by Genre and Region\") +\n  xlab(\"Genre\") + ylab(\"Sales\") +\n  theme_minimal() + # Minimalist theme\n  theme(legend.title = element_blank()) # Remove legend title\n```\n\n::: {.cell-output-display}\n![](Asig4_2_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n:::\n\n\n**Figure 5:** \n**Figure 6:** \n\n## Popout\n\n\n\n\n\n**Figure 7:** \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(reshape2)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'reshape2'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:tidyr':\n\n    smiths\n```\n:::\n\n```{.r .cell-code}\ntitle_sales <- my_df %>%\n  select(Genre,NA_Sales, EU_Sales, JP_Sales) %>%\n  group_by(Genre)\n\ntitle_sales <- melt(title_sales, id.vars = \"Genre\", measure.vars = c(\"NA_Sales\",\"EU_Sales\",\"JP_Sales\"))\n\nggplot(data = title_sales, aes(x = Genre, y = value, fill = variable)) +\n  geom_col(position = \"dodge\", color = \"black\", width = 0.7) +\n  ggtitle(\"Sales by Genre\") +\n  xlab(\"Genre\") +\n  ylab(\"Sales (per million)\") +\n  scale_fill_manual(values = c( \"NA_Sales\"=\"magenta\",\"EU_Sales\" = \"purple\", \"JP_Sales\" = \"lightpink\")) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5),\n        axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](Asig4_2_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n**Figure 8:**\n",
    "supporting": [
      "Asig4_2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}