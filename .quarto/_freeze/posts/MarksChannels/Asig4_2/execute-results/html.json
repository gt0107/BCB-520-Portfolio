{
  "hash": "b51e51dc7f2e64d7fcb1687bb00dbd75",
  "result": {
    "markdown": "---\ntitle: ASSIGNMENT 4\nsubtitle: Marks And Channel\nauthor: Geraline Trossi-Torres\nDate: 2024-02-14\ncategories: [Assignment, DataViz]\nimage: Profile_2.jpg\ncode-fold: true\ncode-tools: true\ndescription: Lets Learn about Marks and Channels\n---\n\n\n## Video Games Sales 1980 - 2020\n\nThe data set contains a list of more that 100,000 copies of video games, from the time period of 1983 - 2012. It is a public data set that it can be obtain by the following website [Kaggle - Video Game Sales](https://www.kaggle.com/datasets/gregorut/videogamesales?resource=download)\n\nThe data contains the rank of overall sales, game title, platform of the video game release, year of game release, genre of the game, publisher of game, and sales in the millions for US, Europe, Japan, rest of world wide and total global sales. \n\n### Flat Table - Video Games Sales\n\nWe have a **Flat Table**, the **items** are the rows, wherein each row is the different types of games that has been released from 1983 - 2012. Each item (games) is described by attributes, which are put in columns. Those **attributes** represent: index, rank, game title, platform, year, genre, publisher, US, Europe, Japan, Rest of the Word, Global (total of sales), and reviews. For each column of the different countries represent the total sales from each one in terms of millions in sales.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nmy_df <- read_excel(\"VIdeo_Game_sales.xlsx\")\n\nknitr::kable(head(my_df,10))\n```\n\n::: {.cell-output-display}\n| Rank|Name                      |Platform |Year |Genre        |Publisher | NA_Sales| EU_Sales| JP_Sales| Other_Sales| Global_Sales|\n|----:|:-------------------------|:--------|:----|:------------|:---------|--------:|--------:|--------:|-----------:|------------:|\n|    1|Wii Sports                |Wii      |2006 |Sports       |Nintendo  |    41.49|    29.02|     3.77|        8.46|        82.74|\n|    2|Super Mario Bros.         |NES      |1985 |Platform     |Nintendo  |    29.08|     3.58|     6.81|        0.77|        40.24|\n|    3|Mario Kart Wii            |Wii      |2008 |Racing       |Nintendo  |    15.85|    12.88|     3.79|        3.31|        35.82|\n|    4|Wii Sports Resort         |Wii      |2009 |Sports       |Nintendo  |    15.75|    11.01|     3.28|        2.96|        33.00|\n|    5|Pokemon Red/Pokemon Blue  |GB       |1996 |Role-Playing |Nintendo  |    11.27|     8.89|    10.22|        1.00|        31.37|\n|    6|Tetris                    |GB       |1989 |Puzzle       |Nintendo  |    23.20|     2.26|     4.22|        0.58|        30.26|\n|    7|New Super Mario Bros.     |DS       |2006 |Platform     |Nintendo  |    11.38|     9.23|     6.50|        2.90|        30.01|\n|    8|Wii Play                  |Wii      |2006 |Misc         |Nintendo  |    14.03|     9.20|     2.93|        2.85|        29.02|\n|    9|New Super Mario Bros. Wii |Wii      |2009 |Platform     |Nintendo  |    14.59|     7.06|     4.70|        2.26|        28.62|\n|   10|Duck Hunt                 |NES      |1984 |Shooter      |Nintendo  |    26.93|     0.63|     0.28|        0.47|        28.31|\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n:::\n\n\n### ATTRIBUTE TYPES\n\n* **Categorical:** game title, platform, year, genre, publisher\n* **Ordinal:** Index, ranking\n* **Quantitative:** US (sales in millions), Europe (sales in millions), Japan (sales in millions), rest of the word (sales in millions), global  (sales in millions), reviews in the sales\n\n## Expressiveness and Effectiveness\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyr)\nlibrary(ggplot2)\n\nlong_df <- pivot_longer(my_df, cols = c(NA_Sales, JP_Sales, EU_Sales), \n                        names_to = \"Sales_Type\", values_to = \"Sales\")\n\nggplot(long_df, aes(x=Genre, y=Sales, color=Sales_Type)) +\n  geom_boxplot(alpha=0.5) +\n  geom_jitter(width=0.2, height=0, size=1.5) +\n  theme_minimal(base_size = 14) +\n  ggtitle(\"Comparative Video Game Sales by Genre across Regions\") +\n  xlab(\"Video Game Genre\") + ylab(\"Sales (Millions)\") +\n  theme(axis.text.x = element_text(angle = 45, vjust = 0.5),\n        legend.title = element_blank(),\n        plot.title = element_text(face = \"bold\", size = 16),\n        axis.title = element_text(size = 14))\n```\n\n::: {.cell-output-display}\n![](Asig4_2_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n**Figure 1:** It's a Jitter plot that represents the individual data points for video game sales (in millions) by their Genre from different Regions; these regions are NA (North America), EU (Europe), and JP (Japan). For marks I used Points to present my observations, and my channels are spatial position, shape and color.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlong_df <- pivot_longer(my_df, cols = c(NA_Sales, JP_Sales, EU_Sales, Other_Sales, Global_Sales), \n                        names_to = \"Sales_Type\", values_to = \"Sales\")\n\nggplot(long_df, aes(x=Genre, y=Sales, color=Sales_Type, shape=Sales_Type)) +\n  geom_boxplot(alpha=0.5) +\n  geom_jitter(width=0.2, height=0, size=2.5) +\n  theme_minimal(base_size = 14) +\n  ggtitle(\"Comparative Video Game Sales by Genre across Regions\") +\n  xlab(\"Video Game Genre\") + ylab(\"Sales (Millions)\") +\n  theme(axis.text.x = element_text(angle = 45, vjust = 0.5),\n        legend.title = element_blank(),\n        plot.title = element_text(face = \"bold\", size = 16),\n        axis.title = element_text(size = 14)) +\n  scale_color_brewer(palette = \"Set3\") +\n  guides(shape = guide_legend(override.aes = list(size = 6)))\n```\n\n::: {.cell-output-display}\n![](Asig4_2_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n**Figure 2:** For this second Jitter plot, I added more regions to compare the video game sales (in millions), so now we have the regions NA (North America), EU (Europe), JP (Japan), Other (other countries), and Global. The marks is still the same as the previous plot, but my channels I distorded. I changed the shape for each of the individual regions and its color. These makes it more distorted to understand the data.\n\n## Discriminability\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntitle_platform<-my_df%>%\n  select(Platform,Name)%>%\n  group_by(Platform, Name)%>%\n  summarise(count=n_distinct(Name))%>%\n  group_by(Platform) %>%\n  summarise(TotalCount = sum(count))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'Platform'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nsuppressMessages({title_platform<-my_df%>%\n  select(Platform,Name)%>%\n  group_by(Platform,Name)%>%\n  summarise(count=n_distinct(Name))%>%\n  group_by(Platform) %>%\n  summarise(TotalCount = sum(count))})\n\nlibrary(ggplot2)\n\ntitle_platform$Platform <- reorder(title_platform$Platform, title_platform$TotalCount)\n\nlibrary(ggplot2)\n\nlibrary(ggplot2)\n\nggplot(data = title_platform, aes(x = Platform, y = TotalCount, fill = Platform)) +\n  geom_col(color = \"black\", width = 0.7) +\n  ggtitle(\"Comparative Distribution of Game Titles Across Platforms\") +\n  xlab(\"Platform\") + ylab(\"Game Titles\") +\n  scale_fill_viridis_d() +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 16),\n    axis.title = element_text(size = 14),\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"none\"\n  )\n```\n\n::: {.cell-output-display}\n![](Asig4_2_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n**Figure 3:** It's a Bar plot that represents the distribution of game title counts across from different platforms. For marks, I used \"lines\" to present my observations, and my channels are spatial position and color. The game title counts are ordered from lowest to highest according to their platform. It helps us to perceive how many games there are for each platform. Looking at the color range it's from dark blue to bright yellow, meaning that with a brighter color, we have more game titles for that specific platform. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(my_df, aes(x = Platform, fill = Platform)) +\n  geom_bar(color = \"black\", width = 0.7) +\n  ggtitle(\"Platform Distribution\") +\n  xlab(\"Platform\") +\n  ylab(\"Game Titles\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5),\n        axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](Asig4_2_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n**Figure 4:** This second Bar plot is the same representation for the distribution of game title counts across from different platforms. I used the same marks and channels from the previous figure. The difference from the previous figure is that there's no order between game title counts regarding to platform. The color scheme has no meaning that helps as a guide to perceive the highest and lowest count, which just makes it difficult to perceive at first glance.  \n\n## Seperability\n\n\n::: {.cell}\n\n:::\n\n\n**Figure 5:** \n\n\n::: {.cell}\n\n```{.r .cell-code}\ntitle_year_games <- my_df %>%\n  select(Year, Genre) %>%\n  count(Year, Genre)\n\nlibrary(ggplot2)\n\nggplot(title_year_games, aes(x = Year, y = n, fill = Genre)) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1, size = 10), # Rotate and adjust size of x-axis labels\n    axis.title.x = element_text(size = 12),\n    axis.title.y = element_text(size = 12)\n  ) +\n  ggtitle(\"Number of Games per Genre per Year\") +\n  xlab(\"Year\") +\n  ylab(\"Number of Games\")\n```\n\n::: {.cell-output-display}\n![](Asig4_2_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n**Figure 6:** The stacked Bar Chart represents the number of games per genre per year. For marks, I used \"lines\" to present my observations, and my channels are spatial position and color. Looking at this chart it's difficult to distinguish the number of games per genre for some of the years. \n\n## Popout\n\n**Figure 7:** \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(reshape2)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'reshape2'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:tidyr':\n\n    smiths\n```\n:::\n\n```{.r .cell-code}\ntitle_sales <- my_df %>%\n  select(Genre,NA_Sales, EU_Sales, JP_Sales) %>%\n  group_by(Genre)\n\ntitle_sales <- melt(title_sales, id.vars = \"Genre\", measure.vars = c(\"NA_Sales\",\"EU_Sales\",\"JP_Sales\"))\n\nggplot(data = title_sales, aes(x = Genre, y = value, fill = variable)) +\n  geom_col(position = \"dodge\", color = \"black\", width = 0.7) +\n  ggtitle(\"Sales by Genre\") +\n  xlab(\"Genre\") +\n  ylab(\"Sales (per million)\") +\n  scale_fill_manual(values = c( \"NA_Sales\"=\"magenta\",\"EU_Sales\" = \"purple\", \"JP_Sales\" = \"lightpink\")) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5),\n        axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](Asig4_2_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n**Figure 8:**\n",
    "supporting": [
      "Asig4_2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}