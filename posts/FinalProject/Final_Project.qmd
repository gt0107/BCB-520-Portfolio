---
title: "BCB 520 - FINAL PROJECT"
subtitle: "Let's get into Rainfall Data of Puerto Rico"
format:
  html:
    toc: false
    echo: true
author: "Geraline Tross-Torres"
date: "2024-04-28"
categories: [Portfolio, DataViz, Assignment]
image: "RainFall.png"
description: "How much Rainfall did Puerto Rico had in the last 15 years"
code-fold: true
code-tools: true
execute: 
  warning: false

---

## Preamble

## Data

```{r, include=FALSE}
library(ggplot2)
library(sf)
library(tigris)
library(dplyr)
library(rnaturalearth)
library(rnaturalearthdata)
library(dplyr)
library(rnaturalearthhires)
library(plotly)
library(readxl)
library(dplyr)
library (knitr)
library(plotly)
library(maps)
library(tidyverse)
```

The data set was acquired by the database of **National Centers for Environmental Information - National Oceanic and Atmospheric Administration (NOAA)**. https://www.ncei.noaa.gov/access/search/data-search/daily-summaries

### Data Table

```{r}
DataTable <- read_xlsx("geraline_data_mm.xlsx")
# Assuming you want to select only the first 10 columns from DataTable
selected_columns <- DataTable[, 1:10]

# Displaying the selected columns using knitr::kable()
knitr::kable(head(selected_columns))

```

```{r}
library(dplyr)

# Read the data
rainfallprwide <- read_excel('geraline_data_mm.xlsx')

# Extract years from column names
years <- as.character(2009:2023)

# Convert the numeric columns to numeric type
rainfallprwide[,-(1:5)] <- lapply(rainfallprwide[,-(1:5)], as.numeric)

# Calculate total rainfall for each station for each year individually
station_year_total_rainfall <- rainfallprwide %>%
  group_by(STATION, LATITUDE, LONGITUDE, NAME) %>%
  summarise(across(all_of(years), ~sum(.x, na.rm = TRUE), .names = "Total_Rainfall_{.col}"))
```

## Visualizations

### Base Map of Puerto Rico
```{r}
# Get the spatial data for countries
countries <- ne_countries(scale = "medium", returnclass = "sf")

# Filter the dataset to extract Puerto Rico
puerto_rico <- subset(countries, admin == "Puerto Rico")

# Plot Puerto Rico's geometry
ggplot() +
  geom_sf(data = puerto_rico) +
  theme_void()
```

### Can you see Puerto Rico?

```{r}
# Read the data
rainfallprwide <- read_excel('geraline_data_mm.xlsx')

stations <- rainfallprwide %>%
  select(STATION, LATITUDE, LONGITUDE, NAME)%>%
  unique()

g <- list(
  scope = 'north america',
  center = list(lat = 18.2208, lon = -66.5901),  # Centered on Puerto Rico
  projection = list(type = 'mercator'),
  showland = TRUE,
  landcolor = "rgb(220, 220, 220)",  # Light gray
  subunitcolor = "rgb(200, 200, 200)",  # Light gray
  countrycolor = "rgb(200, 200, 200)",  # Light gray
  countrywidth = 0.5,
  subunitwidth = 0.5
)

 plot_geo(stations, lat = ~LATITUDE, lon = ~LONGITUDE) %>%
  add_markers(
    text = ~NAME,
    symbol = I("circle"),
    size = I(10),
    hoverinfo = "text"
  ) %>%
  layout(
    title = 'NOAA Stations - Puerto Rico',
    geo = g
  )

```

### Combination of ggplot Base Map + Plotly

```{r}
# Get the map data for Puerto Rico
map_data <- map_data("world", region = "Puerto Rico")

# Create the base map with ggplot2
base_map <- ggplot() +
  geom_polygon(data = map_data, aes(x = long, y = lat, group = group), fill = "lightgray", color = "black") +
  coord_map() +
  ggtitle("NOAA Stations - Puerto Rico") +
  theme(plot.title = element_text(hjust = 0.5),  # Centering title
        axis.title.x = element_text(size = 12, face = "bold", color = "black"),  # Customizing x-axis label
        axis.title.y = element_text(size = 12, face = "bold", color = "black"))  # Customizing y-axis label

# Convert the base map to a Plotly object
plotly_map <- ggplotly(base_map)

# Assuming 'stations' is your data frame and it has columns 'LATITUDE', 'LONGITUDE', and 'NAME'
# Add station markers to the Plotly map
 plotly_map %>%
  add_markers(
    data = stations,
    x = ~LONGITUDE,
    y = ~LATITUDE,
    text = ~NAME,
    marker = list(
      symbol = "circle",  # Change the symbol to square
      color = "navy",     # Change the color to blue
      size = 10           # Change the size to 10
    ),
    hoverinfo = "text"
  ) 
```

### Applying Rainfall Data of January 2009

```{r}
#2009
# Read the data
rainfallprwide <- read_excel('geraline_data_mm.xlsx')

# Create the stations data frame and filter for month 1
stations_rain <- rainfallprwide %>%
  filter(MONTH == 1) %>%
  select(STATION, LATITUDE, LONGITUDE, NAME, MONTH, "2009") %>%
  unique()

# Extract years from column names
years <- as.character(2009:2023)

# Convert the numeric columns to numeric type
rainfallprwide[,-(1:5)] <- lapply(rainfallprwide[,-(1:5)], as.numeric)

# Calculate total rainfall for each station for each year individually
station_year_total_rainfall <- rainfallprwide %>%
  group_by(STATION, LATITUDE, LONGITUDE, NAME) %>%
  summarise(across(all_of(years), ~sum(.x, na.rm = TRUE), .names = "Total_Rainfall_{.col}"))

base_map_2 <- ggplot() +
  geom_polygon(data = map_data, aes(x = long, y = lat, group = group), fill = "lightgray", color = "black") +
  coord_map() +
  ggtitle("Rainfall for January 2009") +
  theme(plot.title = element_text(hjust = 0.5),  # Centering title
        axis.title.x = element_text(size = 12, face = "bold", color = "black"),  # Customizing x-axis label
        axis.title.y = element_text(size = 12, face = "bold", color = "black"))  # Customizing y-axis label


# Convert the base map to a Plotly object
plotly_map <- ggplotly(base_map_2)

# Assuming 'stations_rain' is your data frame and it has columns 'LATITUDE', 'LONGITUDE', 'NAME', and '2009'
# Add station markers to the Plotly map with size based on rainfall in 2009
 plotly_map %>%
  add_markers(
    data = station_year_total_rainfall,
    x = ~LONGITUDE,
    y = ~LATITUDE,
    text = ~NAME,
    marker = list(
      symbol = "circle",       # Change the symbol to square
      color = ~Total_Rainfall_2009 / 100,          # Change the color to blue
      size = ~Total_Rainfall_2009 / 100,
      colorscale = "Blues",
      reversescale = TRUE              # Size based on rainfall in 2009
    ),
    hoverinfo = "text"
  ) 
```

### 15 years of Rainfall in Puerto Rico

```{r}
base_map_3 <- ggplot() +
  geom_polygon(data = map_data, aes(x = long, y = lat, group = group), fill = "lightgray", color = "black") +
  coord_map() +
  ggtitle("15 Years of RainFall in Puerto Rico") +
  theme(plot.title = element_text(hjust = 0.5),  # Centering title
        axis.title.x = element_text(size = 12, face = "bold", color = "black"),  # Customizing x-axis label
        axis.title.y = element_text(size = 12, face = "bold", color = "black"))  # Customizing y-axis label

# Create an empty list to store the plots
plot_list <- list()

# Loop over each year
for (year in 2009:2023) {
  # Create a map for the current year
  plot <- ggplotly(base_map_3) %>%
    add_markers(
      data = station_year_total_rainfall,
      x = ~LONGITUDE,
      y = ~LATITUDE,
      text = ~NAME,
      marker = list(
        symbol = "circle",
        color = station_year_total_rainfall[[paste0("Total_Rainfall_", year)]] / 100,
        size = station_year_total_rainfall[[paste0("Total_Rainfall_", year)]] / 100,
        colorscale = "Blues",
        reversescale = TRUE
      ),
      hoverinfo = "text"
    )
  
  # Add the plot to the list
  plot_list[[year - 2008]] <- plot
}

# Arrange the plots in a grid
subplot(plot_list, nrows = 5)


```

### Conclusions or Summary
