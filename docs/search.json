[
  {
    "objectID": "Index.html",
    "href": "Index.html",
    "title": "BCB-520-BLOG-Portfolio",
    "section": "",
    "text": "ASSIGNMENT 4\n\n\nMarks And Channel\n\n\n\n\nAssignment\n\n\nDataViz\n\n\n\n\nLets Learn about Marks and Channels\n\n\n\n\n\n\nGeraline Trossi-Torres\n\n\n\n\n\n\n  \n\n\n\n\nHockey Analytics\n\n\nVisaulization for Tabular Data\n\n\n\n\nAssignment\n\n\nDataViz\n\n\nVisualization\n\n\n\n\n2024 NHL Draft Picks\n\n\n\n\n\n\nGeraline Trossi-Torres\n\n\n\n\n\n\n  \n\n\n\n\nHockey Analytics\n\n\nVisualizations for Tabular Data\n\n\n\n\nAssignment\n\n\nDataViz\n\n\nVisualization\n\n\n\n\n2024 NHL Draft Picks\n\n\n\n\n\n\nFeb 29, 2024\n\n\nGeraline Trossi-Torres\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nFeb 5, 2024\n\n\nGeraline Trossi-Torres\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/VisualizationTabularDataPart2/Asig5_2.html",
    "href": "posts/VisualizationTabularDataPart2/Asig5_2.html",
    "title": "Hockey Analytics",
    "section": "",
    "text": "In this assignment, we are going to practice creating visualizations for tabular data. Unlike previous assignments, however, this time we will all be using the same data sets. I’m doing this because I want everyone to engage in the same logic process and have the same design objectives in mind."
  },
  {
    "objectID": "posts/VisualizationTabularDataPart2/Asig5_2.html#overview",
    "href": "posts/VisualizationTabularDataPart2/Asig5_2.html#overview",
    "title": "Hockey Analytics",
    "section": "",
    "text": "In this assignment, we are going to practice creating visualizations for tabular data. Unlike previous assignments, however, this time we will all be using the same data sets. I’m doing this because I want everyone to engage in the same logic process and have the same design objectives in mind."
  },
  {
    "objectID": "posts/VisualizationTabularDataPart2/Asig5_2.html#learning-objectives",
    "href": "posts/VisualizationTabularDataPart2/Asig5_2.html#learning-objectives",
    "title": "Hockey Analytics",
    "section": "LEARNING OBJECTIVES",
    "text": "LEARNING OBJECTIVES\n\nDemonstrate that you can manipulate tabular data to facilitate different visualization tasks. The minimum skills are FILTERING, SELECTING, and SUMMARIZING, all while GROUPING these operations as dictated by your data.\nDemonstrate that you can use tabular data to explore, analyze, and choose the most appropriate visualization idioms given a specific motivating question.\nDemonstrate that you can Find, Access, and Integrate additional data in order to fully address the motivating question.\n\nThe scenario below will allow you to complete the assignment. It deals with data that are of the appropriate complexity and extent (number of observations and variables) to challenge you. If you want to use different data (yours or from another source) I am happy to work with you to make that happen!"
  },
  {
    "objectID": "posts/VisualizationTabularDataPart2/Asig5_2.html#scenario",
    "href": "posts/VisualizationTabularDataPart2/Asig5_2.html#scenario",
    "title": "Hockey Analytics",
    "section": "SCENARIO",
    "text": "SCENARIO\nImagine you are a high priced data science consultant. One of your good friends, Cassandra Canuck, is an Assistant General Manager for the Vancouver Canucks, a team in the National Hockey League with a long, long…. long history of futility.\nThis season feels different.\nThe Canucks are currently among the league leaders and appear to be on their way to their first playoff appearance in many years. A few weeks ago, the Vancouver Canucks decided to trade an underperforming player with a high upside and their first round draft pick to the Calgary Flames for Elias Lindholm, a very solid forward that might prove to be the missing piece of their Stanley Cup puzzle. Exciting!\nExcept that now the Canucks are struggling. They’ve lost 4 straight games and have seemingly lost their identity as a team. The fans are questioning whether the trade was worth it. Woe is me!\nFor the purposes of this exercise, let’s set the 2024 NHL draft order using the Tankathon Simulator. The NHL uses a lottery system in which the teams lowest in the standings have the highest odds of getting the first overall pick. This year the Canucks are at the top of the league, and positioned to have the 31st overall pick. According to the simulator, Calgary will pick at number 2 (which is very valuable!), and the Canuck’s pick at 31.\nHere is a screenshot:\n\n\nHere is the question:\nWas the trade worth it? This trade has a high likelihood of becoming what we call a rental. Elias Lindholm is on an expiring contract, meaning Vancouver is guaranteed to hold his contract only through the end of the season. They might be able to extend him, but that depends on the salary cap.\nMeanwhile, Calgary can draft a player at position 31, who may or may not turn out to be of equal or greater value than Lindholm.\nWas the trade worth it? Did Vancouver or Calgary “win” the trade?\nCan we make some visualizations that help us answer this question?\nHere is an article on modeling draft pick value!\nOriginal analysis!\nEric Tulsky’s original paper*"
  },
  {
    "objectID": "posts/VisualizationTabularDataPart2/Asig5_2.html#directions",
    "href": "posts/VisualizationTabularDataPart2/Asig5_2.html#directions",
    "title": "Hockey Analytics",
    "section": "DIRECTIONS",
    "text": "DIRECTIONS\nCreate a new post in your portfolio for this assignment. Call it something cool, like NHL draft analysis, or Hockey Analytics, or John Wick….\nCopy the data files from the repository, and maybe also the .qmd file.\nUse the .qmd file as the backbone of your assignment, changing the code and the markdown text as you go."
  },
  {
    "objectID": "posts/VisualizationTabularDataPart2/Asig5_2.html#the-data",
    "href": "posts/VisualizationTabularDataPart2/Asig5_2.html#the-data",
    "title": "Hockey Analytics",
    "section": "THE DATA",
    "text": "THE DATA\nHow can we evaluate whether trading a first round pick for a rental player is a good idea? One approach is to look at the historical performance of players from various draft positions.\nI’ve created a data set that will allow us to explore player performance as a function of draft position. If you are curious as to how I obtained and re-arranged these data, you can check out that tutorial here. For this assignment, though, I want to focus on the visualizations.\n\n\nCode\nNHLDraft&lt;-read.csv(\"NHLDraft.csv\")\nNHLDictionary&lt;-read_excel(\"NHLDictionary.xlsx\")\n\nknitr::kable(NHLDictionary)\n\n\n\n\n\n\n\n\n\n\nAttribute\nType\nDescription\n\n\n\n\ndraftyear\nOrdinal\nCalendar year in which the player was drafted into the NHL.\n\n\nname\nItem\nFull name of the player.\n\n\nround\nOrdinal\nRound in which the player was drafted (1 to 7).\n\n\noverall\nOrdinal\nOverall draft position of the player (1 to 224)\n\n\npickinRound\nOrdinal\nPosition in which the player was drafted in their round (1 to 32).\n\n\nheight\nQuantitative\nPlayer height in inches.\n\n\nweight\nQuantitative\nPlayer weight in pounds.\n\n\nposition\nCategorical\nPlayer position (Forward, Defense, Goaltender)\n\n\nplayerId\nItem\nUnique ID (key) assigned to each player.\n\n\npostdraft\nOrdinal\nNumber of seasons since being drafted (0 to 20).\n\n\nNHLgames\nQuantitative\nNumber of games played in the NHL in that particular season (regular season is 82 games, playoffs are up to 28 more).\n\n\n\n\n\nIn this case, we have a dataframe with all the drafted players from 2000-2018, their position, their draft year and position, and then rows for each season since being drafted (postdraft). The key variable here is NHLgames, which tells us how many games they played in the NHL each season since being drafted. Whether drafted players even make the NHL, and how many games they play, might be a good proxy to understand the value of a draft pick we just traded away.\n\n\n\n\n\n\nHINT\n\n\n\nIn the GitHub repository there is a file called NHLdraftstats.csv. What’s in there? Can we use that information?"
  },
  {
    "objectID": "posts/VisualizationTabularDataPart2/Asig5_2.html#analytics-regarding-if-the-trade-was-worth-it",
    "href": "posts/VisualizationTabularDataPart2/Asig5_2.html#analytics-regarding-if-the-trade-was-worth-it",
    "title": "Hockey Analytics",
    "section": "ANALYTICS REGARDING IF THE TRADE WAS WORTH IT",
    "text": "ANALYTICS REGARDING IF THE TRADE WAS WORTH IT\n\n\nCode\nlibrary(dplyr)\nlibrary(ggplot2)\n\nNHLdraftstats &lt;- read.csv(\"NHLdraftstats.csv\")\n\n\nElias_stats &lt;- NHLdraftstats %&gt;%\n  filter(name == \"Elias Lindholm\")\n\nggplot(Elias_stats, aes(x=postdraft, y=NHLgames)) +\n  geom_smooth() +  \n  theme_minimal() +\n  ggtitle(\"Elias Lindholm Performance\") +\n  xlab(\"Post Draft Position\") +  \n  ylab(\"NHL Games Played\") + \n  theme(plot.title = element_text(hjust = 0.5))\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\nLabelling. Can we create a solid figure caption and better axis labels for this figure? In your caption, please specify the task(s) the visualizaiton is intended to facilitate, as well as the marks, channels, and key-value pairs used.\n\n\nCode\nlibrary(dplyr)\n\nplayers_stats_2013_2 &lt;- NHLdraftstats %&gt;%\n  filter(draftyear == 2013) %&gt;%\n  filter(name != \"Elias Lindholm\")\n\nggplot(players_stats_2013_2, aes(x=postdraft, y=NHLgames, color=as.factor(round))) +\n  geom_smooth(se=FALSE) +\n  theme_minimal() +\n  ggtitle(\"Overall Players in 2013 by Draft Round\") +\n  xlab(\"Post Draft Position\") +  \n  ylab(\"NHL Games Played\") + \n  theme(plot.title = element_text(hjust = 0.5)) +\n  scale_color_brewer(palette=\"Set1\", name=\"Draft Round\")\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\nLabelling. Can we create a solid figure caption and better axis labels for this figure? In your caption, please specify the task(s) the visualizaiton is intended to facilitate, as well as the marks, channels, and key-value pairs used.\n\nDo these visualizations change as a function of player position?\nIs the number of NHL games played really the best metric to use? What might picks in the range of pick 31 conceivably yield? How often do picks in that range yield players of Elias Lindholm’s value?\n\nI guess we’d better figure out what Elias Lindholm brings to the table.\nCan you find him in our existing data? Can you think of a way to highlight him in the context of number of games played? What other kinds of data might we need to fairly evaluate Lindholm and pick 31?"
  },
  {
    "objectID": "posts/VisualizationTabularDataPart2/Asig5_2.html#conclusion",
    "href": "posts/VisualizationTabularDataPart2/Asig5_2.html#conclusion",
    "title": "Hockey Analytics",
    "section": "CONCLUSION",
    "text": "CONCLUSION\nBased on your visualizations, what would you advise regarding this trade proposal? Why?"
  },
  {
    "objectID": "posts/MarksChannels/Asig4_2.html",
    "href": "posts/MarksChannels/Asig4_2.html",
    "title": "ASSIGNMENT 4",
    "section": "",
    "text": "The data set contains a list of more that 100,000 copies of video games, from the time period of 1983 - 2012. It is a public data set that it can be obtain by the following website Kaggle - Video Game Sales\nThe data contains the rank of overall sales, game title, platform of the video game release, year of game release, genre of the game, publisher of game, and sales in the millions for US, Europe, Japan, rest of world wide and total global sales.\n\n\nWe have a Flat Table, the items are the rows, wherein each row is the different types of games that has been released from 1983 - 2012. Each item (games) is described by attributes, which are put in columns. Those attributes represent: index, rank, game title, platform, year, genre, publisher, US, Europe, Japan, Rest of the Word, Global (total of sales), and reviews. For each column of the different countries represent the total sales from each one in terms of millions in sales.\n\n\nCode\nlibrary(readxl)\nmy_df &lt;- read_excel(\"VIdeo_Game_sales.xlsx\")\n\nknitr::kable(head(my_df,10))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRank\nName\nPlatform\nYear\nGenre\nPublisher\nNA_Sales\nEU_Sales\nJP_Sales\nOther_Sales\nGlobal_Sales\n\n\n\n\n1\nWii Sports\nWii\n2006\nSports\nNintendo\n41.49\n29.02\n3.77\n8.46\n82.74\n\n\n2\nSuper Mario Bros.\nNES\n1985\nPlatform\nNintendo\n29.08\n3.58\n6.81\n0.77\n40.24\n\n\n3\nMario Kart Wii\nWii\n2008\nRacing\nNintendo\n15.85\n12.88\n3.79\n3.31\n35.82\n\n\n4\nWii Sports Resort\nWii\n2009\nSports\nNintendo\n15.75\n11.01\n3.28\n2.96\n33.00\n\n\n5\nPokemon Red/Pokemon Blue\nGB\n1996\nRole-Playing\nNintendo\n11.27\n8.89\n10.22\n1.00\n31.37\n\n\n6\nTetris\nGB\n1989\nPuzzle\nNintendo\n23.20\n2.26\n4.22\n0.58\n30.26\n\n\n7\nNew Super Mario Bros.\nDS\n2006\nPlatform\nNintendo\n11.38\n9.23\n6.50\n2.90\n30.01\n\n\n8\nWii Play\nWii\n2006\nMisc\nNintendo\n14.03\n9.20\n2.93\n2.85\n29.02\n\n\n9\nNew Super Mario Bros. Wii\nWii\n2009\nPlatform\nNintendo\n14.59\n7.06\n4.70\n2.26\n28.62\n\n\n10\nDuck Hunt\nNES\n1984\nShooter\nNintendo\n26.93\n0.63\n0.28\n0.47\n28.31\n\n\n\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\n\n\n\nCategorical: game title, platform, year, genre, publisher\nOrdinal: Index, ranking\nQuantitative: US (sales in millions), Europe (sales in millions), Japan (sales in millions), rest of the word (sales in millions), global (sales in millions), reviews in the sales"
  },
  {
    "objectID": "posts/MarksChannels/Asig4_2.html#video-games-sales-1980---2020",
    "href": "posts/MarksChannels/Asig4_2.html#video-games-sales-1980---2020",
    "title": "ASSIGNMENT 4",
    "section": "",
    "text": "The data set contains a list of more that 100,000 copies of video games, from the time period of 1983 - 2012. It is a public data set that it can be obtain by the following website Kaggle - Video Game Sales\nThe data contains the rank of overall sales, game title, platform of the video game release, year of game release, genre of the game, publisher of game, and sales in the millions for US, Europe, Japan, rest of world wide and total global sales.\n\n\nWe have a Flat Table, the items are the rows, wherein each row is the different types of games that has been released from 1983 - 2012. Each item (games) is described by attributes, which are put in columns. Those attributes represent: index, rank, game title, platform, year, genre, publisher, US, Europe, Japan, Rest of the Word, Global (total of sales), and reviews. For each column of the different countries represent the total sales from each one in terms of millions in sales.\n\n\nCode\nlibrary(readxl)\nmy_df &lt;- read_excel(\"VIdeo_Game_sales.xlsx\")\n\nknitr::kable(head(my_df,10))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRank\nName\nPlatform\nYear\nGenre\nPublisher\nNA_Sales\nEU_Sales\nJP_Sales\nOther_Sales\nGlobal_Sales\n\n\n\n\n1\nWii Sports\nWii\n2006\nSports\nNintendo\n41.49\n29.02\n3.77\n8.46\n82.74\n\n\n2\nSuper Mario Bros.\nNES\n1985\nPlatform\nNintendo\n29.08\n3.58\n6.81\n0.77\n40.24\n\n\n3\nMario Kart Wii\nWii\n2008\nRacing\nNintendo\n15.85\n12.88\n3.79\n3.31\n35.82\n\n\n4\nWii Sports Resort\nWii\n2009\nSports\nNintendo\n15.75\n11.01\n3.28\n2.96\n33.00\n\n\n5\nPokemon Red/Pokemon Blue\nGB\n1996\nRole-Playing\nNintendo\n11.27\n8.89\n10.22\n1.00\n31.37\n\n\n6\nTetris\nGB\n1989\nPuzzle\nNintendo\n23.20\n2.26\n4.22\n0.58\n30.26\n\n\n7\nNew Super Mario Bros.\nDS\n2006\nPlatform\nNintendo\n11.38\n9.23\n6.50\n2.90\n30.01\n\n\n8\nWii Play\nWii\n2006\nMisc\nNintendo\n14.03\n9.20\n2.93\n2.85\n29.02\n\n\n9\nNew Super Mario Bros. Wii\nWii\n2009\nPlatform\nNintendo\n14.59\n7.06\n4.70\n2.26\n28.62\n\n\n10\nDuck Hunt\nNES\n1984\nShooter\nNintendo\n26.93\n0.63\n0.28\n0.47\n28.31\n\n\n\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\n\n\n\nCategorical: game title, platform, year, genre, publisher\nOrdinal: Index, ranking\nQuantitative: US (sales in millions), Europe (sales in millions), Japan (sales in millions), rest of the word (sales in millions), global (sales in millions), reviews in the sales"
  },
  {
    "objectID": "posts/MarksChannels/Asig4_2.html#expressiveness-and-effectiveness",
    "href": "posts/MarksChannels/Asig4_2.html#expressiveness-and-effectiveness",
    "title": "ASSIGNMENT 4",
    "section": "Expressiveness and Effectiveness",
    "text": "Expressiveness and Effectiveness\n\n\nCode\nlibrary(tidyr)\nlibrary(ggplot2)\n\nlong_df &lt;- pivot_longer(my_df, cols = c(NA_Sales, JP_Sales, EU_Sales), \n                        names_to = \"Sales_Type\", values_to = \"Sales\")\n\nggplot(long_df, aes(x=Genre, y=Sales, color=Sales_Type)) +\n  geom_boxplot(alpha=0.5) +\n  geom_jitter(width=0.2, height=0, size=1.5) +\n  theme_minimal(base_size = 14) +\n  ggtitle(\"Comparative Video Game Sales by Genre across Regions\") +\n  xlab(\"Video Game Genre\") + ylab(\"Sales (Millions)\") +\n  theme(axis.text.x = element_text(angle = 45, vjust = 0.5),\n        legend.title = element_blank(),\n        plot.title = element_text(face = \"bold\", size = 16),\n        axis.title = element_text(size = 14))\n\n\n\n\n\nFigure 1: It’s a Jitter plot that represents the individual data points for video game sales (in millions) by their Genre from different Regions; these regions are NA (North America), EU (Europe), and JP (Japan). For marks I used Points to present my observations, and my channels are spatial position, shape and color.\n\n\nCode\nlong_df &lt;- pivot_longer(my_df, cols = c(NA_Sales, JP_Sales, EU_Sales, Other_Sales, Global_Sales), \n                        names_to = \"Sales_Type\", values_to = \"Sales\")\n\nggplot(long_df, aes(x=Genre, y=Sales, color=Sales_Type, shape=Sales_Type)) +\n  geom_boxplot(alpha=0.5) +\n  geom_jitter(width=0.2, height=0, size=2.5) +\n  theme_minimal(base_size = 14) +\n  ggtitle(\"Comparative Video Game Sales by Genre across Regions\") +\n  xlab(\"Video Game Genre\") + ylab(\"Sales (Millions)\") +\n  theme(axis.text.x = element_text(angle = 45, vjust = 0.5),\n        legend.title = element_blank(),\n        plot.title = element_text(face = \"bold\", size = 16),\n        axis.title = element_text(size = 14)) +\n  scale_color_brewer(palette = \"Set3\") +\n  guides(shape = guide_legend(override.aes = list(size = 6)))\n\n\n\n\n\nFigure 2: For this second Jitter plot, I added more regions to compare the video game sales (in millions), so now we have the regions NA (North America), EU (Europe), JP (Japan), Other (other countries), and Global. The marks is still the same as the previous plot, but my channels I distorded. I changed the shape for each of the individual regions and its color. These makes it more distorted to understand the data."
  },
  {
    "objectID": "posts/MarksChannels/Asig4_2.html#discriminability",
    "href": "posts/MarksChannels/Asig4_2.html#discriminability",
    "title": "ASSIGNMENT 4",
    "section": "Discriminability",
    "text": "Discriminability\n\n\nCode\ntitle_platform&lt;-my_df%&gt;%\n  select(Platform,Name)%&gt;%\n  group_by(Platform, Name)%&gt;%\n  summarise(count=n_distinct(Name))%&gt;%\n  group_by(Platform) %&gt;%\n  summarise(TotalCount = sum(count))\n\n\n`summarise()` has grouped output by 'Platform'. You can override using the\n`.groups` argument.\n\n\nCode\nsuppressMessages({title_platform&lt;-my_df%&gt;%\n  select(Platform,Name)%&gt;%\n  group_by(Platform,Name)%&gt;%\n  summarise(count=n_distinct(Name))%&gt;%\n  group_by(Platform) %&gt;%\n  summarise(TotalCount = sum(count))})\n\nlibrary(ggplot2)\n\ntitle_platform$Platform &lt;- reorder(title_platform$Platform, title_platform$TotalCount)\n\nlibrary(ggplot2)\n\nlibrary(ggplot2)\n\nggplot(data = title_platform, aes(x = Platform, y = TotalCount, fill = Platform)) +\n  geom_col(color = \"black\", width = 0.7) +\n  ggtitle(\"Comparative Distribution of Game Titles Across Platforms\") +\n  xlab(\"Platform\") + ylab(\"Game Titles\") +\n  scale_fill_viridis_d() +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 16),\n    axis.title = element_text(size = 14),\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"none\"\n  )\n\n\n\n\n\nFigure 3: It’s a Bar plot that represents the distribution of game title counts across from different platforms. For marks, I used “lines” to present my observations, and my channels are spatial position and color. The game title counts are ordered from lowest to highest according to their platform. It helps us to perceive how many games there are for each platform. Looking at the color range it’s from dark blue to bright yellow, meaning that with a brighter color, we have more game titles for that specific platform.\n\n\nCode\nggplot(my_df, aes(x = Platform, fill = Platform)) +\n  geom_bar(color = \"black\", width = 0.7) +\n  ggtitle(\"Platform Distribution\") +\n  xlab(\"Platform\") +\n  ylab(\"Game Titles\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5),\n        axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\nFigure 4: This second Bar plot is the same representation for the distribution of game title counts across from different platforms. I used the same marks and channels from the previous figure. The difference from the previous figure is that there’s no order between game title counts regarding to platform. The color scheme has no meaning that helps as a guide to perceive the highest and lowest count, which just makes it difficult to perceive at first glance."
  },
  {
    "objectID": "posts/MarksChannels/Asig4_2.html#seperability",
    "href": "posts/MarksChannels/Asig4_2.html#seperability",
    "title": "ASSIGNMENT 4",
    "section": "Seperability",
    "text": "Seperability\n\n\nCode\ntitle_year_games &lt;- my_df %&gt;%\n  select(Year, Genre) %&gt;%\n  count(Year, Genre)\n\n\nlibrary(ggplot2)\nlibrary(viridis)  # Load the viridis package for its color palettes\n\n\nLoading required package: viridisLite\n\n\nCode\n# Enhanced ggplot with the viridis color palette\nggplot(title_year_games, aes(x = Year, y = n, fill = Genre)) +\n  geom_bar(stat = \"identity\", position = \"stack\", color = \"grey80\", size = 0.1) +  # Adding subtle borders\n  scale_fill_viridis_d() +  # Use the viridis discrete color palette\n  theme_minimal(base_size = 12) +  # Adjusting base font size for overall consistency\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1, size = 10, color = \"grey20\"),  # Enhancing x-axis labels\n    axis.text.y = element_text(size = 10, color = \"grey20\"),  # Enhancing y-axis labels\n    axis.title.x = element_text(size = 12, face = \"bold\", margin = margin(t = 10)),  # Styling x-axis title\n    axis.title.y = element_text(size = 12, face = \"bold\", margin = margin(r = 10)),  # Styling y-axis title\n    plot.title = element_text(size = 16, face = \"bold\", hjust = 0.5),  # Centering and emphasizing the plot title\n    legend.position = \"right\",  # Adjusting legend position for better layout\n    legend.title = element_text(size = 12),  # Styling the legend title for clarity\n    legend.text = element_text(size = 10)  # Adjusting legend text size for readability\n  ) +\n  ggtitle(\"Number of Games per Genre per Year\") +\n  xlab(\"Year\") +\n  ylab(\"Number of Games\") +\n  scale_x_discrete(breaks = function(x) x[seq(1, length(x), by = 2)])\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\nFigure 5: The stacked Bar Chart represents the number of games per genre per year. For marks, I used “lines” to present my observations, and my channels are spatial position and color. Looking at the color range it’s from dark blue to bright yellow, meaning that with a darker blue color, we have more number games per genre on per year.\n\n\nCode\ntitle_year_games &lt;- my_df %&gt;%\n  select(Year, Genre) %&gt;%\n  count(Year, Genre)\n\nlibrary(ggplot2)\n\n# Example using title_year_games data frame\nggplot(title_year_games, aes(x = Year, y = n, fill = Genre)) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1, size = 10), # Rotate and adjust size of x-axis labels\n    axis.title.x = element_text(size = 12),\n    axis.title.y = element_text(size = 12)\n  ) +\n  ggtitle(\"Number of Games per Genre per Year\") +\n  xlab(\"Year\") +\n  ylab(\"Number of Games\")\n\n\n\n\n\nFigure 6: The stacked Bar Chart represents the number of games per genre per year. For marks, I used “lines” to present my observations, and my channels are spatial position and color. Looking at this chart it’s difficult to distinguish the number of games per genre for some of the years."
  },
  {
    "objectID": "posts/MarksChannels/Asig4_2.html#popout",
    "href": "posts/MarksChannels/Asig4_2.html#popout",
    "title": "ASSIGNMENT 4",
    "section": "Popout",
    "text": "Popout\n\n\nCode\ntitle_genre&lt;-my_df%&gt;%\n  select(Genre,Name)%&gt;%\n  group_by(Genre, Name)%&gt;%\n  summarise(count=n_distinct(Name))%&gt;%\n  group_by(Genre) %&gt;%\n  summarise(TotalCount = sum(count))\n\n\n`summarise()` has grouped output by 'Genre'. You can override using the\n`.groups` argument.\n\n\nCode\nlibrary(ggplot2)\nlibrary(viridis)\n\ntitle_genre$Genre &lt;- reorder(title_genre$Genre, title_genre$TotalCount)\n\nggplot(data = title_genre, aes(x = Genre, y = TotalCount, fill = Genre)) +\n  geom_col(color = \"black\", width = 0.7) +\n  scale_fill_viridis_d(option = \"plasma\", begin = 0.1, end = 0.9) +  # Applying a vibrant color palette with good contrast\n  ggtitle(\"Genre Distribution\") +\n  xlab(\"Genre\") +\n  ylab(\"Game Titles\") +\n  theme_minimal(base_size = 12) +  # Using a minimal theme with a base font size for better readability\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 18, face = \"bold\", color = \"grey20\"),  # Centered and bold title with adjusted color\n    axis.title = element_text(size = 14, face = \"bold\", color = \"grey20\"),  # Bold and slightly larger axis titles for clarity\n    axis.text.x = element_text(angle = 45, hjust = 1, size = 12, color = \"grey20\", vjust = 1),  # Adjusted x-axis labels for better legibility\n    axis.text.y = element_text(size = 12, color = \"grey20\"),  # Y-axis labels with adjusted size and color\n    legend.position = \"none\"  # Removing the legend since the fill color is directly linked to the x-axis labels\n  )\n\n\n\n\n\nFigure 7: The Bar Chart represents the number of game titles per genre. For marks, I used “lines” to present my observations, and my channels are spatial position and color. Looking at the color range it’s from dark purple to bright yellow, meaning that a dark blue color, is the least number of game titles per genre and bright yellow is for the highest number of game titles for that genre w. It is also in order from least number to highest number of game titles per genre.\n\n\nCode\ntitle_genre&lt;-my_df%&gt;%\n  select(Genre,Name)%&gt;%\n  group_by(Genre, Name)%&gt;%\n  summarise(count=n_distinct(Name))%&gt;%\n  group_by(Genre) %&gt;%\n  summarise(TotalCount = sum(count))\n\n\n`summarise()` has grouped output by 'Genre'. You can override using the\n`.groups` argument.\n\n\nCode\nggplot(data = title_genre, aes(x = Genre, y = TotalCount, fill = Genre)) +\n  geom_col(color = \"black\", width = 0.7) +\n  ggtitle(\"Genre Distribution\") +\n  xlab(\"Genre\") +\n  ylab(\"Game Titles\") +\n  theme_minimal(base_size = 12)\n\n\n\n\n\nFigure 8:This Bar Chart represents the number of game titles per genre. For marks, I used “lines” to present my observations, and my channels are spatial position and color. The color scheme and the order of the game titles per genre don’t help to perceive the lowest game titles, for example, the ones that have the same quantity of game titles in different genres, you have to search for them to be able to identify them. The color scheme doesn’t give that pop out to easily identify which game title has the lowest quantity per genre."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "Hey welcome to Quarto Blog!! Lets get into the Gaming World"
  },
  {
    "objectID": "posts/VisualizationTabularData/Asig5.html",
    "href": "posts/VisualizationTabularData/Asig5.html",
    "title": "Hockey Analytics",
    "section": "",
    "text": "Code\nlibrary(readxl)\nNHL_Drafts &lt;- read_excel(\"NHLDraftsPicks.xlsx\")\n\n\nNew names:\n• `` -&gt; `...1`\n\n\nCode\nknitr::kable(head(NHL_Drafts,10))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n…1\ndraftyear\nname\nround\noverall\npickinRound\nheight\nweight\nposition\nplayerId\npostdraft\nNHLgames\ngoals\nassists\npoints\n\n\n\n\n1\n2001\nDrew Fata\n3\n86\n23\n73\n209\nDefense\n8469535\n10\n0\n0\n0\n0\n\n\n2\n2001\nDrew Fata\n3\n86\n23\n73\n209\nDefense\n8469535\n11\n0\n0\n0\n0\n\n\n3\n2001\nDrew Fata\n3\n86\n23\n73\n209\nDefense\n8469535\n12\n0\n0\n0\n0\n\n\n4\n2001\nDrew Fata\n3\n86\n23\n73\n209\nDefense\n8469535\n13\n0\n0\n0\n0\n\n\n5\n2001\nDrew Fata\n3\n86\n23\n73\n209\nDefense\n8469535\n2\n0\n0\n0\n0\n\n\n6\n2001\nDrew Fata\n3\n86\n23\n73\n209\nDefense\n8469535\n3\n0\n0\n0\n0\n\n\n7\n2001\nDrew Fata\n3\n86\n23\n73\n209\nDefense\n8469535\n5\n3\n1\n0\n1\n\n\n8\n2001\nDrew Fata\n3\n86\n23\n73\n209\nDefense\n8469535\n6\n5\n0\n1\n1\n\n\n9\n2001\nDrew Fata\n3\n86\n23\n73\n209\nDefense\n8469535\n7\n0\n0\n0\n0\n\n\n10\n2001\nDrew Fata\n3\n86\n23\n73\n209\nDefense\n8469535\n8\n0\n0\n0\n0\n\n\n\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors"
  },
  {
    "objectID": "posts/VisualizationTabularData/Asig5.html#data-set-for-nhl-draft-picks",
    "href": "posts/VisualizationTabularData/Asig5.html#data-set-for-nhl-draft-picks",
    "title": "Hockey Analytics",
    "section": "",
    "text": "Code\nlibrary(readxl)\nNHL_Drafts &lt;- read_excel(\"NHLDraftsPicks.xlsx\")\n\n\nNew names:\n• `` -&gt; `...1`\n\n\nCode\nknitr::kable(head(NHL_Drafts,10))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n…1\ndraftyear\nname\nround\noverall\npickinRound\nheight\nweight\nposition\nplayerId\npostdraft\nNHLgames\ngoals\nassists\npoints\n\n\n\n\n1\n2001\nDrew Fata\n3\n86\n23\n73\n209\nDefense\n8469535\n10\n0\n0\n0\n0\n\n\n2\n2001\nDrew Fata\n3\n86\n23\n73\n209\nDefense\n8469535\n11\n0\n0\n0\n0\n\n\n3\n2001\nDrew Fata\n3\n86\n23\n73\n209\nDefense\n8469535\n12\n0\n0\n0\n0\n\n\n4\n2001\nDrew Fata\n3\n86\n23\n73\n209\nDefense\n8469535\n13\n0\n0\n0\n0\n\n\n5\n2001\nDrew Fata\n3\n86\n23\n73\n209\nDefense\n8469535\n2\n0\n0\n0\n0\n\n\n6\n2001\nDrew Fata\n3\n86\n23\n73\n209\nDefense\n8469535\n3\n0\n0\n0\n0\n\n\n7\n2001\nDrew Fata\n3\n86\n23\n73\n209\nDefense\n8469535\n5\n3\n1\n0\n1\n\n\n8\n2001\nDrew Fata\n3\n86\n23\n73\n209\nDefense\n8469535\n6\n5\n0\n1\n1\n\n\n9\n2001\nDrew Fata\n3\n86\n23\n73\n209\nDefense\n8469535\n7\n0\n0\n0\n0\n\n\n10\n2001\nDrew Fata\n3\n86\n23\n73\n209\nDefense\n8469535\n8\n0\n0\n0\n0\n\n\n\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors"
  },
  {
    "objectID": "posts/VisualizationTabularData/Asig5.html#simple-scatterplot",
    "href": "posts/VisualizationTabularData/Asig5.html#simple-scatterplot",
    "title": "Hockey Analytics",
    "section": "SIMPLE SCATTERPLOT",
    "text": "SIMPLE SCATTERPLOT\n\n\nCode\nDraft_2022 &lt;- NHL_Drafts %&gt;%\n  filter(draftyear==2022)\n\n\n\n\nCode\nlibrary(ggplot2)\n\nggplot(Draft_2022, aes(x = round, y = NHLgames)) +\n  geom_point()\n\n\n\n\n\nFigure 1:The players that were drafted in June of 2022 didn’t play to much the last season.\nThings wrong with this Data Visualization:\n1.Overplotting: All those points on the y=0 line represent about 32 players each. Can you think of a way that adding extra channels might help?\n2.Labelling: Can we create a solid figure caption and better axis labels for this figure? In your caption, please specify the task(s) the visualizaiton is intended to facilitate, as well as the marks, channels, and key-value pairs used.\n3.Key-Value pairs: Looks like we are using “round” as a continuous variable. Can we change this to an ordered factor?\n\n\nCode\nlibrary(ggplot2)\nlibrary(ggridges)\n\nDraft_2022$round &lt;- factor(Draft_2022$round, levels = sort(unique(Draft_2022$round)), ordered = TRUE)\n\nggplot(Draft_2022, aes(x = NHLgames, y = round)) +\n  geom_density_ridges(aes(height = ..density..), jittered_points = TRUE, scale = 3) +\n  theme_minimal() +\n  ggtitle(\"NHL 2022 Draft Players Density\") +\n  xlab(\"NHL Games Played\") + \n  ylab(\"Draft Round\")+\n  theme(plot.title = element_text(hjust = 0.5))\n\n\nWarning: The dot-dot notation (`..density..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(density)` instead.\n\n\nPicking joint bandwidth of 0.23\n\n\n\n\n\nFigure 2:specify the task(s) the visualizaiton is intended to facilitate, as well as the marks, channels, and key-value pairs used"
  },
  {
    "objectID": "posts/VisualizationTabularData/Asig5.html#expanded-scatterplot",
    "href": "posts/VisualizationTabularData/Asig5.html#expanded-scatterplot",
    "title": "Hockey Analytics",
    "section": "EXPANDED SCATTERPLOT",
    "text": "EXPANDED SCATTERPLOT\n\n\nCode\nlibrary(dplyr)\nlibrary(ggplot2)\n\nDraft_2018 &lt;- NHL_Drafts %&gt;%\n  filter(draftyear == 2018 & postdraft &lt; 6)\n\nggplot(Draft_2018, aes(x = round, y = NHLgames)) +\n  geom_point()\n\n\n\n\n\nFigure 1:\n\n\nCode\nSummaryDraft2018 &lt;- Draft_2018 %&gt;%\n  group_by(playerId, round, overall, position, name) %&gt;%\n  summarise(totgames=sum(NHLgames))\n\n\n`summarise()` has grouped output by 'playerId', 'round', 'overall', 'position'.\nYou can override using the `.groups` argument.\n\n\nCode\nggplot(SummaryDraft2018, aes(x=round, y=totgames))+\n  geom_point()\n\n\n\n\n\nFigure 2:\n1.Overplotting: All those points on the y=0 line represent about 32 players each. Can you think of a way that adding extra channels might help?\n2.Labelling: Can we create a solid figure caption and better axis labels for this figure? In your caption, please specify the task(s) the visualizaiton is intended to facilitate, as well as the marks, channels, and key-value pairs used.\n3.Key-Value pairs: Looks like we are using “round” as a continuous variable. Can we change this to an ordered factor?\n\n\nCode\nlibrary(dplyr)\nlibrary(ggplot2)\n\nSummaryDraft2018 &lt;- Draft_2018 %&gt;%\n  group_by(playerId, round, overall, position, name) %&gt;%\n  summarise(totgames = sum(NHLgames, na.rm = TRUE), .groups = 'drop')  # Handle NA values\n\nSummaryDraft2018$round &lt;- factor(SummaryDraft2018$round, \n                                 levels = sort(unique(SummaryDraft2018$round)), \n                                 ordered = TRUE)\n\nggplot(SummaryDraft2018, aes(x = round, y = totgames, color = position)) +\n  geom_point() +\n  theme_minimal() +\n  ggtitle(\"Total NHL Games by Draft Round (2018)\") +\n  xlab(\"Draft Round\") +\n  ylab(\"Total NHL Games Played\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\nFigure 3: In your caption, please specify the task(s) the visualization is intended to facilitate, as well as the marks, channels, and key-value pairs used.\n##SCATTERPLOT WITH OVERALL DRAFT POSITION\n\n\nCode\nggplot(SummaryDraft2018, aes(x=overall, y=totgames))+\n  geom_point()\n\n\n\n\n\nFigure 4:\n1.We are trying to address the notion of trading a pick from round 1 for picks from round 2 and 3. Add visual channels to this plot that will help us make that decision.\n2.Create a caption and better axis labels for this figure.\n3.What if we wanted to use more than just the 2018 draft class?\n\n\nCode\nlibrary(ggplot2)\n\nSummaryDraft2018$round &lt;- as.factor(SummaryDraft2018$round)\n\nggplot(SummaryDraft2018, aes(x = overall, y = totgames, fill = round)) +  # Use 'fill' instead of 'color' for the aes\n  geom_point(shape = 21, alpha = 0.6, size = 3, colour = \"black\") +  # shape 21 allows for both fill and color\n  scale_fill_manual(values = c(\"1\" = \"blue\", \"2\" = \"red\", \"3\" = \"green\", \"4\" = \"purple\", \"5\" = \"orange\", \"6\" = \"magenta\", \"7\" = \"gold\")) +\n  theme_minimal() +\n  labs(title = \"Total NHL Games Played by Draft Position\",\n       x = \"Overall Draft Position\",\n       y = \"Total NHL Games Played\",\n       fill = \"Draft Round\") +  # Change 'color' to 'fill' in the legend title\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\nFigure 5:\n\n\nCode\nlibrary(dplyr)\nlibrary(ggplot2)\n\nDraft_2019 &lt;- NHL_Drafts %&gt;%\n  filter(draftyear == 2019 & postdraft &lt; 6)\n\nSummaryDraft2019 &lt;- Draft_2019 %&gt;%\n  group_by(playerId, round, overall, position, name) %&gt;%\n  summarise(totgames = sum(NHLgames, na.rm = TRUE), .groups = 'drop')  # Handle NA values\n\nSummaryDraft2019$round &lt;- factor(SummaryDraft2019$round, \n                                 levels = sort(unique(SummaryDraft2019$round)), \n                                 ordered = TRUE)\n\nSummaryDraft2018$Year &lt;- 2018\nSummaryDraft2019$Year &lt;- 2019\n\nCombinedDrafts &lt;- rbind(SummaryDraft2018, SummaryDraft2019)\n\n\nlibrary(ggplot2)\n\nCombinedDrafts$round &lt;- as.factor(CombinedDrafts$round)\n\n\nggplot(CombinedDrafts, aes(x = overall, y = totgames, fill = as.factor(Year))) +\n  geom_point(shape = 21, alpha = 0.6, size = 3, colour = \"black\") +  \n  scale_fill_manual(values = c(\"2018\" = \"blue\", \"2019\" = \"red\")) +\n  facet_wrap(~ round, ncol = 3) +\n  theme_minimal() +\n  labs(title = \"Total NHL Games Played by Draft Position (2018 & 2019)\",\n       x = \"Overall Draft Position\",\n       y = \"Total NHL Games Played\",\n       fill = \"Draft Year\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\nCode\nggplot(CombinedDrafts, aes(x = overall, y = totgames, color = as.factor(Year))) +\n  geom_point(alpha = 0.6, size = 3) +\n  scale_color_manual(values = c(\"2018\" = \"blue\", \"2019\" = \"red\")) +\n  theme_minimal() +\n  labs(title = \"Total NHL Games Played by Draft Position (2018 & 2019)\",\n       x = \"Overall Draft Position\",\n       y = \"Total NHL Games Played\",\n       color = \"Draft Year\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\nFigure 6:\n##SCATTERPLOT SUMMARY\n\n\nCode\nlibrary(ggplot2)\n\n# Convert 'round' to numeric for plotting (if not already numeric)\nSummaryDraft2018$round_numeric &lt;- as.numeric(as.character(SummaryDraft2018$round))\n\nggplot(SummaryDraft2018, aes(x = round_numeric, y = totgames)) +\n  geom_point() +\n  geom_smooth(method = \"loess\", se = TRUE)  # Using LOESS; for linear model, use method = \"lm\"\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\nCode\nDraftTotal &lt;-NHL_Drafts%&gt;%\n  filter(postdraft&lt;8)%&gt;%\n  group_by(playerId, round, overall, position, name)%&gt;%\n  summarise(totgames=sum(NHLgames))\n\n\n`summarise()` has grouped output by 'playerId', 'round', 'overall', 'position'.\nYou can override using the `.groups` argument.\n\n\n\n\nCode\nggplot(DraftTotal, aes(x = overall, y = totgames)) +\n  geom_smooth()\n\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\n\n\n\n\n\nCode\nGettingTotalDrafts &lt;-NHL_Drafts%&gt;%\n  group_by(playerId, round, overall, position, name)%&gt;%\n  summarise(totgames=sum(NHLgames))\n\n\n`summarise()` has grouped output by 'playerId', 'round', 'overall', 'position'.\nYou can override using the `.groups` argument."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "My name is Geraline Trossi-Torres, I’m a PhD student in Microbiology, Molecular Biology and Biochemistry at the University of Idaho. When not doing research I enjoy playing on my XBOX S or reading a good fantasy and Sci-fi books."
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "About",
    "section": "Education",
    "text": "Education\nBoise State University | Boise, ID\nMS in Biomolecular Sciences | Fall 2020 - Fall 2022\nPontifical Catholic University of Puerto Rico| Ponce, PR\nMS in Biotechnology | Fall 2016 - Spring 2018\nUniversity of Puerto Rico - Ponce | Ponce, PR\nB.S in Biotechnology | Fall 2011 - Spring 2016"
  },
  {
    "objectID": "about.html#experience",
    "href": "about.html#experience",
    "title": "About",
    "section": "Experience",
    "text": "Experience\nBoise State University | Research Technician | January 2023 - June 2023\nBoise State University | Research Assistant | August 2022 - December 2022\nUPR-PRISE Program (NIH-NIGMS RISE) | Program Coordinator | August 2019 - June 2020\nUPR-PRISE Program (NIH-NIGMS RISE) | Research Coordinator | July 2018 - July 2019"
  }
]