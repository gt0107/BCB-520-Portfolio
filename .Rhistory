library(rnaturalearth)
library(rnaturalearthdata)
library(dplyr)
library(rnaturalearthhires)
library(plotly)
library(readxl)
library(dplyr)
library(plotly)
library(ggplot2)
library(maps)
# Get the map data for Puerto Rico
map_data <- map_data("world", region = "Puerto Rico")
# Create the base map with ggplot2
base_map <- ggplot() +
geom_polygon(data = map_data, aes(x = long, y = lat, group = group), fill = "lightgray", color = "black") +
coord_map() +
ggtitle("Map of Puerto Rico")
# Convert the base map to a Plotly object
plotly_map <- ggplotly(base_map)
# Assuming 'stations' is your data frame and it has columns 'LATITUDE', 'LONGITUDE', and 'NAME'
# Add station markers to the Plotly map
plotly_map <- plotly_map %>%
add_markers(
data = stations,
x = ~LONGITUDE,
y = ~LATITUDE,
text = ~NAME,
marker = list(
symbol = "circle",  # Change the symbol to square
color = "navy",     # Change the color to blue
size = 10           # Change the size to 10
),
hoverinfo = "text"
)
# Display the map
print(plotly_map)
library(tidyverse)
library(readxl)
# Read the data
rainfallprwide <- read_excel('geraline_data_mm.xlsx')
# Create the stations data frame and filter for month 1
stations_rain <- rainfallprwide %>%
filter(MONTH == 1) %>%
select(STATION, LATITUDE, LONGITUDE, NAME, MONTH, "2009") %>%
unique()
# Convert the base map to a Plotly object
plotly_map <- ggplotly(base_map)
# Assuming 'stations_rain' is your data frame and it has columns 'LATITUDE', 'LONGITUDE', 'NAME', and '2009'
# Add station markers to the Plotly map with size based on rainfall in 2009
plotly_map <- plotly_map %>%
add_markers(
data = stations_rain,
x = ~LONGITUDE,
y = ~LATITUDE,
text = ~NAME,
marker = list(
symbol = "circle",       # Change the symbol to square
color = "navy",          # Change the color to blue
size = ~`2009`           # Size based on rainfall in 2009
),
hoverinfo = "text"
)
# Display the map
print(plotly_map)
# Read the data
rainfallprwide <- read_excel('geraline_data_mm.xlsx')
library(tidyverse)
library(readxl)
# Read the data
rainfallprwide <- read_excel('geraline_data_mm.xlsx')
# Create the stations data frame and filter for month 1
stations_rain_ <- rainfallprwide %>%
filter(MONTH == 1) %>%
select(STATION, LATITUDE, LONGITUDE, NAME, MONTH, "2009") %>%
unique()
View(rainfallprwide)
# Create the stations data frame and filter for month 1
rainfallaveragetotal <- rainfallprwide %>%
unique()
View(rainfallaveragetotal)
# Create the stations data frame and filter for month 1
rainfallaveragetotal <- rainfallprwide %>%
unique()
View(stations)
# Create the stations data frame and filter for month 1
rainfallaveragetotal <- rainfallprwide %>%
select(STATION, LATITUDE, LONGITUDE, NAME)%>%
unique()
View(rainfallaveragetotal)
# Create the stations data frame and filter for month 1
rainfallaveragetotal <- rainfallprwide %>%
unique()
unique()
library(tidyverse)
library(readxl)
# Read the data
rainfallprwide <- read_excel('geraline_data_mm.xlsx')
# Create the stations data frame and filter for month 1
rainfallaveragetotal <- rainfallprwide %>%
mutate_(ELEVATION)
library(tidyverse)
library(readxl)
# Read the data
rainfallprwide <- read_excel('geraline_data_mm.xlsx')
# Create the stations data frame and filter for month 1
rainfallaveragetotal <- rainfallprwide %>%
mutate(ELEVATION) %>%
unique()
View(rainfallaveragetotal)
library(dplyr)
# Assuming your dataset is named 'rainfallprwide'
# Group the data by station and month, and calculate the average for each year
average_by_station_month_year <- rainfallprwide %>%
group_by(STATION, MONTH) %>%
summarize(
average_2009 = mean(`2009`, na.rm = TRUE),
average_2010 = mean(`2010`, na.rm = TRUE),
# Add more years as needed
.groups = "drop"
)
# Now 'average_by_station_month_year' contains the average rainfall for each station by month for each year.
View(average_by_station_month_year)
library(dplyr)
# Assuming your dataset is named 'rainfallprwide'
# Filter the dataset to include only unique combinations of station and month
unique_station_month <- rainfallprwide %>%
distinct(STATION, MONTH)
# Calculate the average rainfall for each station by month for each year
average_by_station_month_year <- unique_station_month %>%
mutate(
average_2009 = rowMeans(select(rainfallprwide, `2009`), na.rm = TRUE),
average_2010 = rowMeans(select(rainfallprwide, `2010`), na.rm = TRUE),
# Add more years as needed
.keep = "unused"
)
library(dplyr)
# Assuming your dataset is named 'rainfallprwide'
# Filter the dataset to include only unique combinations of station and month
unique_station_month <- rainfallprwide %>%
distinct(STATION, MONTH)
# Calculate the average rainfall for each station by month for each year
average_by_station_month_year <- unique_station_month %>%
mutate(
average_2009 = rowMeans(select(rainfallprwide, `2009`), na.rm = TRUE),
average_2010 = rowMeans(select(rainfallprwide, `2010`), na.rm = TRUE),
# Add more years as needed
.keep = "unused"
)
library(dplyr)
library(dplyr)
# Assuming your dataset is named 'rainfallprwide'
# Filter the dataset to include only unique combinations of station and month
unique_station_month <- rainfallprwide %>%
distinct(STATION, MONTH)
# Calculate the average rainfall for each station by month for each year
average_by_station_month_year <- unique_station_month %>%
mutate(
average_2009 = rowMeans(select(rainfallprwide, `2009`), na.rm = TRUE),
average_2010 = rowMeans(select(rainfallprwide, `2010`), na.rm = TRUE),
# Add more years as needed
.keep = "unused"
)
View(average_by_station_month_year)
# Filter the dataset to include only unique combinations of station and month
unique_station_month <- rainfallprwide %>%
distinct(STATION, MONTH)
View(unique_station_month)
unique()
unique()
library(ggplot2)
library(sf)
library(tigris)
library(dplyr)
library(rnaturalearth)
library(rnaturalearthdata)
library(dplyr)
library(rnaturalearthhires)
library(plotly)
library(readxl)
library(dplyr)
# Load necessary libraries
library(dplyr)
# Read the data
rainfallprwide <- read_excel('geraline_data_mm.xlsx')
# Calculate yearly average rainfall
yearly_avg_rainfall <- rainfallprwide %>%
group_by("Year" = as.character("2009")) %>%  # Group by year (assuming "2009" is the year column)
summarise(Avg_Rainfall = mean("2009", na.rm = TRUE))  # Calculate average rainfall for each year
View(yearly_avg_rainfall)
library(tidyverse)
library(readxl)
library(viridis)
library (plotly)
# Read the data
rainfallprwide <- read_excel('geraline_data_mm.xlsx')
stations <- rainfallprwide %>%
select(STATION, LATITUDE, LONGITUDE, NAME)%>%
unique()
g <- list(
scope = 'north america',
center = list(lat = 18.2208, lon = -66.5901),  # Centered on Puerto Rico
projection = list(type = 'mercator'),
showland = TRUE,
landcolor = "rgb(220, 220, 220)",  # Light gray
subunitcolor = "rgb(200, 200, 200)",  # Light gray
countrycolor = "rgb(200, 200, 200)",  # Light gray
countrywidth = 0.5,
subunitwidth = 0.5
)
plot_geo(stations, lat = ~LATITUDE, lon = ~LONGITUDE) %>%
add_markers(
text = ~NAME,
symbol = I("circle"),
size = I(10),
hoverinfo = "text"
) %>%
layout(
title = 'Rainfall in Puerto Rico Stations',
geo = g
)
library(plotly)
library(ggplot2)
library(maps)
# Get the map data for Puerto Rico
map_data <- map_data("world", region = "Puerto Rico")
# Create the base map with ggplot2
base_map <- ggplot() +
geom_polygon(data = map_data, aes(x = long, y = lat, group = group), fill = "lightgray", color = "black") +
coord_map() +
ggtitle("Map of Puerto Rico")
# Convert the base map to a Plotly object
plotly_map <- ggplotly(base_map)
# Assuming 'stations' is your data frame and it has columns 'LATITUDE', 'LONGITUDE', and 'NAME'
# Add station markers to the Plotly map
plotly_map <- plotly_map %>%
add_markers(
data = stations,
x = ~LONGITUDE,
y = ~LATITUDE,
text = ~NAME,
marker = list(
symbol = "circle",  # Change the symbol to square
color = "navy",     # Change the color to blue
size = 10           # Change the size to 10
),
hoverinfo = "text"
)
# Display the map
print(plotly_map)
library(tidyverse)
library(readxl)
# Read the data
rainfallprwide <- read_excel('geraline_data_mm.xlsx')
# Create the stations data frame and filter for month 1
stations_rain <- rainfallprwide %>%
filter(MONTH == 1) %>%
select(STATION, LATITUDE, LONGITUDE, NAME, MONTH, "2009") %>%
unique()
# Convert the base map to a Plotly object
plotly_map <- ggplotly(base_map)
# Assuming 'stations_rain' is your data frame and it has columns 'LATITUDE', 'LONGITUDE', 'NAME', and '2009'
# Add station markers to the Plotly map with size based on rainfall in 2009
plotly_map <- plotly_map %>%
add_markers(
data = stations_rain,
x = ~LONGITUDE,
y = ~LATITUDE,
text = ~NAME,
marker = list(
symbol = "circle",       # Change the symbol to square
color = "navy",          # Change the color to blue
size = ~`2009`           # Size based on rainfall in 2009
),
hoverinfo = "text"
)
# Display the map
print(plotly_map)
#do the squareroot for the sizes for the circles for the rainfall
# Load necessary libraries
library(dplyr)
# Read the data
rainfallprwide <- read_excel('geraline_data_mm.xlsx')
# Calculate yearly average rainfall
yearly_avg_rainfall <- rainfallprwide %>%
group_by("Year" = as.character("2009")) %>%  # Group by year (assuming "2009" is the year column)
summarise(Avg_Rainfall = mean("2009", na.rm = TRUE))  # Calculate average rainfall for each year
View(yearly_avg_rainfall)
View(rainfallprwide)
# Load necessary libraries
library(dplyr)
# Read the data
rainfallprwide <- read_excel('geraline_data_mm.xlsx')
# Calculate yearly average rainfall
yearly_avg_rainfall <- rainfallprwide %>%
group_by(Year = substr(MONTH, 1, 4)) %>%  # Group by year (assuming "MONTH" contains both year and month)
summarise(Total_Rainfall = sum(`2009`, na.rm = TRUE)) %>%  # Sum up rainfall for each year
mutate(Avg_Rainfall = Total_Rainfall / n())  # Calculate average rainfall for each year
# Print the result
print(yearly_avg_rainfall)
View(yearly_avg_rainfall)
# Load necessary libraries
library(dplyr)
# Load necessary libraries
library(dplyr)
# Read the data
rainfallprwide <- read_excel('geraline_data_mm.xlsx')
# Extract year from the combined year-month column
rainfallprwide <- rainfallprwide %>%
mutate(Year = as.integer(substr(MONTH, 1, 4)))  # Assuming MONTH contains both year and month
# Calculate yearly total and average rainfall
yearly_rainfall <- rainfallprwide %>%
group_by(Year) %>%
summarise(Total_Rainfall = sum(`2009`, na.rm = TRUE),
Avg_Rainfall = mean(`2009`, na.rm = TRUE))
# Print the result
print(yearly_rainfall)
View(yearly_rainfall)
# Create the stations data frame and filter for month 1
stations_rain_avg <- rainfallprwide %>%
filter(MONTH == 1) %>%
select(STATION, LATITUDE, LONGITUDE, NAME, MONTH, "2009", "2010","2011",) %>%
unique()
View(stations_rain_avg)
# Create the stations data frame and filter for month 1
stations_rain_avg <- rainfallprwide %>%
filter(MONTH == 12) %>%
select(STATION, LATITUDE, LONGITUDE, NAME, MONTH, "2009", "2010","2011",) %>%
unique()
View(stations_rain_avg)
# Create the stations data frame and filter for month 1
stations_rain_avg <- rainfallprwide %>%
filter(MONTH == 1-12) %>%
select(STATION, LATITUDE, LONGITUDE, NAME, MONTH, "2009", "2010","2011",) %>%
unique()
View(stations_rain_avg)
# Create the stations data frame and filter for month 1
stations_rain_avg <- rainfallprwide %>%
select(STATION, LATITUDE, LONGITUDE, NAME, MONTH, "2009", "2010","2011",) %>%
unique()
View(stations_rain_avg)
# Load necessary libraries
library(dplyr)
# Read the data
rainfallprwide <- read_excel('geraline_data_mm.xlsx')
# Extract year from the combined year-month column
rainfallprwide <- rainfallprwide %>%
mutate(Year = as.integer(substr(MONTH, 1, 4)))  # Assuming MONTH contains both year and month
# Select relevant columns for each year and unique stations
stations_rain_avg <- rainfallprwide %>%
select(STATION, LATITUDE, LONGITUDE, NAME, Year, "2009", "2010", "2011") %>%
unique()
# Calculate yearly total and average rainfall across stations
yearly_rainfall_avg <- stations_rain_avg %>%
group_by(Year) %>%
summarise(Total_Rainfall = sum(`2009`, na.rm = TRUE),
Avg_Rainfall = mean(`2009`, na.rm = TRUE))  # Adjust column name accordingly
# Print the result
print(yearly_rainfall_avg)
View(stations_rain_avg)
View(yearly_rainfall_avg)
# Load necessary libraries
# Load necessary libraries
library(dplyr)
# Read the data
rainfallprwide <- read_excel('geraline_data_mm.xlsx')
# Calculate total rainfall for each station
station_total_rainfall <- rainfallprwide %>%
group_by(STATION, LATITUDE, LONGITUDE, NAME) %>%
summarise(Total_Rainfall = sum(`2009` + `2010` + `2011`, na.rm = TRUE))
# Print the result
print(station_total_rainfall)
View(station_total_rainfall)
# Load necessary libraries
# Load necessary libraries
library(dplyr)
# Read the data
rainfallprwide <- read_excel('geraline_data_mm.xlsx')
# Calculate total rainfall for each station
station_total_rainfall <- rainfallprwide %>%
group_by(STATION, LATITUDE, LONGITUDE, NAME) %>%
summarise(Total_Rainfall = sum(`2009` + `2010` + `2011`, na.rm = TRUE))
# Print the result
print(station_total_rainfall)
# Load necessary libraries
library(dplyr)
# Read the data
rainfallprwide <- read_excel('geraline_data_mm.xlsx')
# Extract year from the combined year-month column
rainfallprwide <- rainfallprwide %>%
mutate(Year = substr(MONTH, 1, 4))
# Calculate total rainfall for each station for each year
station_year_total_rainfall <- rainfallprwide %>%
group_by(STATION, LATITUDE, LONGITUDE, NAME, Year) %>%
summarise(Total_Rainfall = sum(`2009`, na.rm = TRUE))  # Adjust column name accordingly
# Print the result
print(station_year_total_rainfall)
View(station_total_rainfall)
View(station_year_total_rainfall)
# Load necessary libraries
# Load necessary libraries
library(dplyr)
# Read the data
rainfallprwide <- read_excel('geraline_data_mm.xlsx')
# Calculate total rainfall for each station
station_total_rainfall <- rainfallprwide %>%
group_by(STATION, LATITUDE, LONGITUDE, NAME) %>%
summarise(Total_Rainfall = sum(`2009` + `2010` + `2011`, na.rm = TRUE))
# Print the result
print(station_total_rainfall)
# Load necessary libraries
library(dplyr)
# Read the data
rainfallprwide <- read_excel('geraline_data_mm.xlsx')
# Calculate total rainfall for each station for each year
station_year_total_rainfall <- rainfallprwide %>%
group_by(STATION, LATITUDE, LONGITUDE, NAME, YEAR) %>%
summarise(Total_Rainfall = sum(`2009`, na.rm = TRUE))  # Adjust column name accordingly
View(station_total_rainfall)
# Load necessary libraries
library(dplyr)
# Read the data
rainfallprwide <- read_excel('geraline_data_mm.xlsx')
# Calculate total rainfall for each station for each year individually
station_year_total_rainfall <- rainfallprwide %>%
group_by(STATION, LATITUDE, LONGITUDE, NAME) %>%
summarise(`Total_Rainfall_2009` = sum(`2009`, na.rm = TRUE),
`Total_Rainfall_2010` = sum(`2010`, na.rm = TRUE),
`Total_Rainfall_2011` = sum(`2011`, na.rm = TRUE))
# Print the result
print(station_year_total_rainfall)
View(rainfallprwide)
# Calculate total rainfall for each station for each year individually
station_year_total_rainfall <- rainfallprwide %>%
group_by(STATION, LATITUDE, LONGITUDE, NAME) %>%
summarise(`Total_Rainfall_2009` = sum(`2009`, na.rm = TRUE),
`Total_Rainfall_2010` = sum(`2010`, na.rm = TRUE),
`Total_Rainfall_2011` = sum(`2012`, na.rm = TRUE)
`Total_Rainfall_2011` = sum(`2013`, na.rm = TRUE)
# Load necessary libraries
library(dplyr)
# Read the data
rainfallprwide <- read_excel('geraline_data_mm.xlsx')
# Calculate total rainfall for each station for each year individually
station_year_total_rainfall <- rainfallprwide %>%
group_by(STATION, LATITUDE, LONGITUDE, NAME) %>%
summarise(`Total_Rainfall_2009` = sum(`2009`, na.rm = TRUE),
`Total_Rainfall_2010` = sum(`2010`, na.rm = TRUE),
`Total_Rainfall_2011` = sum(`2012`, na.rm = TRUE),
`Total_Rainfall_2011` = sum(`2013`, na.rm = TRUE),
`Total_Rainfall_2011` = sum(`2014`, na.rm = TRUE),
`Total_Rainfall_2011` = sum(`2015`, na.rm = TRUE),
`Total_Rainfall_2011` = sum(`2016`, na.rm = TRUE),
`Total_Rainfall_2011` = sum(`2017`, na.rm = TRUE),
`Total_Rainfall_2011` = sum(`2018`, na.rm = TRUE),
`Total_Rainfall_2011` = sum(`2019`, na.rm = TRUE),
`Total_Rainfall_2011` = sum(`2020`, na.rm = TRUE),
`Total_Rainfall_2011` = sum(`2021`, na.rm = TRUE),
`Total_Rainfall_2011` = sum(`2022`, na.rm = TRUE),
`Total_Rainfall_2011` = sum(`2023`, na.rm = TRUE))
library(dplyr)
# Read the data
rainfallprwide <- read_excel('geraline_data_mm.xlsx')
# Extract years from column names
years <- as.character(2009:2023)
# Calculate total rainfall for each station for each year individually
station_year_total_rainfall <- rainfallprwide %>%
group_by(STATION, LATITUDE, LONGITUDE, NAME) %>%
summarise(across(all_of(years), ~sum(.x, na.rm = TRUE), .names = "Total_Rainfall_{.col}"))
library(dplyr)
# Read the data
rainfallprwide <- read_excel('geraline_data_mm.xlsx')
# Extract years from column names
years <- as.character(2009:2023)
# Convert the numeric columns to numeric type
rainfallprwide[,-(1:5)] <- lapply(rainfallprwide[,-(1:5)], as.numeric)
# Calculate total rainfall for each station for each year individually
station_year_total_rainfall <- rainfallprwide %>%
group_by(STATION, LATITUDE, LONGITUDE, NAME) %>%
summarise(across(all_of(years), ~sum(.x, na.rm = TRUE), .names = "Total_Rainfall_{.col}"))
# Print the result
print(station_year_total_rainfall)
library(tidyverse)
library(readxl)
library(viridis)
library (plotly)
# Read the data
rainfallprwide <- read_excel('geraline_data_mm.xlsx')
stations <- rainfallprwide %>%
select(STATION, LATITUDE, LONGITUDE, NAME)%>%
unique()
g <- list(
scope = 'north america',
center = list(lat = 18.2208, lon = -66.5901),  # Centered on Puerto Rico
projection = list(type = 'mercator'),
showland = TRUE,
landcolor = "rgb(220, 220, 220)",  # Light gray
subunitcolor = "rgb(200, 200, 200)",  # Light gray
countrycolor = "rgb(200, 200, 200)",  # Light gray
countrywidth = 0.5,
subunitwidth = 0.5
)
plot_geo(stations, lat = ~LATITUDE, lon = ~LONGITUDE) %>%
add_markers(
text = ~NAME,
symbol = I("circle"),
size = I(10),
hoverinfo = "text"
) %>%
layout(
title = 'Rainfall in Puerto Rico Stations',
geo = g
)
