theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12),  # Adjust size of x-axis labels
axis.text.y = element_text(size = 12),  # Adjust size of y-axis labels
legend.text = element_text(size = 12),  # Adjust size of legend text
plot.title = element_text(hjust = 0.5, size = 14))  # Adjust size of plot title
# Calculate total award money for each institution
DOE_total_award_money <- DOE_Compare_Data %>%
group_by(Institution) %>%
summarise(DOE_total_award_money = sum("Amount Awarded to Date"))
# Calculate total award money for each institution
DOE_total_award_money <- DOE_Compare_Data %>%
group_by(Institution) %>%
summarise(DOE_total_award_money = sum(`Amount Awarded to Date`))
View(DOE_total_award_money)
# COMPARISON BETWEEEN USDA - AWARD MONEY
library(dplyr)
library(ggplot2)
# Calculate total award money for each institution
DOE_total_award_money <- DOE_Compare_Data %>%
group_by(Institution) %>%
summarise(DOE_total_award_money = sum(`Amount Awarded to Date`))
library(ggplot2)
ggplot(DOE_total_award_money, aes(x = Institution, y = DOE_total_award_money)) +
geom_bar(stat = "identity", fill = "blue") +
ggtitle("Total of Award Money from USDA Grants") +
xlab("") +
ylab("Total Award Money") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.y = element_text(size = 12),
plot.title = element_text(hjust = 0.5)) +  # Corrected position of plot title
scale_y_continuous(labels = scales::number_format(scale = 1e-6, suffix = "M"))
ggplot(DOE_total_award_money, aes(x = Institution, y = DOE_total_award_money)) +
geom_bar(stat = "identity", fill = "blue") +
ggtitle("Total of Award Money from USDA Grants") +
xlab("") +
ylab("Total Award Money") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12),  # Adjust size of x-axis labels
axis.text.y = element_text(size = 12),  # Adjust size of y-axis labels
legend.text = element_text(size = 12),  # Adjust size of legend text
plot.title = element_text(hjust = 0.5, size = 14))  # Adjust size of plot title
scale_y_continuous(labels = scales::number_format(scale = 1e-6, suffix = "M"))
# COMPARISON BETWEEEN USDA - AWARD MONEY
library(dplyr)
library(ggplot2)
# Calculate total award money for each institution
DOE_total_award_money <- DOE_Compare_Data %>%
group_by(Institution) %>%
summarise(DOE_total_award_money = sum(`Amount Awarded to Date`))
library(ggplot2)
ggplot(DOE_total_award_money, aes(x = Institution, y = DOE_total_award_money)) +
geom_bar(stat = "identity", fill = "blue") +
ggtitle("Total of Award Money from USDA Grants") +
xlab("") +
ylab("Total Award Money") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12),  # Adjust size of x-axis labels
axis.text.y = element_text(size = 12),  # Adjust size of y-axis labels
legend.text = element_text(size = 12),  # Adjust size of legend text
plot.title = element_text(hjust = 0.5, size = 14))  # Adjust size of plot title
scale_y_continuous(labels = scales::number_format(scale = 1e-6, suffix = "M"))
# COMPARISON BETWEEEN USDA - AWARD MONEY
library(dplyr)
library(ggplot2)
# Calculate total award money for each institution
DOE_total_award_money <- DOE_Compare_Data %>%
group_by(Institution) %>%
summarise(DOE_total_award_money = sum(`Amount Awarded to Date`))
library(ggplot2)
ggplot(DOE_total_award_money, aes(x = Institution, y = DOE_total_award_money)) +
geom_bar(stat = "identity", fill = "blue") +
ggtitle("Total of Award Money from USDA Grants") +
xlab("") +
ylab("Total Award Money") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12),  # Adjust size of x-axis labels
axis.text.y = element_text(size = 12),  # Adjust size of y-axis labels
legend.text = element_text(size = 12),  # Adjust size of legend text
plot.title = element_text(hjust = 0.5, size = 14))+  # Adjust size of plot title
scale_y_continuous(labels = scales::number_format(scale = 1e-6, suffix = "M"))
# COMPARISON BETWEEEN USDA - AWARD MONEY
library(dplyr)
library(ggplot2)
# Calculate total award money for each institution
DOE_total_award_money <- DOE_Compare_Data %>%
group_by(Institution) %>%
summarise(DOE_total_award_money = sum(`Amount Awarded to Date`))
library(ggplot2)
ggplot(DOE_total_award_money, aes(x = Institution, y = DOE_total_award_money)) +
geom_bar(stat = "identity", position = "dodge")  +
ggtitle("Total of Award Money from USDA Grants") +
xlab("") +
ylab("Total Award Money") +
scale_fill_manual(values = my_colors) +  # Apply custom colors
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12),  # Adjust size of x-axis labels
axis.text.y = element_text(size = 12),  # Adjust size of y-axis labels
legend.text = element_text(size = 12),  # Adjust size of legend text
plot.title = element_text(hjust = 0.5, size = 14))+  # Adjust size of plot title
scale_y_continuous(labels = scales::number_format(scale = 1e-6, suffix = "M"))
# COMPARISON BETWEEEN USDA - AWARD MONEY
library(dplyr)
library(ggplot2)
# Calculate total award money for each institution
DOE_total_award_money <- DOE_Compare_Data %>%
group_by(Institution) %>%
summarise(DOE_total_award_money = sum(`Amount Awarded to Date`))
# Colors
my_colors <- c("Boise State University" = "orange", "Idaho State University" = "black", "Regents of the University of Idaho" = "gold")
library(ggplot2)
ggplot(DOE_total_award_money, aes(x = Institution, y = DOE_total_award_money)) +
geom_bar(stat = "identity", position = "dodge")  +
ggtitle("Total of Award Money from USDA Grants") +
xlab("") +
ylab("Total Award Money") +
scale_fill_manual(values = my_colors) +  # Apply custom colors
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12),  # Adjust size of x-axis labels
axis.text.y = element_text(size = 12),  # Adjust size of y-axis labels
legend.text = element_text(size = 12),  # Adjust size of legend text
plot.title = element_text(hjust = 0.5, size = 14))+  # Adjust size of plot title
scale_y_continuous(labels = scales::number_format(scale = 1e-6, suffix = "M"))
# COMPARISON BETWEEEN USDA - AWARD MONEY
library(dplyr)
library(ggplot2)
# Calculate total award money for each institution
DOE_total_award_money <- DOE_Compare_Data %>%
group_by(Institution) %>%
summarise(DOE_total_award_money = sum(`Amount Awarded to Date`))
# Colors
my_colors <- c("Boise State University" = "orange", "Idaho State University" = "black", "Regents of the University of Idaho" = "gold")
library(ggplot2)
ggplot(DOE_total_award_money, aes(x = Institution, y = DOE_total_award_money)) +
geom_bar(stat = "identity", position = "dodge", fill = my_colors)  +
ggtitle("Total of Award Money from USDA Grants") +
xlab("") +
ylab("Total Award Money") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12),  # Adjust size of x-axis labels
axis.text.y = element_text(size = 12),  # Adjust size of y-axis labels
legend.text = element_text(size = 12),  # Adjust size of legend text
plot.title = element_text(hjust = 0.5, size = 14)) +  # Adjust size of plot title
scale_y_continuous(labels = scales::number_format(scale = 1e-6, suffix = "M"))
# COMPARISON BETWEEEN USDA - AWARD MONEY
library(dplyr)
library(ggplot2)
# Calculate total award money for each institution
DOE_total_award_money <- DOE_Compare_Data %>%
group_by(Institution) %>%
summarise(DOE_total_award_money = sum(`Amount Awarded to Date`))
# Colors
my_colors <- c("Boise State University" = "orange", "Idaho State University" = "black", "Regents of the University of Idaho" = "gold")
library(ggplot2)
ggplot(DOE_total_award_money, aes(x = Institution, y = DOE_total_award_money)) +
geom_bar(stat = "identity", position = "dodge", fill = my_colors)  +
ggtitle("Total of Award Money from USDA Grants") +
xlab("") +
ylab("Total Award Money") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12),  # Adjust size of x-axis labels
axis.text.y = element_text(size = 12),  # Adjust size of y-axis labels
legend.text = element_text(size = 12),  # Adjust size of legend text
plot.title = element_text(hjust = 0.5, size = 14)) +  # Adjust size of plot title
scale_y_continuous(labels = scales::number_format(scale = 1e-6, suffix = "M"))
# COMPARISON BETWEEEN DOE - Grant Status
library(dplyr)
library(ggplot2)
DOE_Grant_Action <- DOE_Compare_Data %>%
group_by(Institution) %>%
summarise(DOE_Grant_Action = sum(`Action Type`))
# COMPARISON BETWEEEN DOE - Grant Status
library(dplyr)
library(ggplot2)
# Calculate total grant action count for each institution
DOE_Grant_Action <- DOE_Compare_Data %>%
group_by(Institution) %>%
summarise(DOE_Grant_Action = sum(`Action Type`))
# COMPARISON BETWEEEN DOE - Grant Status
library(dplyr)
library(ggplot2)
# Calculate total grant action count for each institution
DOE_Grant_Action <- DOE_Compare_Data %>%
group_by(Institution, `Action Type`) %>%
summarise(count = n()) %>%
ungroup()
View(DOE_Grant_Action)
# COMPARISON BETWEEEN DOE - Grant Status
library(dplyr)
library(ggplot2)
# Calculate total grant action count for each institution
DOE_Grant_Action <- DOE_Compare_Data %>%
group_by(Institution, `Action Type`) %>%
summarise(count = n()) %>%
ungroup()
library(ggplot2)
# Assuming DOE_Grant_Action is your summarized data frame with counts of Action Type by Institution
ggplot(DOE_Grant_Action, aes(x = Institution, y = count, fill = `Action Type`)) +
geom_bar(stat = "identity", position = "dodge") +
ggtitle("Number of Counts of Action Type by Institution") +
xlab("Institution") +
ylab("Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# COMPARISON BETWEEEN DOE - Grant Status
library(dplyr)
library(ggplot2)
# Calculate total grant action count for each institution
DOE_Grant_Action <- DOE_Compare_Data %>%
group_by(Institution, `Action Type`) %>%
summarise(count = n()) %>%
ungroup()
library(ggplot2)
# Assuming DOE_Grant_Action is your summarized data frame with counts of Action Type by Institution
ggplot(DOE_Grant_Action, aes(x = Institution, y = count, fill = `Action Type`)) +
geom_bar(stat = "identity", position = "dodge") +
ggtitle("Number of Counts of Action Type by Institution") +
xlab("") +
ylab("Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12),  # Adjust size of x-axis labels
axis.text.y = element_text(size = 12),  # Adjust size of y-axis labels
legend.text = element_text(size = 12),  # Adjust size of legend text
plot.title = element_text(hjust = 0.5, size = 14))
# COMPARISON BETWEEEN DOE - Grant Status
library(dplyr)
library(ggplot2)
# Calculate total grant action count for each institution
DOE_Grant_Action <- DOE_Compare_Data %>%
group_by(Institution, `Action Type`) %>%
summarise(count = n()) %>%
ungroup()
library(ggplot2)
# Assuming DOE_Grant_Action is your summarized data frame with counts of Action Type by Institution
ggplot(DOE_Grant_Action, aes(x = Institution, y = count, fill = `Action Type`)) +
geom_bar(stat = "identity", position = "dodge") +
ggtitle("Number of Counts of Action Type by Institution") +
xlab("") +
ylab("Number of Active Grants") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12),  # Adjust size of x-axis labels
axis.text.y = element_text(size = 12),  # Adjust size of y-axis labels
legend.text = element_text(size = 12),  # Adjust size of legend text
plot.title = element_text(hjust = 0.5, size = 14))
# COMPARISON BETWEEEN DOE - Grant Status
library(dplyr)
library(ggplot2)
# Calculate total grant action count for each institution
DOE_Grant_Action <- DOE_Compare_Data %>%
group_by(Institution, `Action Type`) %>%
summarise(count = n(), .groups = "drop") %>%
ungroup()
library(ggplot2)
# Assuming DOE_Grant_Action is your summarized data frame with counts of Action Type by Institution
ggplot(DOE_Grant_Action, aes(x = Institution, y = count, fill = `Action Type`)) +
geom_bar(stat = "identity", position = "dodge") +
ggtitle("Number of Counts of Action Type by Institution") +
xlab("") +
ylab("Number of Active Grants") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12),  # Adjust size of x-axis labels
axis.text.y = element_text(size = 12),  # Adjust size of y-axis labels
legend.text = element_text(size = 12),  # Adjust size of legend text
plot.title = element_text(hjust = 0.5, size = 14))
# Calculate total grant action count for each institution
DOE_Grant_Action <- DOE_Compare_Data %>%
group_by(Institution, `Action Type`) %>%
summarise(count = n(), .groups = "drop") %>%
ungroup()
NSF_Compare_Data <- read_xlsx("NSF_Combined_Data.xlsx")
View(NSF_Compare_Data)
ISU_NSF_data <- NSF_Compare_Data %>%
filter(Institution == "Idaho State University")
# COMPARISON BETWEEEN NSF - Grant Duration
library(readxl)
NSF_Compare_Data <- read_xlsx("NSF_Combined_Data.xlsx")
library(dplyr)
# Assuming 'start_date' and 'end_date' are columns containing the start and end dates of the grants,
# and 'institution' is a column indicating the institution for each grant
# Filter the data for each institution
UI_NSF_data <- NSF_Compare_Data %>%
filter(Institution == "Regents of the University of Idaho")
# COMPARISON BETWEEEN NSF - Grant Duration
library(readxl)
NSF_Compare_Data <- read_xlsx("NSF_Combined_Data.xlsx")
library(dplyr)
# Filter the data for each institution
UI_NSF_data <- NSF_Compare_Data %>%
filter(Organization == "Regents of the University of Idaho")
BSU_NSF_data <- NSF_Compare_Data %>%
filter(Organization == "Boise State University")
ISU_NSF_data <- NSF_Compare_Data %>%
filter(Organization == "Idaho State University")
View(UI_NSF_data)
View(ISU_NSF_data)
View(BSU_NSF_data)
UI_NSF_data <- UI_NSF_data %>%
mutate(`Start Date` = as.Date(StartDate, format = "%m/%d/%Y"),
`End Date` = as.Date(EndDate, format = "%m/%d/%Y"))
# Assuming 'grant_duration' is in days
UI_NSF_data <- UI_NSF_data %>%
mutate(grant_duration = EndDate - StartDate)
# Assuming 'grant_duration' is in days
UI_NSF_data <- UI_NSF_data %>%
mutate(grant_duration = `End Date` - `Start Date`)
UI_NSF_data <- UI_NSF_data %>%
mutate(grant_duration_years = as.numeric(grant_duration) / 365.25)
# BSU
BSU_NSF_data  <- BSU_NSF_data %>%
mutate(`Start Date` = as.Date(StartDate, format = "%m/%d/%Y"),
`End Date` = as.Date(EndDate, format = "%m/%d/%Y"))
# Assuming 'grant_duration' is in days
BSU_NSF_data  <- BSU_NSF_data %>%
mutate(grant_duration = `End Date` - `Start Date`)
BSU_NSF_data  <- BSU_NSF_data  %>%
mutate(grant_duration_years = as.numeric(grant_duration) / 365.25)
# ISU
ISU_NSF_data<- ISU_NSF_data %>%
mutate(`Start Date` = as.Date(StartDate, format = "%m/%d/%Y"),
`End Date` = as.Date(EndDate, format = "%m/%d/%Y"))
# Assuming 'grant_duration' is in days
ISU_NSF_data <- ISU_NSF_data %>%
mutate(grant_duration = `End Date` - `Start Date`)
ISU_NSF_data <- ISU_NSF_data %>%
mutate(grant_duration_years = as.numeric(grant_duration) / 365.25)
# COMPARISON BETWEEEN NSF - Grant Duration
library(readxl)
NSF_Compare_Data <- read_xlsx("NSF_Combined_Data.xlsx")
library(dplyr)
# Filter the data for each institution
UI_NSF_data <- NSF_Compare_Data %>%
filter(Organization == "Regents of the University of Idaho")
BSU_NSF_data <- NSF_Compare_Data %>%
filter(Organization == "Boise State University")
ISU_NSF_data <- NSF_Compare_Data %>%
filter(Organization == "Idaho State University")
# Calculate the duration of grants for each institution
# Convert "Start Date" and "End Date" columns to date objects
#UI
UI_NSF_data <- UI_NSF_data %>%
mutate(`Start Date` = as.Date(StartDate, format = "%m/%d/%Y"),
`End Date` = as.Date(EndDate, format = "%m/%d/%Y"))
# Assuming 'grant_duration' is in days
UI_NSF_data <- UI_NSF_data %>%
mutate(grant_duration = `End Date` - `Start Date`)
UI_NSF_data <- UI_NSF_data %>%
mutate(grant_duration_years = as.numeric(grant_duration) / 365.25)
# BSU
BSU_NSF_data  <- BSU_NSF_data %>%
mutate(`Start Date` = as.Date(StartDate, format = "%m/%d/%Y"),
`End Date` = as.Date(EndDate, format = "%m/%d/%Y"))
# Assuming 'grant_duration' is in days
BSU_NSF_data  <- BSU_NSF_data %>%
mutate(grant_duration = `End Date` - `Start Date`)
BSU_NSF_data  <- BSU_NSF_data  %>%
mutate(grant_duration_years = as.numeric(grant_duration) / 365.25)
# ISU
ISU_NSF_data<- ISU_NSF_data %>%
mutate(`Start Date` = as.Date(StartDate, format = "%m/%d/%Y"),
`End Date` = as.Date(EndDate, format = "%m/%d/%Y"))
# Assuming 'grant_duration' is in days
ISU_NSF_data <- ISU_NSF_data %>%
mutate(grant_duration = `End Date` - `Start Date`)
ISU_NSF_data <- ISU_NSF_data %>%
mutate(grant_duration_years = as.numeric(grant_duration) / 365.25)
# Combine datasets
combined_data_NSF <- bind_rows(UI_NSF_data, BSU_NSF_data, ISU_NSF_data)
my_colors <- c("Boise State University" = "orange", "Idaho State University" = "black", "Regents of the University of Idaho" = "gold")
# COMPARISON BETWEEEN NSF - Grant Duration
library(readxl)
NSF_Compare_Data <- read_xlsx("NSF_Combined_Data.xlsx")
library(dplyr)
# Filter the data for each institution
UI_NSF_data <- NSF_Compare_Data %>%
filter(Organization == "Regents of the University of Idaho")
BSU_NSF_data <- NSF_Compare_Data %>%
filter(Organization == "Boise State University")
ISU_NSF_data <- NSF_Compare_Data %>%
filter(Organization == "Idaho State University")
# Calculate the duration of grants for each institution
# Convert "Start Date" and "End Date" columns to date objects
#UI
UI_NSF_data <- UI_NSF_data %>%
mutate(`Start Date` = as.Date(StartDate, format = "%m/%d/%Y"),
`End Date` = as.Date(EndDate, format = "%m/%d/%Y"))
# Assuming 'grant_duration' is in days
UI_NSF_data <- UI_NSF_data %>%
mutate(grant_duration = `End Date` - `Start Date`)
UI_NSF_data <- UI_NSF_data %>%
mutate(grant_duration_years = as.numeric(grant_duration) / 365.25)
# BSU
BSU_NSF_data  <- BSU_NSF_data %>%
mutate(`Start Date` = as.Date(StartDate, format = "%m/%d/%Y"),
`End Date` = as.Date(EndDate, format = "%m/%d/%Y"))
# Assuming 'grant_duration' is in days
BSU_NSF_data  <- BSU_NSF_data %>%
mutate(grant_duration = `End Date` - `Start Date`)
BSU_NSF_data  <- BSU_NSF_data  %>%
mutate(grant_duration_years = as.numeric(grant_duration) / 365.25)
# ISU
ISU_NSF_data<- ISU_NSF_data %>%
mutate(`Start Date` = as.Date(StartDate, format = "%m/%d/%Y"),
`End Date` = as.Date(EndDate, format = "%m/%d/%Y"))
# Assuming 'grant_duration' is in days
ISU_NSF_data <- ISU_NSF_data %>%
mutate(grant_duration = `End Date` - `Start Date`)
ISU_NSF_data <- ISU_NSF_data %>%
mutate(grant_duration_years = as.numeric(grant_duration) / 365.25)
# Visualization
library(dplyr)
# Assuming UI_data contains the grant duration information for one institution
# and other_datasets contain the grant duration information for the other institutions
# Combine datasets
combined_data_NSF <- bind_rows(UI_NSF_data, BSU_NSF_data, ISU_NSF_data)
# Colors
my_colors <- c("Boise State University" = "orange", "Idaho State University" = "black", "Regents of the University of Idaho" = "gold")
# Plotting grant duration as a bar graph
library(ggplot2)
ggplot(combined_data_NSF, aes(x = Organization, y = grant_duration_years, fill = Organization)) +
geom_bar(stat = "identity", position = "dodge") +
ggtitle("Grant Duration by Organization") +
xlab("") +
ylab("Grant Duration (Years)") +
scale_fill_manual(values = my_colors) +  # Apply custom colors
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12),  # Adjust size of x-axis labels
axis.text.y = element_text(size = 12),  # Adjust size of y-axis labels
legend.text = element_text(size = 12),  # Adjust size of legend text
plot.title = element_text(hjust = 0.5, size = 14))  # Adjust size of plot title
# Calculate total award money for each institution
NSF_total_award_money <- NSF_Compare_Data %>%
group_by(Organization) %>%
summarise(NSF_total_award_money = sum(AmountAwardedtoDate))
# Calculate total award money for each institution
NSF_total_award_money <- NSF_Compare_Data %>%
group_by(Organization) %>%
summarise(NSF_total_award_money = sum(AwardedAmounttoDate))
# Calculate total award money for each institution
NSF_total_award_money <- NSF_Compare_Data %>%
group_by(Organization) %>%
summarise(NSF_total_award_money = sum(AwardedAmountToDate))
# Check the data type of the AwardedAmountToDate column
class(NSF_Compare_Data$AwardedAmountToDate)
print(unique(non_numeric_values))
# Check for non-numeric values in the AwardedAmountToDate column
non_numeric_values <- NSF_Compare_Data[!is.numeric(NSF_Compare_Data$AwardedAmountToDate), "AwardedAmountToDate"]
# Calculate total award money for each institution
NSF_total_award_money <- NSF_Compare_Data %>%
group_by(Organization) %>%
summarise(NSF_total_award_money = sum(AwardedAmountToDate))
# Remove dollar signs and convert to numeric
NSF_Compare_Data$AwardedAmountToDate <- as.numeric(gsub("\\$", "", NSF_Compare_Data$AwardedAmountToDate))
# Now calculate total award money for each institution
NSF_total_award_money <- NSF_Compare_Data %>%
group_by(Organization) %>%
summarise(NSF_total_award_money = sum(AwardedAmountToDate, na.rm = TRUE))
View(NSF_total_award_money)
# COMPARISON BETWEEEN NSF - AWARD MONEY
library(dplyr)
library(ggplot2)
# Remove dollar signs and convert to numeric
NSF_Compare_Data$AwardedAmountToDate <- as.numeric(gsub("\\$", "", NSF_Compare_Data$AwardedAmountToDate))
# Now calculate total award money for each institution
NSF_total_award_money <- NSF_Compare_Data %>%
group_by(Organization) %>%
summarise(NSF_total_award_money = sum(AwardedAmountToDate, na.rm = TRUE))
View(NSF_total_award_money)
# COMPARISON BETWEEEN NSF - AWARD MONEY
library(dplyr)
library(ggplot2)
# Convert AwardedAmountToDate to numeric, removing the dollar sign
NSF_Compare_Data$AwardedAmountToDate <- as.numeric(gsub("\\$", "", NSF_Compare_Data$AwardedAmountToDate))
# Now perform the summarise operation
NSF_total_award_money <- NSF_Compare_Data %>%
group_by(Organization) %>%
summarise(NSF_total_award_money = sum(AwardedAmountToDate, na.rm = TRUE))
# COMPARISON BETWEEEN NSF - AWARD MONEY
library(dplyr)
library(ggplot2)
# Convert AwardedAmountToDate to numeric, removing the dollar sign
NSF_Compare_Data$AwardedAmountToDate <- as.numeric(gsub("\\$", "", NSF_Compare_Data$AwardedAmountToDate))
# Now perform the summarise operation
NSF_total_award_money <- NSF_Compare_Data %>%
group_by(Organization) %>%
summarise(NSF_total_award_money = sum(AwardedAmountToDate, na.rm = TRUE))
View(NSF_total_award_money)
# COMPARISON BETWEEEN NSF - AWARD MONEY
library(dplyr)
library(ggplot2)
# Remove dollar sign and commas and convert to numeric
NSF_Compare_Data$AwardedAmountToDate <- as.numeric(gsub("[\\$,]", "", NSF_Compare_Data$AwardedAmountToDate))
# Calculate total award money for each institution
NSF_total_award_money <- NSF_Compare_Data %>%
group_by(Organization) %>%
summarise(NSF_total_award_money = sum(AwardedAmountToDate, na.rm = TRUE))
View(NSF_total_award_money)
View(NSF_Compare_Data)
# COMPARISON BETWEEEN NSF - AWARD MONEY
library(dplyr)
library(ggplot2)
# Remove dollar sign and commas and convert to numeric
NSF_Compare_Data$AwardedAmountToDate <- as.numeric(gsub("[\\$,]", "", NSF_Compare_Data$AwardedAmountToDate))
# Check for missing values before transformation
sum(is.na(NSF_Compare_Data$AwardedAmountToDate))
# Remove dollar sign and commas and convert to numeric
NSF_Compare_Data$AwardedAmountToDate <- as.numeric(gsub("[\\$,]", "", NSF_Compare_Data$AwardedAmountToDate))
# Check for missing values after transformation
sum(is.na(NSF_Compare_Data$AwardedAmountToDate))
# Calculate total award money for each institution
NSF_total_award_money <- NSF_Compare_Data %>%
group_by(Organization) %>%
summarise(NSF_total_award_money = sum(AwardedAmountToDate, na.rm = TRUE))
View(NSF_total_award_money)
