NSFawardsUI_Dates <- read_xlsx("NSF_ALL_YR.xlsx")
filtered_data_UI_NSF <- NSFawardsUI_Dates %>%
filter(Institution == 'University of Idaho')
# Assuming the start date column is named "Start_Date"
ten_years_ago <- Sys.Date() - years(10)  #
# Filter the data to include only awards that
# Assuming the date format is Month/Day/Year
filtered_data_UI_10y_NSF <- filtered_data_UI_NSF %>%
filter(as.Date(StartDate, format = "%m/%d/%Y") >= ten_years_ago)
# Assuming the column names for "Start Date" vary across datasets, replace "Start Date" with the actual column name for each dataset.
# For DOE dataset
filtered_data_UI_10y_DOE <- filtered_data_UI_10y_DOE %>%
mutate(Start_Date = as.Date(`Start Date`, format = "Start Date"))
# For USDA dataset
filtered_data_UI_10y_USDA <- filtered_data_UI_10y_USDA %>%
mutate(Start_Date = as.Date(`Award Date`, format = "Award Date"))
# For NIH dataset
filtered_data_UI_10y_NIH <- filtered_data_UI_10y_NIH %>%
mutate(Start_Date = as.Date(`Project Start Date`, format = "Project Start Date"))
# For NSF dataset
filtered_data_UI_10y_NSF <- filtered_data_UI_10y_NSF %>%
mutate(Start_Date = as.Date(StartDate, format = "StartDate"))
library(dplyr)
library(lubridate)
# Count the number of awards by award date for each dataset
award_counts_DOE <- filtered_data_UI_10y_DOE %>%
count(`Start Date`)
award_counts_USDA <- filtered_data_UI_10y_USDA %>%
count(`Award Date`)
award_counts_NIH <- filtered_data_UI_10y_NIH %>%
count(`Project Start Date`)
award_counts_NSF <- filtered_data_UI_10y_NSF %>%
count(StartDate)
library(dplyr)
# Add Sponsor column to each data frame
award_counts_DOE <- award_counts_DOE %>% mutate(Sponsor = "DOE")
award_counts_USDA <- award_counts_USDA %>% mutate(Sponsor = "USDA")
award_counts_NIH <- award_counts_NIH %>% mutate(Sponsor = "NIH")
award_counts_NSF <- award_counts_NSF %>% mutate(Sponsor = "NSF")
# For DOE dataset
award_counts_DOE <- award_counts_DOE %>%
rename(Start_Date = `Start Date`) %>%
mutate(Sponsor = "DOE")
# For USDA dataset
award_counts_USDA <- award_counts_USDA %>%
rename(Start_Date = `Start Date`) %>%
mutate(Sponsor = "USDA")
View(award_counts_USDA)
# For USDA dataset
award_counts_USDA <- award_counts_USDA %>%
rename(Start_Date = `Award Date`) %>%
mutate(Sponsor = "USDA")
# For NIH dataset
award_counts_NIH <- award_counts_NIH %>%
rename(Start_Date = `Project Start Date`) %>%
mutate(Sponsor = "NIH")
# For NSF dataset
award_counts_NSF <- award_counts_NSF %>%
rename(Start_Date = StartDate) %>%
mutate(Sponsor = "NSF")
# Combine all dataframes into a single dataframe
all_award_counts <- bind_rows(
award_counts_DOE,
award_counts_USDA,
award_counts_NIH,
award_counts_NSF
)
library(readxl)
library(dplyr)
library(lubridate)
# Read the Excel file
DOEawardsUI_Dates <- read_xlsx("DOEawards.xlsx")
filtered_data_UI_DOE <- DOEawardsUI_Dates %>%
filter(Institution == 'Regents of the University of Idaho')
# Assuming the start date column is named "Start_Date"
ten_years_ago <- Sys.Date() - years(10)  #
# Filter the data to include only awards that
filtered_data_UI_10y_DOE <- filtered_data_UI_DOE %>%
filter(`Start Date` >= ten_years_ago)
#USDA
# Read the Excel file
USDAawardsUI_Dates <- read_xlsx("USDAtoUI_Edited_YR.xlsx")
filtered_data_UI_USDA <- USDAawardsUI_Dates %>%
filter(Institution == 'University of Idaho')
# Assuming the start date column is named "Start_Date"
ten_years_ago <- Sys.Date() - years(10)  #
# Filter the data to include only awards that
filtered_data_UI_10y_USDA <- filtered_data_UI_USDA %>%
filter(`Award Date` >= ten_years_ago)
#NIH
# Read the Excel file
NIHawardsUI_Dates <- read_xlsx("UI_NIH_ALL_YR.xlsx")
filtered_data_UI_NIH <- NIHawardsUI_Dates %>%
filter(Institution == 'UNIVERSITY OF IDAHO')
# Assuming the start date column is named "Start_Date"
ten_years_ago <- Sys.Date() - years(10)  #
# Filter the data to include only awards that
# Assuming the date format is Month/Day/Year
filtered_data_UI_10y_NIH <- filtered_data_UI_NIH %>%
filter(as.Date(`Project Start Date`, format = "%m/%d/%Y") >= ten_years_ago)
#NSF
# Read the Excel file
NSFawardsUI_Dates <- read_xlsx("NSF_ALL_YR.xlsx")
filtered_data_UI_NSF <- NSFawardsUI_Dates %>%
filter(Institution == 'University of Idaho')
# Assuming the start date column is named "Start_Date"
ten_years_ago <- Sys.Date() - years(10)  #
# Filter the data to include only awards that
# Assuming the date format is Month/Day/Year
filtered_data_UI_10y_NSF <- filtered_data_UI_NSF %>%
filter(as.Date(StartDate, format = "%m/%d/%Y") >= ten_years_ago)
# Assuming the column names for "Start Date" vary across datasets, replace "Start Date" with the actual column name for each dataset.
# For DOE dataset
filtered_data_UI_10y_DOE <- filtered_data_UI_10y_DOE %>%
mutate(Start_Date = as.Date(`Start Date`, format = "Start Date"))
# For USDA dataset
filtered_data_UI_10y_USDA <- filtered_data_UI_10y_USDA %>%
mutate(Start_Date = as.Date(`Award Date`, format = "Award Date"))
# For NIH dataset
filtered_data_UI_10y_NIH <- filtered_data_UI_10y_NIH %>%
mutate(Start_Date = as.Date(`Project Start Date`, format = "Project Start Date"))
# For NSF dataset
filtered_data_UI_10y_NSF <- filtered_data_UI_10y_NSF %>%
mutate(Start_Date = as.Date(StartDate, format = "StartDate"))
library(dplyr)
library(lubridate)
# Count the number of awards by award date for each dataset
award_counts_DOE <- filtered_data_UI_10y_DOE %>%
count(`Start Date`)
award_counts_USDA <- filtered_data_UI_10y_USDA %>%
count(`Award Date`)
award_counts_NIH <- filtered_data_UI_10y_NIH %>%
count(`Project Start Date`)
award_counts_NSF <- filtered_data_UI_10y_NSF %>%
count(StartDate)
library(dplyr)
# Add Sponsor column to each data frame
award_counts_DOE <- award_counts_DOE %>% mutate(Sponsor = "DOE")
award_counts_USDA <- award_counts_USDA %>% mutate(Sponsor = "USDA")
award_counts_NIH <- award_counts_NIH %>% mutate(Sponsor = "NIH")
award_counts_NSF <- award_counts_NSF %>% mutate(Sponsor = "NSF")
# For DOE dataset
award_counts_DOE <- award_counts_DOE %>%
rename(Start_Date = `Start Date`) %>%
mutate(Sponsor = "DOE")
# For USDA dataset
award_counts_USDA <- award_counts_USDA %>%
rename(Start_Date = `Award Date`) %>%
mutate(Sponsor = "USDA")
# For NIH dataset
award_counts_NIH <- award_counts_NIH %>%
rename(Start_Date = `Project Start Date`) %>%
mutate(Sponsor = "NIH")
# For NSF dataset
award_counts_NSF <- award_counts_NSF %>%
rename(Start_Date = StartDate) %>%
mutate(Sponsor = "NSF")
# For DOE dataset
award_counts_DOE <- award_counts_DOE %>%
mutate(Start_Date = as.Date(`Start Date`, format = "%m/%d/%Y")) %>%
mutate(Sponsor = "DOE")
library(readxl)
library(dplyr)
library(lubridate)
# Read the Excel file
DOEawardsUI_Dates <- read_xlsx("DOEawards.xlsx")
filtered_data_UI_DOE <- DOEawardsUI_Dates %>%
filter(Institution == 'Regents of the University of Idaho')
# Assuming the start date column is named "Start_Date"
ten_years_ago <- Sys.Date() - years(10)  #
# Filter the data to include only awards that
filtered_data_UI_10y_DOE <- filtered_data_UI_DOE %>%
filter(`Start Date` >= ten_years_ago)
#USDA
# Read the Excel file
USDAawardsUI_Dates <- read_xlsx("USDAtoUI_Edited_YR.xlsx")
filtered_data_UI_USDA <- USDAawardsUI_Dates %>%
filter(Institution == 'University of Idaho')
# Assuming the start date column is named "Start_Date"
ten_years_ago <- Sys.Date() - years(10)  #
# Filter the data to include only awards that
filtered_data_UI_10y_USDA <- filtered_data_UI_USDA %>%
filter(`Award Date` >= ten_years_ago)
#NIH
# Read the Excel file
NIHawardsUI_Dates <- read_xlsx("UI_NIH_ALL_YR.xlsx")
filtered_data_UI_NIH <- NIHawardsUI_Dates %>%
filter(Institution == 'UNIVERSITY OF IDAHO')
# Assuming the start date column is named "Start_Date"
ten_years_ago <- Sys.Date() - years(10)  #
# Filter the data to include only awards that
# Assuming the date format is Month/Day/Year
filtered_data_UI_10y_NIH <- filtered_data_UI_NIH %>%
filter(as.Date(`Project Start Date`, format = "%m/%d/%Y") >= ten_years_ago)
#NSF
# Read the Excel file
NSFawardsUI_Dates <- read_xlsx("NSF_ALL_YR.xlsx")
filtered_data_UI_NSF <- NSFawardsUI_Dates %>%
filter(Institution == 'University of Idaho')
# Assuming the start date column is named "Start_Date"
ten_years_ago <- Sys.Date() - years(10)  #
# Filter the data to include only awards that
# Assuming the date format is Month/Day/Year
filtered_data_UI_10y_NSF <- filtered_data_UI_NSF %>%
filter(as.Date(StartDate, format = "%m/%d/%Y") >= ten_years_ago)
# Assuming the column names for "Start Date" vary across datasets, replace "Start Date" with the actual column name for each dataset.
# For DOE dataset
filtered_data_UI_10y_DOE <- filtered_data_UI_10y_DOE %>%
mutate(Start_Date = as.Date(`Start Date`, format = "Start Date"))
# For USDA dataset
filtered_data_UI_10y_USDA <- filtered_data_UI_10y_USDA %>%
mutate(Start_Date = as.Date(`Award Date`, format = "Award Date"))
# For NIH dataset
filtered_data_UI_10y_NIH <- filtered_data_UI_10y_NIH %>%
mutate(Start_Date = as.Date(`Project Start Date`, format = "Project Start Date"))
# For NSF dataset
filtered_data_UI_10y_NSF <- filtered_data_UI_10y_NSF %>%
mutate(Start_Date = as.Date(StartDate, format = "StartDate"))
library(dplyr)
library(lubridate)
# Count the number of awards by award date for each dataset
award_counts_DOE <- filtered_data_UI_10y_DOE %>%
count(`Start Date`)
award_counts_USDA <- filtered_data_UI_10y_USDA %>%
count(`Award Date`)
award_counts_NIH <- filtered_data_UI_10y_NIH %>%
count(`Project Start Date`)
award_counts_NSF <- filtered_data_UI_10y_NSF %>%
count(StartDate)
library(dplyr)
# Add Sponsor column to each data frame
award_counts_DOE <- award_counts_DOE %>% mutate(Sponsor = "DOE")
award_counts_USDA <- award_counts_USDA %>% mutate(Sponsor = "USDA")
award_counts_NIH <- award_counts_NIH %>% mutate(Sponsor = "NIH")
award_counts_NSF <- award_counts_NSF %>% mutate(Sponsor = "NSF")
# For DOE dataset
award_counts_DOE <- award_counts_DOE %>%
rename(Start_Date = `Start Date`) %>%
mutate(Sponsor = "DOE")
# For USDA dataset
award_counts_USDA <- award_counts_USDA %>%
rename(Start_Date = `Award Date`) %>%
mutate(Sponsor = "USDA")
# For NIH dataset
award_counts_NIH <- award_counts_NIH %>%
rename(Start_Date = `Project Start Date`) %>%
mutate(Sponsor = "NIH")
# For NSF dataset
award_counts_NSF <- award_counts_NSF %>%
rename(Start_Date = StartDate) %>%
mutate(Sponsor = "NSF")
# For DOE dataset
award_counts_DOE <- award_counts_DOE %>%
mutate(Start_Date = as.Date(Start_Date, format = "%m/%d/%Y")) %>%
mutate(Sponsor = "DOE")
# For USDA dataset
award_counts_USDA <- award_counts_USDA %>%
mutate(Start_Date = as.Date(Start_Date, format = "%m/%d/%Y")) %>%
mutate(Sponsor = "USDA")
# For NIH dataset
award_counts_NIH <- award_counts_NIH %>%
mutate(Start_Date = as.Date(Start_Date, format = "%m/%d/%Y")) %>%
mutate(Sponsor = "NIH")
# For NSF dataset
award_counts_NSF <- award_counts_NSF %>%
mutate(Start_Date = as.Date(Start_Date, format = "%m/%d/%Y")) %>%
mutate(Sponsor = "NSF")
# Combine all dataframes into a single dataframe
all_award_counts <- bind_rows(
award_counts_DOE,
award_counts_USDA,
award_counts_NIH,
award_counts_NSF
)
View(all_award_counts)
# Plot the timeline
ggplot(all_award_counts, aes(x = Start_Date, color = Sponsor)) +
geom_freqpoly(binwidth = 30, size = 1) +
labs(title = "Awards Timeline by Sponsor",
x = "Start Date",
y = "Count") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
theme_minimal()
# Plot the timeline as a line chart
ggplot(all_award_counts, aes(x = Start_Date, y = ..count.., color = Sponsor)) +
geom_line(stat = "count", size = 1) +
labs(title = "Awards Timeline by Sponsor",
x = "Start Date",
y = "Count") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
theme_minimal()
# Plot the timeline
ggplot(all_award_counts, aes(x = Start_Date, color = Sponsor)) +
geom_freqpoly(binwidth = 30, size = 1) +
labs(title = "Awards Timeline by Sponsor",
x = "Start Date",
y = "Count") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
theme_minimal()
# Plot the timeline with facets
ggplot(all_award_counts, aes(x = Start_Date)) +
geom_freqpoly(aes(color = Sponsor), binwidth = 30, size = 1) +
labs(title = "Awards Timeline by Sponsor",
x = "Start Date",
y = "Count") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
facet_wrap(~Sponsor) +
theme_minimal()
# Plot the timeline with facets
ggplot(all_award_counts, aes(x = Start_Date)) +
geom_freqpoly(aes(color = Sponsor), binwidth = 30, size = 1) +
labs(title = "Awards Timeline by Sponsor",
x = "Start Date",
y = "Count") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
facet_wrap(~Sponsor) +
theme_minimal()
# Plot the timeline
ggplot(all_award_counts, aes(x = Start_Date, color = Sponsor)) +
geom_freqpoly(binwidth = 30, size = 1) +
labs(title = "Awards Timeline by Sponsor",
x = "Start Date",
y = "Count") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
theme_minimal()
# Define colors for each sponsor
sponsor_colors <- c("DOE" = "darkgray", "NSF" = "gold", "NIH" = "black", "USDA" = "lightgray")
plot.title = element_text(hjust = 0.5)
library(readxl)
library(dplyr)
library(lubridate)
# Read the Excel file
DOEawardsUI_Dates <- read_xlsx("DOEawards.xlsx")
filtered_data_UI_DOE <- DOEawardsUI_Dates %>%
filter(Institution == 'Regents of the University of Idaho')
# Assuming the start date column is named "Start_Date"
ten_years_ago <- Sys.Date() - years(10)  #
# Filter the data to include only awards that
filtered_data_UI_10y_DOE <- filtered_data_UI_DOE %>%
filter(`Start Date` >= ten_years_ago)
#USDA
# Read the Excel file
USDAawardsUI_Dates <- read_xlsx("USDAtoUI_Edited_YR.xlsx")
filtered_data_UI_USDA <- USDAawardsUI_Dates %>%
filter(Institution == 'University of Idaho')
# Assuming the start date column is named "Start_Date"
ten_years_ago <- Sys.Date() - years(10)  #
# Filter the data to include only awards that
filtered_data_UI_10y_USDA <- filtered_data_UI_USDA %>%
filter(`Award Date` >= ten_years_ago)
#NIH
# Read the Excel file
NIHawardsUI_Dates <- read_xlsx("UI_NIH_ALL_YR.xlsx")
filtered_data_UI_NIH <- NIHawardsUI_Dates %>%
filter(Institution == 'UNIVERSITY OF IDAHO')
# Assuming the start date column is named "Start_Date"
ten_years_ago <- Sys.Date() - years(10)  #
# Filter the data to include only awards that
# Assuming the date format is Month/Day/Year
filtered_data_UI_10y_NIH <- filtered_data_UI_NIH %>%
filter(as.Date(`Project Start Date`, format = "%m/%d/%Y") >= ten_years_ago)
#NSF
# Read the Excel file
NSFawardsUI_Dates <- read_xlsx("NSF_ALL_YR.xlsx")
filtered_data_UI_NSF <- NSFawardsUI_Dates %>%
filter(Institution == 'University of Idaho')
# Assuming the start date column is named "Start_Date"
ten_years_ago <- Sys.Date() - years(10)  #
# Filter the data to include only awards that
# Assuming the date format is Month/Day/Year
filtered_data_UI_10y_NSF <- filtered_data_UI_NSF %>%
filter(as.Date(StartDate, format = "%m/%d/%Y") >= ten_years_ago)
# Assuming the column names for "Start Date" vary across datasets, replace "Start Date" with the actual column name for each dataset.
# For DOE dataset
filtered_data_UI_10y_DOE <- filtered_data_UI_10y_DOE %>%
mutate(Start_Date = as.Date(`Start Date`, format = "Start Date"))
# For USDA dataset
filtered_data_UI_10y_USDA <- filtered_data_UI_10y_USDA %>%
mutate(Start_Date = as.Date(`Award Date`, format = "Award Date"))
# For NIH dataset
filtered_data_UI_10y_NIH <- filtered_data_UI_10y_NIH %>%
mutate(Start_Date = as.Date(`Project Start Date`, format = "Project Start Date"))
# For NSF dataset
filtered_data_UI_10y_NSF <- filtered_data_UI_10y_NSF %>%
mutate(Start_Date = as.Date(StartDate, format = "StartDate"))
library(dplyr)
library(lubridate)
# Count the number of awards by award date for each dataset
award_counts_DOE <- filtered_data_UI_10y_DOE %>%
count(`Start Date`)
award_counts_USDA <- filtered_data_UI_10y_USDA %>%
count(`Award Date`)
award_counts_NIH <- filtered_data_UI_10y_NIH %>%
count(`Project Start Date`)
award_counts_NSF <- filtered_data_UI_10y_NSF %>%
count(StartDate)
library(dplyr)
# Add Sponsor column to each data frame
award_counts_DOE <- award_counts_DOE %>% mutate(Sponsor = "DOE")
award_counts_USDA <- award_counts_USDA %>% mutate(Sponsor = "USDA")
award_counts_NIH <- award_counts_NIH %>% mutate(Sponsor = "NIH")
award_counts_NSF <- award_counts_NSF %>% mutate(Sponsor = "NSF")
# For DOE dataset
award_counts_DOE <- award_counts_DOE %>%
rename(Start_Date = `Start Date`) %>%
mutate(Sponsor = "DOE")
# For USDA dataset
award_counts_USDA <- award_counts_USDA %>%
rename(Start_Date = `Award Date`) %>%
mutate(Sponsor = "USDA")
# For NIH dataset
award_counts_NIH <- award_counts_NIH %>%
rename(Start_Date = `Project Start Date`) %>%
mutate(Sponsor = "NIH")
# For NSF dataset
award_counts_NSF <- award_counts_NSF %>%
rename(Start_Date = StartDate) %>%
mutate(Sponsor = "NSF")
# For DOE dataset
award_counts_DOE <- award_counts_DOE %>%
mutate(Start_Date = as.Date(Start_Date, format = "%m/%d/%Y")) %>%
mutate(Sponsor = "DOE")
# For USDA dataset
award_counts_USDA <- award_counts_USDA %>%
mutate(Start_Date = as.Date(Start_Date, format = "%m/%d/%Y")) %>%
mutate(Sponsor = "USDA")
# For NIH dataset
award_counts_NIH <- award_counts_NIH %>%
mutate(Start_Date = as.Date(Start_Date, format = "%m/%d/%Y")) %>%
mutate(Sponsor = "NIH")
# For NSF dataset
award_counts_NSF <- award_counts_NSF %>%
mutate(Start_Date = as.Date(Start_Date, format = "%m/%d/%Y")) %>%
mutate(Sponsor = "NSF")
# Combine all dataframes into a single dataframe
all_award_counts <- bind_rows(
award_counts_DOE,
award_counts_USDA,
award_counts_NIH,
award_counts_NSF
)
# Define colors for each sponsor
sponsor_colors <- c("DOE" = "darkgray", "NSF" = "gold", "NIH" = "black", "USDA" = "lightgray")
# Plot the timeline with facets, adjusted x-axis labels, individual colors, and centralized title
ggplot(all_award_counts, aes(x = Start_Date)) +
geom_freqpoly(aes(color = Sponsor), binwidth = 30, size = 1) +
labs(title = "Awards Timeline by Sponsor",
x = "Start Date",
y = "Count") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y", expand = c(0, 0)) +
facet_wrap(~Sponsor) +
scale_color_manual(values = sponsor_colors) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5)
# Plot the timeline with facets, adjusted x-axis labels, individual colors, and centralized title
ggplot(all_award_counts, aes(x = Start_Date)) +
geom_freqpoly(aes(color = sponsor_colors), binwidth = 30, size = 1) +
labs(title = "Awards Timeline by Sponsor",
x = "Start Date",
y = "Count") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y", expand = c(0, 0)) +
facet_wrap(~Sponsor) +
scale_color_manual(values = sponsor_colors) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5)
)
# Plot the timeline with facets, adjusted x-axis labels, individual colors, and centralized title
ggplot(all_award_counts, aes(x = Start_Date)) +
geom_freqpoly(aes(color = sponsor_colors), binwidth = 30, size = 1) +
labs(title = "Awards Timeline by Sponsor",
x = "Start Date",
y = "Count") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y", expand = c(0, 0)) +
facet_wrap(~Sponsor) +
scale_color_manual(values = sponsor_colors) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5)
)
# Plot the timeline with facets, adjusted x-axis labels, individual colors, and centralized title
ggplot(all_award_counts, aes(x = Start_Date, color = Sponsor)) +
geom_freqpoly(binwidth = 30, size = 1) +
labs(title = "Awards Timeline by Sponsor",
x = "Start Date",
y = "Count") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y", expand = c(0, 0)) +
facet_wrap(~Sponsor) +
scale_color_manual(values = sponsor_colors) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5)
)
# Plot the timeline with overlapping lines, adjusted x-axis labels, individual colors, and centralized title
ggplot(all_award_counts, aes(x = Start_Date, color = Sponsor, group = Sponsor)) +
geom_freqpoly(binwidth = 30, size = 1) +
labs(title = "Awards Timeline by Sponsor",
x = "Start Date",
y = "Count") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y", expand = c(0, 0)) +
scale_color_manual(values = sponsor_colors) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5)
)
View(filtered_data_UI_NIH)
filtered_data_UI_10y_NIH_UI <- filtered_data_UI_10y_NIH %>%
filter(`Institution` == 'UNIVERSITY OF IDAHO')
library(readxl)
library(dplyr)
library(tidyverse)
