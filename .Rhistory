# Assuming DOE_Grant_Action is your summarized data frame with counts of Action Type by Institution
my_colors_4 <- c("navyblue", "darkgreen", "darkorange", "darkred")
ggplot(NSF_Grant_Award_Instrument , aes(x = Organization, y = count, fill = AwardInstrument)) +
geom_bar(stat = "identity", position = "dodge",  fill = my_colors_4) +
ggtitle("Number of Counts of Action Type by Institution") +
xlab("") +
ylab("Number of Active Grants") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12),  # Adjust size of x-axis labels
axis.text.y = element_text(size = 12),  # Adjust size of y-axis labels
legend.text = element_text(size = 12),  # Adjust size of legend text
plot.title = element_text(hjust = 0.5, size = 14))
# COMPARISON BETWEEEN NSF - Grant Status
library(dplyr)
library(ggplot2)
# Calculate total grant action count for each institution
NSF_Grant_Award_Instrument <- NSF_Compare_Data %>%
group_by(Organization, AwardInstrument) %>%
summarise(count = n(), .groups = "drop") %>%
ungroup()
# Check unique levels of AwardInstrument
unique_levels <- unique(NSF_Grant_Award_Instrument$AwardInstrument)
# Adjust my_colors_4 to match the number of unique levels
my_colors_4 <- rainbow(length(unique_levels))  # or any other color palette you prefer
# Plot with adjusted colors
ggplot(NSF_Grant_Award_Instrument, aes(x = Organization, y = count, fill = AwardInstrument)) +
geom_bar(stat = "identity", position = "dodge", fill = my_colors_4) +
ggtitle("Number of Counts of Action Type by Institution") +
xlab("") +
ylab("Number of Active Grants") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12),
axis.text.y = element_text(size = 12),
legend.text = element_text(size = 12),
plot.title = element_text(hjust = 0.5, size = 14))
# COMPARISON BETWEEEN NSF - Grant Status
library(dplyr)
library(ggplot2)
# Calculate total grant action count for each institution
NSF_Grant_Award_Instrument <- NSF_Compare_Data %>%
group_by(Organization, AwardInstrument) %>%
summarise(count = n(), .groups = "drop") %>%
ungroup()
# Check unique levels of AwardInstrument
unique_levels <- unique(NSF_Grant_Award_Instrument$AwardInstrument)
# Adjust my_colors_4 to match the number of unique levels
my_colors_4 <- rainbow(length(unique_levels))  # or any other color palette you prefer
# Plot with adjusted colors
ggplot(NSF_Grant_Award_Instrument, aes(x = Organization, y = count, fill = AwardInstrument)) +
geom_bar(stat = "identity", position = "dodge") +
ggtitle("Number of Counts of Action Type by Institution") +
xlab("") +
ylab("Number of Active Grants") +
scale_fill_manual(values = my_colors_4) +  # Add this line to set custom colors
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12),
axis.text.y = element_text(size = 12),
legend.text = element_text(size = 12),
plot.title = element_text(hjust = 0.5, size = 14))
# COMPARISON BETWEEEN NSF - Grant Status
library(dplyr)
library(ggplot2)
# Calculate total grant action count for each institution
NSF_Grant_Award_Instrument <- NSF_Compare_Data %>%
group_by(Organization, AwardInstrument) %>%
summarise(count = n(), .groups = "drop") %>%
ungroup()
# Check unique levels of AwardInstrument
unique_levels <- unique(NSF_Grant_Award_Instrument$AwardInstrument)
# Adjust my_colors_4 to match the number of unique levels
my_colors_4 <- ("navyblue", "darkgreen", "darkorange", "darkred")  # or any other color palette you prefer
# Adjust my_colors_4 to match the number of unique levels
my_colors_4 <- ("navyblue", "darkgreen", "darkorange", "darkred")  # or any other color palette you prefer
# COMPARISON BETWEEEN NSF - Grant Status
library(dplyr)
library(ggplot2)
# Calculate total grant action count for each institution
NSF_Grant_Award_Instrument <- NSF_Compare_Data %>%
group_by(Organization, AwardInstrument) %>%
summarise(count = n(), .groups = "drop") %>%
ungroup()
# Check unique levels of AwardInstrument
unique_levels <- unique(NSF_Grant_Award_Instrument$AwardInstrument)
# Adjust my_colors_4 to match the number of unique levels
my_colors_4 <- c("navyblue", "darkgreen", "darkorange", "darkred")  # or any other color palette you prefer
# Plot with adjusted colors
ggplot(NSF_Grant_Award_Instrument, aes(x = Organization, y = count, fill = AwardInstrument)) +
geom_bar(stat = "identity", position = "dodge") +
ggtitle("Number of Counts of Action Type by Institution") +
xlab("") +
ylab("Number of Active Grants") +
scale_fill_manual(values = my_colors_4) +  # Add this line to set custom colors
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12),
axis.text.y = element_text(size = 12),
legend.text = element_text(size = 12),
plot.title = element_text(hjust = 0.5, size = 14))
DOEawardsUI_Dates <- read_xlsx("DOEawards.xlsx")
DOEawardsUI_Dates <- read_xlsx ("DOEawards.xlsx")
library(readxl)
DOEawardsUI_Dates <- read_xlsx ("DOEawards.xlsx")
View(DOEawardsUI_Dates)
library(readxl)
library(dplyr)
DOEawardsUI_Dates <- read_xlsx ("DOEawards.xlsx")
dplyr::filter(Institution == 'Regents of the University of Idaho')
library(readxl)
library(dplyr)
DOEawardsUI_Dates <- read_xlsx ("DOEawards.xlsx")
dplyr::filter(Institution == "Regents of the University of Idaho")
library(readxl)
library(dplyr)
DOEawardsUI_Dates <- read_xlsx ("DOEawards.xlsx")
dplyr::filter(Institution == 'Regents of the University of Idaho')
library(readxl)
library(dplyr)
DOEawardsUI_Dates <- read_xlsx ("DOEawards.xlsx")
dplyr::filter(Institution  == 'Regents of the University of Idaho')
library(readxl)
library(dplyr)
DOEawardsUI_Dates <- read_xlsx ("DOEawards.xlsx")
filter(Institution  == 'Regents of the University of Idaho')
library(readxl)
library(dplyr)
# Read the Excel file
DOEawardsUI_Dates <- read_xlsx("DOEawards.xlsx")
filtered_data_UI_DOE <- DOEawardsUI_Dates %>%
filter(Institution == 'Regents of the University of Idaho')
View(filtered_data_UI_DOE)
USDAawardsUI_Dates <- read.csv("USDAtoUI.csv")
View(DOEawardsUI_Dates)
View(USDAawardsUI_Dates)
View(USDAawardsUI_Dates)
install.packages("lubridate")
#DOE
library(readxl)
library(dplyr)
library(lubridate)
# Read the Excel file
DOEawardsUI_Dates <- read_xlsx("DOEawards.xlsx")
filtered_data_UI_DOE <- DOEawardsUI_Dates %>%
filter(Institution == 'Regents of the University of Idaho')
#USDA
USDAawardsUI_Dates <- read.csv("USDAtoUI.csv")
# Assuming the start date column is named "Start_Date"
five_years_ago <- Sys.Date() - years(5)  # Calculate the date 5 years ago
# Filter the data to include only awards that started 5 years ago or later
filtered_data <- USDAawardsUI_Dates %>%
filter(Award.Date >= five_years_ago)
#DOE
library(readxl)
library(dplyr)
library(lubridate)
# Read the Excel file
DOEawardsUI_Dates <- read_xlsx("DOEawards.xlsx")
filtered_data_UI_DOE <- DOEawardsUI_Dates %>%
filter(Institution == 'Regents of the University of Idaho')
#USDA
USDAawardsUI_Dates <- read.csv("USDAtoUI.csv")
# Assuming the start date column is named "Start_Date"
five_years_ago <- Sys.Date() - years(5)  # Calculate the date 5 years ago
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_5y_USDA <- USDAawardsUI_Dates %>%
filter(Award.Date >= five_years_ago)
View(filtered_data_UI_5y_USDA)
#DOE
library(readxl)
library(dplyr)
library(lubridate)
# Read the Excel file
DOEawardsUI_Dates <- read_xlsx("DOEawards.xlsx")
filtered_data_UI_DOE <- DOEawardsUI_Dates %>%
filter(Institution == 'Regents of the University of Idaho')
#USDA
USDAawardsUI_Dates <- read.csv("USDAtoUI.csv")
# Assuming the start date column is named "Start_Date"
five_years_ago <- Sys.Date() - years(5)  # Calculate the date 5 years ago
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_5y_USDA <- USDAawardsUI_Dates %>%
filter(Award.Date >= five_years_ago)
# Assuming the start date column is named "Start_Date"
ten_years_ago <- Sys.Date() - years(10)  # Calculate the date 5 years ago
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_10y_USDA <- USDAawardsUI_Dates %>%
filter(Award.Date >= ten_years_ago)
View(filtered_data_UI_10y_USDA)
NSFawardsUI_Dates_5 <- read_xlsx("5YR_UI_NSF.xlsx")
NSFawardsUI_Dates_5 <- read_xls("5YR_UI_NSF.xls")
View(NSFawardsUI_Dates_5)
NSFawardsUI_Dates_5 <- read_xls("5YR_UI_NSF.xls")
# Assuming the start date column is named "Start_Date"
five_years_ago <- Sys.Date() - years(5)  # Calculate the date 5 years ago
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_5y_NSF <- NSFawardsUI_Dates_5 %>%
filter(StartDate >= five_years_ago)
View(NSFawardsUI_Dates_5)
NSFawardsUI_Dates_10 <- read_xls("10YR_UI_NSF.xls")
#DOE
library(readxl)
library(dplyr)
library(lubridate)
# Read the Excel file
DOEawardsUI_Dates <- read_xlsx("DOEawards.xlsx")
filtered_data_UI_DOE <- DOEawardsUI_Dates %>%
filter(Institution == 'Regents of the University of Idaho')
#USDA
USDAawardsUI_Dates <- read.csv("USDAtoUI.csv")
# Assuming the start date column is named "Start_Date"
five_years_ago <- Sys.Date() - years(5)  # Calculate the date 5 years ago
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_5y_USDA <- USDAawardsUI_Dates %>%
filter(Award.Date >= five_years_ago)
# Assuming the start date column is named "Start_Date"
ten_years_ago <- Sys.Date() - years(10)  # Calculate the date 5 years ago
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_10y_USDA <- USDAawardsUI_Dates %>%
filter(Award.Date >= ten_years_ago)
#NSF
NSFawardsUI_Dates_5 <- read_xls("5YR_UI_NSF.xls")
# Assuming the start date column is named "Start_Date"
five_years_ago <- Sys.Date() - years(5)  # Calculate the date 5 years ago
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_5y_NSF <- NSFawardsUI_Dates_5 %>%
filter(StartDate >= five_years_ago)
NSFawardsUI_Dates_10 <- read_xls("10YR_UI_NSF.xls")
# Assuming the start date column is named "Start_Date"
ten_years_ago <- Sys.Date() - years(10)  # Calculate the date 5 years ago
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_10y_NSF <- NSFawardsUI_Dates_10 %>%
filter(StartDate >= ten_years_ago)
View(filtered_data_UI_10y_NSF)
View(filtered_data_UI_5y_NSF)
View(filtered_data_UI_5y_USDA)
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_5y_NSF <- NSFawardsUI_Dates_10 %>%
filter(StartDate >= five_years_ago)
#DOE
library(readxl)
library(dplyr)
library(lubridate)
# Read the Excel file
DOEawardsUI_Dates <- read_xlsx("DOEawards.xlsx")
filtered_data_UI_DOE <- DOEawardsUI_Dates %>%
filter(Institution == 'Regents of the University of Idaho')
#USDA
USDAawardsUI_Dates <- read.csv("USDAtoUI.csv")
# Assuming the start date column is named "Start_Date"
five_years_ago <- Sys.Date() - years(5)  # Calculate the date 5 years ago
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_5y_USDA <- USDAawardsUI_Dates %>%
filter(Award.Date >= five_years_ago)
# Assuming the start date column is named "Start_Date"
ten_years_ago <- Sys.Date() - years(10)  # Calculate the date 5 years ago
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_10y_USDA <- USDAawardsUI_Dates %>%
filter(Award.Date >= ten_years_ago)
#NSF
NSFawardsUI_Dates_5 <- read_xls("5YR_UI_NSF.xls")
# Assuming the start date column is named "Start_Date"
five_years_ago <- Sys.Date() - years(5)  # Calculate the date 5 years ago
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_5y_NSF <- NSFawardsUI_Dates_10 %>%
filter(StartDate >= five_years_ago)
NSFawardsUI_Dates_10 <- read_xls("10YR_UI_NSF.xls")
# Assuming the start date column is named "Start_Date"
ten_years_ago <- Sys.Date() - years(10)  # Calculate the date 5 years ago
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_10y_NSF <- NSFawardsUI_Dates_10 %>%
filter(StartDate >= ten_years_ago)
NIHawardsUI_Dates <- read_xlsx("10YR_UI_NIH.xlsx")
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_5y_NIH <- NIHawardsUI_Dates %>%
filter(Award.Date >= five_years_ago)
View(NIHawardsUI_Dates)
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_5y_NIH <- NIHawardsUI_Dates %>%
filter('Budget Start Date' >= five_years_ago)
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_5y_NIH <- NIHawardsUI_Dates %>%
filter("Budget Start Date" >= five_years_ago)
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_5y_NIH <- NIHawardsUI_Dates %>%
filter(`Budget Start Date` >= five_years_ago)
View(filtered_data_UI_5y_NIH)
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_5y_NIH <- NIHawardsUI_Dates %>%
filter(`Project Start Date` >= five_years_ago)
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_5y_NIH <- NIHawardsUI_Dates %>%
filter(`Award Notice Date` >= five_years_ago)
#Assuming the start date column is named "Start_Date"
five_years_ago <- Sys.Date() - years(5)  # Calculate the date 5 years ago
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_5y_NIH <- NIHawardsUI_Dates %>%
filter(`Award Notice Date` >= five_years_ago)
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_5y_NIH <- NIHawardsUI_Dates %>%
filter(`Budget Start Date` >= five_years_ago)
install.packages("ggstance")
library(readxl)
library(dplyr)
library(ggplot2)
library(ggstance)
# Read data from each Excel file
awards_data_sponsor1 <- read_excel("DOEawards.xlsx")
awards_data_sponsor2 <- read.csv("USDAtoUI.csv")
awards_data_sponsor3 <- read_excel("NSFUI_2.xlsx")
awards_data_sponsor4 <- read_excel("NIHUI_@.xlsx")
library(readxl)
library(dplyr)
library(ggplot2)
library(ggstance)
# Read data from each Excel file
awards_data_sponsor1 <- read_excel("DOEawards.xlsx")
awards_data_sponsor2 <- read.csv("USDAtoUI.csv")
awards_data_sponsor3 <- read_excel("NSFUI_2.xlsx")
awards_data_sponsor4 <- read_excel("NIHUI_2.xlsx")
View(awards_data_sponsor1)
View(awards_data_sponsor2)
View(awards_data_sponsor3)
View(awards_data_sponsor4)
# Rename columns to a common set of names
awards_data_sponsor1 <- rename(awards_data_sponsor1, StartDate = "Start Date", EndDate = "End Date", Amount = "Amount Awarded to Date", PIName = "PM")
# Rename columns to a common set of names
awards_data_sponsor1 <- rename(awards_data_sponsor1, StartDate = "Start Date", EndDate = "End Date", Amount = "Amount Awarded to Date", PIName = "PI")
# Rename columns to a common set of names
awards_data_sponsor1 <- rename(awards_data_sponsor1, StartDate = "Start Date", EndDate = "End Date", Amount = "Amount Awarded to Date", PIName = "PI")
library(readxl)
library(dplyr)
library(ggplot2)
library(ggstance)
# Read data from each Excel file
awards_data_sponsor1_1 <- read_excel("DOEawards.xlsx")
awards_data_sponsor2 <- read.csv("USDAtoUI.csv")
awards_data_sponsor3 <- read_excel("NSFUI_2.xlsx")
awards_data_sponsor4 <- read_excel("NIHUI_2.xlsx")
# Rename columns to a common set of names
awards_data_sponsor1_1 <- rename(awards_data_sponsor1, StartDate = "Start Date", EndDate = "End Date", Amount = "Amount Awarded to Date", PIName = "PI")
View(awards_data_sponsor1_1)
# Rename columns to a common set of names
awards_data_sponsor1_1 <- rename(awards_data_sponsor1, StartDate = "Start Date", EndDate = "End Date", Amount = "Amount Awarded to Date", PIName = "PI")
library(readxl)
library(dplyr)
library(ggplot2)
library(ggstance)
# Read data from each Excel file
awards_data_sponsor1 <- read_excel("DOEawards.xlsx")
awards_data_sponsor2 <- read.csv("USDAtoUI.csv")
awards_data_sponsor3 <- read_excel("NSFUI_2.xlsx")
awards_data_sponsor4 <- read_excel("NIHUI_2.xlsx")
View(awards_data_sponsor1)
awards_data_sponsor1 <- rename(awards_data_sponsor1, StartDate = "Start Date", EndDate = "End Date", Amount = "Amount Awarded to Date", PIName = "PI")
awards_data_sponsor3 <- rename(awards_data_sponsor3, StartDate = "StartDate", EndDate = "EndDate", Amount = "AwardedAmountToDate", PIName = "PrincipalInvestigator")
awards_data_sponsor4 <- rename(awards_data_sponsor4, StartDate = "Budget Start Date", EndDate = "Budget End Date", Amount = "Total Cost", PIName = "Contact PI/Project Leader")
awards_data_sponsor4 <- rename(awards_data_sponsor4, StartDate = "Project Start Date", EndDate = "Project End Date", Amount = "Total Cost", PIName = "Contact PI/Project Leader")
awards_data_sponsor4 <- rename(awards_data_sponsor4, StartDate = "Budget Start Date", EndDate = "Budget End Date", Amount = "Total Cost", PIName = "Contact PI/Project Leader")
awards_data_sponsor4 <- rename(awards_data_sponsor4, StartDate = "Budget Start Date", EndDate = "Budget End Date", Amount = "Total Cost", PIName = "Contact PI / Project Leader")
# Combine the data
awards_data <- bind_rows(
sponsor1 = mutate(awards_data_sponsor1, Sponsor = "Sponsor 1"),
sponsor3 = mutate(awards_data_sponsor3, Sponsor = "Sponsor 2"),
sponsor4 = mutate(awards_data_sponsor4, Sponsor = "Sponsor 2")
)
awards_data_sponsor4 <- mutate(awards_data_sponsor4, Amount = as.numeric(Amount))
awards_data_sponsor3 <- mutate(awards_data_sponsor3, Amount = as.numeric(Amount))
# Convert Amount column to numeric in all datasets
awards_data_sponsor1 <- mutate(awards_data_sponsor1, Amount = as.numeric(Amount))
# Combine the data
awards_data <- bind_rows(
sponsor1 = mutate(awards_data_sponsor1, Sponsor = "Sponsor 1"),
sponsor3 = mutate(awards_data_sponsor3, Sponsor = "Sponsor 2"),
sponsor4 = mutate(awards_data_sponsor4, Sponsor = "Sponsor 3")
)
View(awards_data)
library(readxl)
library(dplyr)
library(ggplot2)
library(ggstance)
# Read data from each Excel file
awards_data_sponsor1 <- read_excel("DOEawards.xlsx")
awards_data_sponsor3 <- read_excel("NSFUI_2.xlsx")
awards_data_sponsor4 <- read_excel("NIHUI_2.xlsx")
# Rename columns to ensure consistency
awards_data_sponsor1 <- rename(awards_data_sponsor1, StartDate = "Start Date", EndDate = "End Date", Amount = "Amount Awarded to Date", PIName = "PI")
awards_data_sponsor3 <- rename(awards_data_sponsor3, StartDate = "StartDate", EndDate = "EndDate", Amount = "AwardedAmountToDate", PIName = "PrincipalInvestigator")
awards_data_sponsor4 <- rename(awards_data_sponsor4, StartDate = "Budget Start Date", EndDate = "Budget End Date", Amount = "Total Cost", PIName = "Contact PI / Project Leader")
# Combine the data
awards_data <- bind_rows(
sponsor1 = awards_data_sponsor1,
sponsor3 = awards_data_sponsor3,
sponsor4 = awards_data_sponsor4
)
library(readxl)
library(dplyr)
library(ggplot2)
library(ggstance)
# Read data from each Excel file
awards_data_sponsor1 <- read_excel("DOEawards.xlsx")
awards_data_sponsor3 <- read_excel("NSFUI_2.xlsx")
awards_data_sponsor4 <- read_excel("NIHUI_2.xlsx")
# Rename columns to ensure consistency
awards_data_sponsor1 <- rename(awards_data_sponsor1, StartDate = "Start Date", EndDate = "End Date", Amount = "Amount Awarded to Date", PIName = "PI")
awards_data_sponsor3 <- rename(awards_data_sponsor3, StartDate = "StartDate", EndDate = "EndDate", Amount = "AwardedAmountToDate", PIName = "PrincipalInvestigator")
awards_data_sponsor4 <- rename(awards_data_sponsor4, StartDate = "Budget Start Date", EndDate = "Budget End Date", Amount = "Total Cost", PIName = "Contact PI / Project Leader")
# Convert Amount column to numeric in all datasets
awards_data_sponsor1 <- mutate(awards_data_sponsor1, Amount = as.numeric(Amount))
awards_data_sponsor3 <- mutate(awards_data_sponsor3, Amount = as.numeric(Amount))
awards_data_sponsor4 <- mutate(awards_data_sponsor4, Amount = as.numeric(Amount))
# Combine the data
awards_data <- bind_rows(
sponsor1 = awards_data_sponsor1,
sponsor3 = awards_data_sponsor3,
sponsor4 = awards_data_sponsor4
)
# Convert StartDate and EndDate columns to Date objects
awards_data <- awards_data %>%
mutate(StartDate = as.Date(StartDate),
EndDate = as.Date(EndDate))
# Filter for active awards
current_date <- Sys.Date()
active_awards <- awards_data %>%
filter(EndDate >= current_date)
# Create the Gantt chart
ggplot(active_awards, aes(y = Sponsor, x = StartDate, xend = EndDate, color = Sponsor)) +
geom_dumbbell(size = 6, color = "black", stroke = 2, linetype = "solid") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
labs(title = "Active Awards Timeline",
x = "Timeline",
y = "Sponsor",
color = "Sponsor") +
theme_minimal() +
theme(legend.position = "bottom")
library(readxl)
library(dplyr)
library(ggplot2)
library(ggstance)
# Read data from each Excel file
awards_data_sponsor1 <- read_excel("DOEawards.xlsx")
awards_data_sponsor3 <- read_excel("NSFUI_2.xlsx")
awards_data_sponsor4 <- read_excel("NIHUI_2.xlsx")
# Rename columns to ensure consistency
awards_data_sponsor1 <- rename(awards_data_sponsor1, StartDate = "Start Date", EndDate = "End Date", Amount = "Amount Awarded to Date", PIName = "PI")
awards_data_sponsor3 <- rename(awards_data_sponsor3, StartDate = "StartDate", EndDate = "EndDate", Amount = "AwardedAmountToDate", PIName = "PrincipalInvestigator")
awards_data_sponsor4 <- rename(awards_data_sponsor4, StartDate = "Budget Start Date", EndDate = "Budget End Date", Amount = "Total Cost", PIName = "Contact PI / Project Leader")
# Convert Amount column to numeric in all datasets
awards_data_sponsor1 <- mutate(awards_data_sponsor1, Amount = as.numeric(Amount))
awards_data_sponsor3 <- mutate(awards_data_sponsor3, Amount = as.numeric(Amount))
awards_data_sponsor4 <- mutate(awards_data_sponsor4, Amount = as.numeric(Amount))
# Combine the data
awards_data <- bind_rows(
sponsor1 = awards_data_sponsor1,
sponsor3 = awards_data_sponsor3,
sponsor4 = awards_data_sponsor4
)
# Convert StartDate and EndDate columns to Date objects
awards_data <- awards_data %>%
mutate(StartDate = as.Date(StartDate),
EndDate = as.Date(EndDate))
# Filter for active awards
current_date <- Sys.Date()
active_awards <- awards_data %>%
filter(EndDate >= current_date)
# Create the Gantt chart
ggplot(active_awards, aes(y = Sponsor, x = StartDate, xend = EndDate, color = Sponsor)) +
geom_dumbbell(size = 6, color = "black", stroke = 2, linetype = "solid") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
labs(title = "Active Awards Timeline",
x = "Timeline",
y = "Sponsor",
color = "Sponsor") +
theme_minimal() +
theme(legend.position = "bottom")
library(readxl)
library(dplyr)
library(ggplot2)
library(ggstance)
# Read data from each Excel file
awards_data_sponsor1 <- read_excel("DOEawards.xlsx")
awards_data_sponsor3 <- read_excel("NSFUI_2.xlsx")
awards_data_sponsor4 <- read_excel("NIHUI_2.xlsx")
# Rename columns to ensure consistency
awards_data_sponsor1 <- rename(awards_data_sponsor1, StartDate = "Start Date", EndDate = "End Date", Amount = "Amount Awarded to Date", PIName = "PI")
awards_data_sponsor3 <- rename(awards_data_sponsor3, StartDate = "StartDate", EndDate = "EndDate", Amount = "AwardedAmountToDate", PIName = "PrincipalInvestigator")
awards_data_sponsor4 <- rename(awards_data_sponsor4, StartDate = "Budget Start Date", EndDate = "Budget End Date", Amount = "Total Cost", PIName = "Contact PI / Project Leader")
# Convert Amount column to numeric in all datasets
awards_data_sponsor1 <- mutate(awards_data_sponsor1, Amount = as.numeric(Amount))
awards_data_sponsor3 <- mutate(awards_data_sponsor3, Amount = as.numeric(Amount))
awards_data_sponsor4 <- mutate(awards_data_sponsor4, Amount = as.numeric(Amount))
# Combine the data
awards_data <- bind_rows(
sponsor1 = awards_data_sponsor1,
sponsor3 = awards_data_sponsor3,
sponsor4 = awards_data_sponsor4
)
# Convert StartDate and EndDate columns to Date objects
awards_data <- awards_data %>%
mutate(StartDate = as.Date(StartDate),
EndDate = as.Date(EndDate))
# Filter for active awards
current_date <- Sys.Date()
active_awards <- awards_data %>%
filter(EndDate >= current_date)
# Create the Gantt chart
ggplot(active_awards, aes(y = Sponsor, x = StartDate, xend = EndDate, color = Sponsor)) +
geom_dumbbell(size = 6, color = "black", stroke = 2, linetype = "solid") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
labs(title = "Active Awards Timeline",
x = "Timeline",
y = "Sponsor",
color = "Sponsor") +
theme_minimal() +
theme(legend.position = "bottom")
