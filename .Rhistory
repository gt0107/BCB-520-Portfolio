theme(plot.title = element_text(hjust = 0.5))
library(dplyr)
library(ggplot2)
SummaryDraft2018 <- Draft_2018 %>%
group_by(playerId, round, overall, position, name) %>%
summarise(totgames = sum(NHLgames, na.rm = TRUE), .groups = 'drop')  # Ensure NA values are handled
ggplot(SummaryDraft2018, aes(x = round, y = totgames, color = position)) +
geom_point() +
theme_minimal() +
ggtitle("Total NHL Games by Draft Round (2018)") +
xlab("Draft Round") +
ylab("Total NHL Games Played") +
theme(plot.title = element_text(hjust = 0.5))
library(dplyr)
library(ggplot2)
SummaryDraft2018 <- Draft_2018 %>%
group_by(playerId, round, overall, position, name) %>%
summarise(totgames = sum(NHLgames, na.rm = TRUE), .groups = 'drop')  # Handle NA values
# Convert 'round' from numeric to an ordered factor
SummaryDraft2018$round <- factor(SummaryDraft2018$round,
levels = sort(unique(SummaryDraft2018$round)),
ordered = TRUE)
# Now create the plot
ggplot(SummaryDraft2018, aes(x = round, y = totgames, color = position)) +
geom_point() +
scale_color_manual(values = my_colors) +  # Assuming 'my_colors' is defined as before
theme_minimal() +
ggtitle("Total NHL Games by Draft Round (2018)") +
xlab("Draft Round") +
ylab("Total NHL Games Played") +
theme(plot.title = element_text(hjust = 0.5))
library(dplyr)
library(ggplot2)
SummaryDraft2018 <- Draft_2018 %>%
group_by(playerId, round, overall, position, name) %>%
summarise(totgames = sum(NHLgames, na.rm = TRUE), .groups = 'drop')  # Handle NA values
SummaryDraft2018$round <- factor(SummaryDraft2018$round,
levels = sort(unique(SummaryDraft2018$round)),
ordered = TRUE)
ggplot(SummaryDraft2018, aes(x = round, y = totgames, color = position)) +
geom_point() +
theme_minimal() +
ggtitle("Total NHL Games by Draft Round (2018)") +
xlab("Draft Round") +
ylab("Total NHL Games Played") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(SummaryDraft2018, aes(x=overall, y=totgames))+
geom_point()
ggplot(SummaryDraft2018, aes(x=overall, y=totgames))+
geom_point()
library(ggplot2)
# Assuming 'round' is already a factor in SummaryDraft2018. If not, convert it first:
SummaryDraft2018$round <- as.factor(SummaryDraft2018$round)
# Create the plot, coloring points by 'round'
ggplot(SummaryDraft2018, aes(x = overall, y = totgames, color = round)) +
geom_point(alpha = 0.6, size = 3) +
scale_color_manual(values = c("1" = "blue", "2" = "red", "3" = "green")) +  # Customize colors for rounds
theme_minimal() +
labs(title = "Total NHL Games Played by Draft Position",
x = "Overall Draft Position",
y = "Total NHL Games Played",
color = "Draft Round") +
theme(plot.title = element_text(hjust = 0.5))
library(ggplot2)
# Assuming 'round' is already a factor in SummaryDraft2018. If not, convert it first:
SummaryDraft2018$round <- as.factor(SummaryDraft2018$round)
# Create the plot, coloring points by 'round'
ggplot(SummaryDraft2018, aes(x = overall, y = totgames, color = round)) +
geom_point(alpha = 0.6, size = 3) +
scale_color_manual(values = c("1" = "blue", "2" = "red", "3" = "green", 4 = "purple", 5 = "orange", 6 = "magenta", 7 = "gold")) +  # Customize colors for rounds
library(ggplot2)
SummaryDraft2018$round <- as.factor(SummaryDraft2018$round)
ggplot(SummaryDraft2018, aes(x = overall, y = totgames, color = round)) +
geom_point(alpha = 0.6, size = 3) +
scale_color_manual(values = c(scale_color_manual(values = c("1" = "blue", "2" = "red", "3" = "green", "4" = "purple", "5" = "orange", "6" = "magenta", "7" = "gold")) +
theme_minimal() +
labs(title = "Total NHL Games Played by Draft Position",
x = "Overall Draft Position",
y = "Total NHL Games Played",
color = "Draft Round") +
theme(plot.title = element_text(hjust = 0.5))
library(ggplot2)
library(ggplot2)
SummaryDraft2018$round <- as.factor(SummaryDraft2018$round)
ggplot(SummaryDraft2018, aes(x = overall, y = totgames, color = round)) +
geom_point(alpha = 0.6, size = 3) +
scale_color_manual(values = c("1" = "blue", "2" = "red", "3" = "green", "4" = "purple", "5" = "orange", "6" = "magenta", "7" = "gold")) +
theme_minimal() +
labs(title = "Total NHL Games Played by Draft Position",
x = "Overall Draft Position",
y = "Total NHL Games Played",
color = "Draft Round") +
theme(plot.title = element_text(hjust = 0.5))
library(ggplot2)
SummaryDraft2018$round <- as.factor(SummaryDraft2018$round)
ggplot(SummaryDraft2018, aes(x = overall, y = totgames, fill = round)) +  # Use 'fill' instead of 'color' for the aes
geom_point(shape = 21, alpha = 0.6, size = 3, colour = "black") +  # shape 21 allows for both fill and color
scale_fill_manual(values = c("1" = "blue", "2" = "red", "3" = "green", "4" = "purple", "5" = "orange", "6" = "magenta", "7" = "gold")) +
theme_minimal() +
labs(title = "Total NHL Games Played by Draft Position",
x = "Overall Draft Position",
y = "Total NHL Games Played",
fill = "Draft Round") +  # Change 'color' to 'fill' in the legend title
theme(plot.title = element_text(hjust = 0.5))
library(dplyr)
library(ggplot2)
Draft_2019 <- NHL_Drafts %>%
filter(draftyear == 2019 & postdraft < 6)
View(Draft_2019)
SummaryDraft2019 <- Draft_2019 %>%
group_by(playerId, round, overall, position, name) %>%
summarise(totgames = sum(NHLgames, na.rm = TRUE), .groups = 'drop')  # Handle NA values
View(SummaryDraft2019)
SummaryDraft2019 <- Draft_2019 %>%
group_by(playerId, round, overall, position, name) %>%
summarise(totgames = sum(NHLgames, na.rm = TRUE), .groups = 'drop')  # Handle NA values
library(dplyr)
library(ggplot2)
Draft_2019 <- NHL_Drafts %>%
filter(draftyear == 2019 & postdraft < 6)
SummaryDraft2019 <- Draft_2019 %>%
group_by(playerId, round, overall, position, name) %>%
summarise(totgames = sum(NHLgames, na.rm = TRUE), .groups = 'drop')  # Handle NA values
SummaryDraft2019$round <- factor(SummaryDraft2019$round,
levels = sort(unique(SummaryDraft2019$round)),
ordered = TRUE)
library(dplyr)
library(ggplot2)
Draft_2019 <- NHL_Drafts %>%
filter(draftyear == 2019 & postdraft < 6)
SummaryDraft2019 <- Draft_2019 %>%
group_by(playerId, round, overall, position, name) %>%
summarise(totgames = sum(NHLgames, na.rm = TRUE), .groups = 'drop')  # Handle NA values
SummaryDraft2019$round <- factor(SummaryDraft2019$round,
levels = sort(unique(SummaryDraft2019$round)),
ordered = TRUE)
SummaryDraft2018$Year <- 2018
SummaryDraft2019$Year <- 2019
# Combine the data frames
CombinedDrafts <- rbind(SummaryDraft2018, SummaryDraft2019)
View(CombinedDrafts)
library(dplyr)
library(ggplot2)
Draft_2019 <- NHL_Drafts %>%
filter(draftyear == 2019 & postdraft < 6)
SummaryDraft2019 <- Draft_2019 %>%
group_by(playerId, round, overall, position, name) %>%
summarise(totgames = sum(NHLgames, na.rm = TRUE), .groups = 'drop')  # Handle NA values
SummaryDraft2019$round <- factor(SummaryDraft2019$round,
levels = sort(unique(SummaryDraft2019$round)),
ordered = TRUE)
SummaryDraft2018$Year <- 2018
SummaryDraft2019$Year <- 2019
CombinedDrafts <- rbind(SummaryDraft2018, SummaryDraft2019)
library(ggplot2)
CombinedDrafts$round <- as.factor(CombinedDrafts$round)
ggplot(CombinedDrafts, aes(x = overall, y = totgames, color = as.factor(Year), shape = round)) +
geom_point(alpha = 0.6, size = 3, stroke = 1) +  # 'stroke' controls the border thickness
scale_fill_manual(values = c("2018" = "blue", "2019" = "red")) +
theme_minimal() +
labs(title = "Total NHL Games Played by Draft Position (2018 & 2019)",
x = "Overall Draft Position",
y = "Total NHL Games Played",
color = "Draft Year",
shape = "Draft Round") +
theme(plot.title = element_text(hjust = 0.5))
library(dplyr)
library(ggplot2)
Draft_2019 <- NHL_Drafts %>%
filter(draftyear == 2019 & postdraft < 6)
SummaryDraft2019 <- Draft_2019 %>%
group_by(playerId, round, overall, position, name) %>%
summarise(totgames = sum(NHLgames, na.rm = TRUE), .groups = 'drop')  # Handle NA values
SummaryDraft2019$round <- factor(SummaryDraft2019$round,
levels = sort(unique(SummaryDraft2019$round)),
ordered = TRUE)
SummaryDraft2018$Year <- 2018
SummaryDraft2019$Year <- 2019
CombinedDrafts <- rbind(SummaryDraft2018, SummaryDraft2019)
library(ggplot2)
CombinedDrafts$round <- as.factor(CombinedDrafts$round)
ggplot(CombinedDrafts, aes(x = overall, y = totgames, color = as.factor(Year))) +
geom_point(alpha = 0.6, size = 3) +
facet_wrap(~ round, ncol = 3) +  # Adjust 'ncol' as needed for layout
scale_color_manual(values = c("2018" = "blue", "2019" = "red")) +
theme_minimal() +
labs(title = "Total NHL Games Played by Draft Position (2018 & 2019)",
x = "Overall Draft Position",
y = "Total NHL Games Played",
color = "Draft Year") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(CombinedDrafts, aes(x = overall, y = totgames, color = as.factor(Year))) +
geom_point(alpha = 0.6, size = 3) +
scale_color_manual(values = c("2018" = "blue", "2019" = "red")) +
theme_minimal() +
labs(title = "Total NHL Games Played by Draft Position (2018 & 2019)",
x = "Overall Draft Position",
y = "Total NHL Games Played",
color = "Draft Year") +
theme(plot.title = element_text(hjust = 0.5))
library(dplyr)
library(ggplot2)
Draft_2019 <- NHL_Drafts %>%
filter(draftyear == 2019 & postdraft < 6)
SummaryDraft2019 <- Draft_2019 %>%
group_by(playerId, round, overall, position, name) %>%
summarise(totgames = sum(NHLgames, na.rm = TRUE), .groups = 'drop')  # Handle NA values
SummaryDraft2019$round <- factor(SummaryDraft2019$round,
levels = sort(unique(SummaryDraft2019$round)),
ordered = TRUE)
SummaryDraft2018$Year <- 2018
SummaryDraft2019$Year <- 2019
CombinedDrafts <- rbind(SummaryDraft2018, SummaryDraft2019)
library(ggplot2)
CombinedDrafts$round <- as.factor(CombinedDrafts$round)
ggplot(CombinedDrafts, aes(x = overall, y = totgames, color = as.factor(Year))) +
geom_point(alpha = 0.6, size = 3) +
facet_wrap(~ round, ncol = 3) +  # Adjust 'ncol' as needed for layout
scale_color_manual(values = c("2018" = "blue", "2019" = "red")) +
theme_minimal() +
labs(title = "Total NHL Games Played by Draft Position (2018 & 2019)",
x = "Overall Draft Position",
y = "Total NHL Games Played",
color = "Draft Year") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(CombinedDrafts, aes(x = overall, y = totgames, color = as.factor(Year))) +
geom_point(alpha = 0.6, size = 3) +
facet_wrap(~ round, ncol = 3) +  # Or adjust 'ncol' as needed
scale_color_manual(values = c("2018" = "blue", "2019" = "red")) +
theme_minimal() +
labs(title = "Total NHL Games Played by Draft Position (2018 & 2019)",
x = "Overall Draft Position",
y = "Total NHL Games Played",
color = "Draft Year") +
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(size = 8),
plot.margin = margin(t = 10, r = 10, b = 10, l = 10))
ggplot(CombinedDrafts, aes(x = overall, y = totgames, fill = as.factor(Year))) +
geom_point(shape = 21, alpha = 0.6, size = 3, colour = "black") +  # shape 21 supports fill and colour
scale_fill_manual(values = c("2018" = "blue", "2019" = "red")) +
facet_wrap(~ round, ncol = 3) +
theme_minimal() +
labs(title = "Total NHL Games Played by Draft Position (2018 & 2019)",
x = "Overall Draft Position",
y = "Total NHL Games Played",
fill = "Draft Year") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(CombinedDrafts, aes(x = overall, y = totgames, color = as.factor(Year))) +
geom_point(alpha = 0.6, size = 3) +
scale_color_manual(values = c("2018" = "blue", "2019" = "red")) +
theme_minimal() +
labs(title = "Total NHL Games Played by Draft Position (2018 & 2019)",
x = "Overall Draft Position",
y = "Total NHL Games Played",
color = "Draft Year") +
theme(plot.title = element_text(hjust = 0.5))
library(ggplot2)
SummaryDraft2018$round <- as.factor(SummaryDraft2018$round)
ggplot(SummaryDraft2018, aes(x = overall, y = totgames, fill = round)) +  # Use 'fill' instead of 'color' for the aes
geom_point(shape = 21, alpha = 0.6, size = 3, colour = "black") +  # shape 21 allows for both fill and color
scale_fill_manual(values = c("1" = "blue", "2" = "red", "3" = "green", "4" = "purple", "5" = "orange", "6" = "magenta", "7" = "gold")) +
theme_minimal() +
labs(title = "Total NHL Games Played by Draft Position",
x = "Overall Draft Position",
y = "Total NHL Games Played",
fill = "Draft Round") +  # Change 'color' to 'fill' in the legend title
theme(plot.title = element_text(hjust = 0.5))
library(dplyr)
library(ggplot2)
Draft_2019 <- NHL_Drafts %>%
filter(draftyear == 2019 & postdraft < 6)
SummaryDraft2019 <- Draft_2019 %>%
group_by(playerId, round, overall, position, name) %>%
summarise(totgames = sum(NHLgames, na.rm = TRUE), .groups = 'drop')  # Handle NA values
SummaryDraft2019$round <- factor(SummaryDraft2019$round,
levels = sort(unique(SummaryDraft2019$round)),
ordered = TRUE)
SummaryDraft2018$Year <- 2018
SummaryDraft2019$Year <- 2019
CombinedDrafts <- rbind(SummaryDraft2018, SummaryDraft2019)
library(ggplot2)
CombinedDrafts$round <- as.factor(CombinedDrafts$round)
ggplot(CombinedDrafts, aes(x = overall, y = totgames, fill = as.factor(Year))) +
geom_point(shape = 21, alpha = 0.6, size = 3, colour = "black") +
scale_fill_manual(values = c("2018" = "blue", "2019" = "red")) +
facet_wrap(~ round, ncol = 3) +
theme_minimal() +
labs(title = "Total NHL Games Played by Draft Position (2018 & 2019)",
x = "Overall Draft Position",
y = "Total NHL Games Played",
fill = "Draft Year") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(CombinedDrafts, aes(x = overall, y = totgames, color = as.factor(Year))) +
geom_point(alpha = 0.6, size = 3) +
scale_color_manual(values = c("2018" = "blue", "2019" = "red")) +
theme_minimal() +
labs(title = "Total NHL Games Played by Draft Position (2018 & 2019)",
x = "Overall Draft Position",
y = "Total NHL Games Played",
color = "Draft Year") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(Draft_2018, aes(x=round, y=totgames))+
geom_point()+
geom_smooth()
ggplot(SummaryDraft2018, aes(x=round, y=totgames))+
geom_point()+
geom_smooth()
ggplot(SummaryDraft2018, aes(x=round, y=totgames))+
geom_point()+
geom_smooth()
ggplot(SummaryDraft2018, aes(x=round, y=totgames))+
geom_point()
ggplot(SummaryDraft2018, aes(x=round, y=totgames))+
geom_point()+
geom_smooth()
library(ggplot2)
ggplot(Draft_2018, aes(x = round, y = totgames)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE)  # Adds a linear model line with confidence interval
ggplot(SummaryDraft2018, aes(x=round, y=totgames))+
geom_point()
ggplot(SummaryDraft2018, aes(x=round, y=totgames))+
geom_point()+
geom_smooth()
library(ggplot2)
# Convert 'round' to numeric for plotting (if not already numeric)
SummaryDraft2018$round_numeric <- as.numeric(as.character(SummaryDraft2018$round))
ggplot(SummaryDraft2018, aes(x = round_numeric, y = totgames)) +
geom_point() +
geom_smooth(method = "loess", se = TRUE)  # Using LOESS; for linear model, use method = "lm"
DraftTotal <-NHL_Drafts%>%
```
DraftTotal <-NHL_Drafts%>%
filter(postdraft<8)%>%
group_by(playerId, round, overall, position, name)%>%
summarise(totgames=sum(NHLgames))
View(DraftTotal)
ggplot(DraftTotal, aes(x = overall, y = totgames)) +
geom_point()
ggplot(DraftTotal, aes(x = overall, y = totgames)) +
geom_point()+
geom_smooth
ggplot(DraftTotal, aes(x = overall, y = totgames)) +
geom_smooth()
ggplot(DraftTotal, aes(x = overall, y = totgames)) +
geom_smooth(aes(color=as.factor(round)))
ggplot(NHL_Drafts, aes(x = overall, y = totgames)) +
geom_smooth(aes(color=as.factor(round)))
library(readxl)
NHL_Drafts <- read_excel("NHLDraftsPicks.xlsx")
knitr::kable(head(NHL_Drafts,10))
View(NHL_Drafts)
library(tidyverse)
ggplot(NHL_Drafts, aes(x = overall, y = totgames)) +
geom_smooth(aes(color=as.factor(round)))
library(ggplot2)
ggplot(NHL_Drafts, aes(x = overall, y = totgames)) +
geom_point(aes(color=as.factor(round)), alpha = 0.6) +  # Display points, colored by round
geom_smooth(aes(color=as.factor(round)), method = "loess", se = FALSE) +  # Add smooth lines without confidence interval shading
labs(title = "NHL Drafts: Total Games Played by Overall Draft Position",
x = "Overall Draft Position",
y = "Total Games Played",
color = "Draft Round") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
library(ggplot2)
# Assuming 'totgames' and 'overall' are valid columns in 'NHL_Drafts'
ggplot(NHL_Drafts, aes(x = overall, y = totgames)) +
geom_point(aes(color = as.factor(round))) +
geom_smooth(aes(color = as.factor(round)), method = "loess", se = FALSE) +
labs(title = "NHL Drafts: Total Games Played by Overall Draft Position",
x = "Overall Draft Position",
y = "Total Games Played",
color = "Draft Round") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
GettingTotalDrafts <-NHL_Drafts%>%
summarise(totgames=sum(NHLgames))
View(GettingTotalDrafts)
GettingTotalDrafts <-NHL_Drafts%>%
group_by(playerId, round, overall, position, name)%>%
summarise(totgames=sum(NHLgames))
View(GettingTotalDrafts)
GettingTotalDrafts <-NHL_Drafts%>%
group_by(playerId, round, overall, position, name)%>%
summarise(totgames=sum(NHLgames))
library(tidyverse)
library(dplyr)
library(ggplot2)
library(readxl)
NHLDraft<-read.csv("NHLDraft.csv")
NHLDictionary<-read_excel("NHLDictionary.xlsx")
knitr::kable(NHLDictionary)
library(readr)
NHLdraftstats <- read_csv("posts/VisualizationTabularDataPart2/NHLdraftstats.csv")
View(NHLdraftstats)
Elias_stats <- NHLdraftstats %>%
filter(name)
Elias_stats <- NHLdraftstats %>%
find("Elias Lindholm")
Elias_stats <- NHLdraftstats %>%
filter(name == "Elias Lindholm")
View(Elias_stats)
ggplot(Elias_stats, aes(x=draftyear, y=postdraft))+
geom_point()
ggplot(Elias_stats, aes(x=postdraft, y=NHLgames))+
geom_point()
ggplot(Elias_stats, aes(x=postdraft, y=NHLgames))+
geom_smooth()
theme_minimal() +
ggtitle("Elias Lindholm Performance") +
xlab("NHL Games Played") +
ylab("Draft Round")+
theme(plot.title = element_text(hjust = 0.5))
library(dplyr)
Elias_stats <- NHLdraftstats %>%
filter(name == "Elias Lindholm")
ggplot(Elias_stats, aes(x=postdraft, y=NHLgames))+
geom_smooth()
theme_minimal() +
ggtitle("Elias Lindholm Performance") +
xlab("NHL Games Played") +
ylab("Draft Round")+
theme(plot.title = element_text(hjust = 0.5))
library(dplyr)
library(ggplot2)
Elias_stats <- NHLdraftstats %>%
filter(name == "Elias Lindholm")
ggplot(Elias_stats, aes(x=postdraft, y=NHLgames)) +
geom_smooth(method = "lm") +
theme_minimal() +
ggtitle("Elias Lindholm Performance") +
xlab("Post Draft Position") +
ylab("NHL Games Played") +
theme(plot.title = element_text(hjust = 0.5))
library(dplyr)
library(ggplot2)
Elias_stats <- NHLdraftstats %>%
filter(name == "Elias Lindholm")
ggplot(Elias_stats, aes(x=postdraft, y=NHLgames)) +
geom_smooth() +
theme_minimal() +
ggtitle("Elias Lindholm Performance") +
xlab("Post Draft Position") +
ylab("NHL Games Played") +
theme(plot.title = element_text(hjust = 0.5))
library(dplyr)
library(ggplot2)
Elias_stats <- NHLdraftstats %>%
filter(name == "Elias Lindholm")
ggplot(Elias_stats, aes(x=postdraft, y=NHLgames)) +
geom_smooth() +
theme_minimal() +
ggtitle("Elias Lindholm Performance") +
xlab("Post Draft Position") +
ylab("NHL Games Played") +
theme(plot.title = element_text(hjust = 0.5))
NHLdraftstats <- read.csv("NHLdraftstats.csv")
players_stats_2013 <- NHLdraftstats %>%
filter(year == 2013)
players_stats_2013 <- NHLdraftstats %>%
filter(draftyear == 2013)
View(players_stats_2013)
View(p)
View(players_stats_2013)
ggplot(players_stats_2013, aes(x=postdraft, y=NHLgames)) +
geom_smooth() +
theme_minimal() +
ggtitle("Overall Players in 2013") +
xlab("Post Draft Position") +
ylab("NHL Games Played") +
theme(plot.title = element_text(hjust = 0.5))
players_stats_2013 <- NHLdraftstats %>%
filter(draftyear == 2013)
library(ggplot2)
ggplot(players_stats_2013, aes(x=postdraft, y=NHLgames, color=as.factor(round))) +
geom_smooth(se=FALSE) +  # 'se=FALSE' removes the shaded confidence interval around the smooth line
theme_minimal() +
ggtitle("Overall Players in 2013 by Draft Round") +
xlab("Post Draft Position") +
ylab("NHL Games Played") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_brewer(palette="Set1", name="Draft Round")  # Use a color palette suitable for categorical data
library(dplyr)
players_stats_2013_2 <- NHLdraftstats %>%
filter(draftyear == 2013) %>%
filter(name != "Elias Lindholm")
View(players_stats_2013_2)
library(dplyr)
players_stats_2013_2 <- NHLdraftstats %>%
filter(draftyear == 2013) %>%
filter(name != "Elias Lindholm")
ggplot(players_stats_2013_2, aes(x=postdraft, y=NHLgames, color=as.factor(round))) +
geom_smooth(se=FALSE) +
theme_minimal() +
ggtitle("Overall Players in 2013 by Draft Round") +
xlab("Post Draft Position") +
ylab("NHL Games Played") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_brewer(palette="Set1", name="Draft Round")
players_stats_2013 <- NHLdraftstats %>%
filter(draftyear == 2013)
library(ggplot2)
ggplot(players_stats_2013, aes(x=postdraft, y=NHLgames, color=as.factor(round))) +
geom_smooth(se=FALSE) +
theme_minimal() +
ggtitle("Overall Players in 2013 by Draft Round") +
xlab("Post Draft Position") +
ylab("NHL Games Played") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_brewer(palette="Set1", name="Draft Round")
