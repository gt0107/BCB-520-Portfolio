filter(as.Date(StartDate, format = "%m/%d/%Y") >= ten_years_ago)
# Assuming the column names for "Start Date" vary across datasets, replace "Start Date" with the actual column name for each dataset.
# For DOE dataset
filtered_data_UI_10y_DOE <- filtered_data_UI_10y_DOE %>%
mutate(Start_Date = as.Date(`Start Date`, format = "Start Date"))
# For USDA dataset
filtered_data_UI_10y_USDA <- filtered_data_UI_10y_USDA %>%
mutate(Start_Date = as.Date(`Award Date`, format = "Award Date"))
# For NIH dataset
filtered_data_UI_10y_NIH <- filtered_data_UI_10y_NIH %>%
mutate(Start_Date = as.Date(`Project Start Date`, format = "Project Start Date"))
# For NSF dataset
filtered_data_UI_10y_NSF <- filtered_data_UI_10y_NSF %>%
mutate(Start_Date = as.Date(StartDate, format = "StartDate"))
# Count the number of awards by award date for each dataset
award_counts_DOE <- filtered_data_UI_10y_DOE %>%
count(`Start Date`)
award_counts_USDA <- filtered_data_UI_10y_USDA %>%
count(`Award Date`)
award_counts_NIH <- filtered_data_UI_10y_NIH %>%
count(`Project Start Date`)
award_counts_NSF <- filtered_data_UI_10y_NSF %>%
count(StartDate)
# Add Sponsor column to each data frame
award_counts_DOE <- award_counts_DOE %>% mutate(Sponsor = "DOE")
award_counts_USDA <- award_counts_USDA %>% mutate(Sponsor = "USDA")
award_counts_NIH <- award_counts_NIH %>% mutate(Sponsor = "NIH")
award_counts_NSF <- award_counts_NSF %>% mutate(Sponsor = "NSF")
# For DOE dataset
award_counts_DOE <- award_counts_DOE %>%
rename(Start_Date = `Start Date`) %>%
mutate(Sponsor = "DOE")
# For USDA dataset
award_counts_USDA <- award_counts_USDA %>%
rename(Start_Date = `Award Date`) %>%
mutate(Sponsor = "USDA")
# For NIH dataset
award_counts_NIH <- award_counts_NIH %>%
rename(Start_Date = `Project Start Date`) %>%
mutate(Sponsor = "NIH")
# For NSF dataset
award_counts_NSF <- award_counts_NSF %>%
rename(Start_Date = StartDate) %>%
mutate(Sponsor = "NSF")
# For DOE dataset
award_counts_DOE <- award_counts_DOE %>%
mutate(Start_Date = as.Date(Start_Date, format = "%m/%d/%Y")) %>%
mutate(Sponsor = "DOE")
# For USDA dataset
award_counts_USDA <- award_counts_USDA %>%
mutate(Start_Date = as.Date(Start_Date, format = "%m/%d/%Y")) %>%
mutate(Sponsor = "USDA")
# For NIH dataset
award_counts_NIH <- award_counts_NIH %>%
mutate(Start_Date = as.Date(Start_Date, format = "%m/%d/%Y")) %>%
mutate(Sponsor = "NIH")
# For NSF dataset
award_counts_NSF <- award_counts_NSF %>%
mutate(Start_Date = as.Date(Start_Date, format = "%m/%d/%Y")) %>%
mutate(Sponsor = "NSF")
# Combine all dataframes into a single dataframe
all_award_counts <- bind_rows(
award_counts_DOE,
award_counts_USDA,
award_counts_NIH,
award_counts_NSF
)
# Define colors for each sponsor
sponsor_colors <- c("DOE" = "darkgray", "NSF" = "gold", "NIH" = "black", "USDA" = "lightgray")
# Plot the timeline with overlapping lines, adjusted x-axis labels, individual colors, and centralized title
ggplot(all_award_counts, aes(x = Start_Date, color = Sponsor, group = Sponsor)) +
geom_freqpoly(binwidth = 30, size = 1) +
labs(title = "Awards Timeline by Sponsor",
x = "Start Date",
y = "Count") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y", expand = c(0, 0)) +
scale_color_manual(values = sponsor_colors) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5)
)
# Read the Excel file
DOEawardsUI_Dates <- read_xlsx("DOEawards.xlsx")
filtered_data_UI_DOE <- DOEawardsUI_Dates %>%
filter(Institution == 'Regents of the University of Idaho')
# Assuming the start date column is named "Start_Date"
ten_years_ago <- Sys.Date() - years(10)  #
# Filter the data to include only awards that
filtered_data_UI_10y_DOE <- filtered_data_UI_DOE %>%
filter(`Start Date` >= ten_years_ago)
#USDA
# Read the Excel file
USDAawardsUI_Dates <- read_xlsx("USDAtoUI_Edited_YR.xlsx")
filtered_data_UI_USDA <- USDAawardsUI_Dates %>%
filter(Institution == 'University of Idaho')
# Assuming the start date column is named "Start_Date"
ten_years_ago <- Sys.Date() - years(10)  #
# Filter the data to include only awards that
filtered_data_UI_10y_USDA <- filtered_data_UI_USDA %>%
filter(`Award Date` >= ten_years_ago)
#NIH
# Read the Excel file
NIHawardsUI_Dates <- read_xlsx("UI_NIH_ALL_YR.xlsx")
filtered_data_UI_NIH <- NIHawardsUI_Dates %>%
filter(Institution == 'UNIVERSITY OF IDAHO')
# Assuming the start date column is named "Start_Date"
ten_years_ago <- Sys.Date() - years(10)  #
# Filter the data to include only awards that
# Assuming the date format is Month/Day/Year
filtered_data_UI_10y_NIH <- filtered_data_UI_NIH %>%
filter(as.Date(`Project Start Date`, format = "%m/%d/%Y") >= ten_years_ago)
#NSF
# Read the Excel file
NSFawardsUI_Dates <- read_xlsx("NSF_ALL_YR.xlsx")
filtered_data_UI_NSF <- NSFawardsUI_Dates %>%
filter(Institution == 'University of Idaho')
# Assuming the start date column is named "Start_Date"
ten_years_ago <- Sys.Date() - years(10)  #
# Filter the data to include only awards that
# Assuming the date format is Month/Day/Year
filtered_data_UI_10y_NSF <- filtered_data_UI_NSF %>%
filter(as.Date(StartDate, format = "%m/%d/%Y") >= ten_years_ago)
# Sum the total amount by start date for each sponsor
amount_sum_DOE <- filtered_data_UI_10y_DOE %>%
group_by(`Start Date`) %>%
summarize(Total_Amount = sum(`Amount Awarded to Date`))
amount_sum_USDA <- filtered_data_UI_10y_USDA %>%
group_by(`Award Date`) %>%
summarize(Total_Amount = sum(`Award Dollars`))
amount_sum_NIH <- filtered_data_UI_10y_NIH %>%
group_by(`Project Start Date`) %>%
summarize(Total_Amount = sum(`Total Cost`))
View(filtered_data_UI_10y_NSF)
View(filtered_data_UI_10y_NIH_UI)
View(amount_sum_DOE)
View(amount_sum_NIH)
View(amount_sum_NSF)
View(amount_sum_USDA)
# Remove dollar signs ($) and commas (,) from numeric columns
filtered_data_UI_10y_NSF <- filtered_data_UI_10y_NSF %>%
mutate(AwardedAmountToDate = as.numeric(gsub("[\\$,]", "", AwardedAmountToDate)))
View(filtered_data_UI_10y_NSF)
amount_sum_NSF <- filtered_data_UI_10y_NSF %>%
group_by(StartDate) %>%
summarize(Total_Amount = sum(AwardedAmountToDate))
amount_sum_NSF <- amount_sum_NSF %>% mutate(Sponsor = "NSF")
amount_sum_NIH <- amount_sum_NIH %>% mutate(Sponsor = "NIH")
amount_sum_USDA <- amount_sum_USDA %>% mutate(Sponsor = "USDA")
# Add Sponsor column to each data frame
amount_sum_DOE <- amount_sum_DOE %>% mutate(Sponsor = "DOE")
View(amount_sum_USDA)
# For DOE dataset
amount_sum_DOE <- amount_sum_DOE %>%
rename(Start_Date = `Start Date`) %>%
mutate(Sponsor = "DOE")
# For USDA dataset
amount_sum_USDA <- amount_sum_USDA %>%
rename(Start_Date = `Award Date`) %>%
mutate(Sponsor = "USDA")
# For NIH dataset
amount_sum_NIH <- amount_sum_NIH  %>%
rename(Start_Date = `Project Start Date`) %>%
mutate(Sponsor = "NIH")
# For NSF dataset
amount_sum_NSFF <- amount_sum_NSF %>%
rename(Start_Date = StartDate) %>%
mutate(Sponsor = "NSF")
# For NSF dataset
amount_sum_NSF <- amount_sum_NSF %>%
rename(Start_Date = StartDate) %>%
mutate(Sponsor = "NSF")
# Combine all dataframes into a single dataframe
all_amount_sum <- bind_rows(
amount_sum_DOE,
amount_sum_USDA,
amount_sum_NIH,
amount_sum_NSF
)
# Rename columns to ensure consistency
amount_sum_DOE <- amount_sum_DOE %>%
rename(StartDate = `Start Date`)
# For DOE dataset
amount_sum_DOE <- amount_sum_DOE %>%
rename(Start_Date = `Start Date`) %>%
mutate(Sponsor = "DOE")
# Combine all dataframes into a single dataframe
all_amount_sum <- bind_rows(
amount_sum_DOE,
amount_sum_USDA,
amount_sum_NIH,
amount_sum_NSF
)
# Combine the data frames
all_amount_sum <- bind_rows(
amount_sum_DOE %>% mutate(Sponsor = "DOE"),
amount_sum_USDA %>% mutate(Sponsor = "USDA"),
amount_sum_NIH %>% mutate(Sponsor = "NIH"),
amount_sum_NSF %>% mutate(Sponsor = "NSF")
)
# Assuming Start_Date is in character format, convert it to datetime
amount_sum_DOE <- amount_sum_DOE %>%
mutate(Start_Date = as.Date(Start_Date, format = "%m/%d/%Y"))
amount_sum_USDA <- amount_sum_USDA %>%
mutate(Start_Date = as.Date(Start_Date, format = "%m/%d/%Y"))
amount_sum_NIH <- amount_sum_NIH %>%
mutate(Start_Date = as.Date(`Project Start Date`, format = "%m/%d/%Y"))
amount_sum_NSF <- amount_sum_NSF %>%
mutate(Start_Date = as.Date(StartDate, format = "%m/%d/%Y"))
amount_sum_NIH <- amount_sum_NIH %>%
mutate(Start_Date = as.Date(`Project Start Date`, format = "%m/%d/%Y"))
amount_sum_NIH <- amount_sum_NIH %>%
mutate(Start_Date = as.Date(`Project Start Date`, format = "%m/%d/%Y"))
# Assuming Start_Date is in character format, convert it to datetime
amount_sum_DOE <- amount_sum_DOE %>%
mutate(Start_Date = as.Date(Start_Date, format = "%m/%d/%Y"))
amount_sum_USDA <- amount_sum_USDA %>%
mutate(Start_Date = as.Date(Start_Date, format = "%m/%d/%Y"))
amount_sum_NIH <- amount_sum_NIH %>%
mutate(Start_Date = as.Date(Start_Date, format = "%m/%d/%Y"))
amount_sum_NSF <- amount_sum_NSF %>%
mutate(Start_Date = as.Date(Start_Date, format = "%m/%d/%Y"))
# Combine the data frames
all_amount_sum <- bind_rows(
amount_sum_DOE %>% mutate(Sponsor = "DOE"),
amount_sum_USDA %>% mutate(Sponsor = "USDA"),
amount_sum_NIH %>% mutate(Sponsor = "NIH"),
amount_sum_NSF %>% mutate(Sponsor = "NSF")
)
View(all_amount_sum)
# Plot the timeline with overlapping lines, adjusted x-axis labels, individual colors, and centralized title
ggplot(all_amount_sum, aes(x = Start_Date, color = Sponsor, group = Sponsor)) +
geom_freqpoly(binwidth = 30, size = 1) +
labs(title = "Awards Timeline by Sponsor",
x = "Start Date",
y = "Total_Amount") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y", expand = c(0, 0)) +
scale_color_manual(values = sponsor_colors) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5)
)
# Plot the timeline with overlapping lines, adjusted x-axis labels, individual colors, and centralized title
ggplot(all_amount_sum, aes(x = Start_Date, y = Total_Amount, color = Sponsor, group = Sponsor)) +
geom_line(size = 1) +
labs(title = "Awards Timeline by Sponsor",
x = "Start Date",
y = "Total Amount") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y", expand = c(0, 0)) +
scale_color_manual(values = sponsor_colors) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5)
)
# Plot the timeline with overlapping lines, adjusted x-axis labels, individual colors, and centralized title
ggplot(all_amount_sum, aes(x = Start_Date, y = Total_Amount / 1e6, color = Sponsor, group = Sponsor)) +
geom_line(size = 1) +
labs(title = "Awards Timeline by Sponsor",
x = "Start Date",
y = "Total Amount (Millions)") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y", expand = c(0, 0)) +
scale_y_continuous(labels = scales::unit_format(unit = "M")) +
scale_color_manual(values = sponsor_colors) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5)
)
View(filtered_data_UI_DOE)
library(readxl)
library(dplyr)
library(tidyverse)
library(lubridate)
library(knitr)
library(readxl)
library(dplyr)
library(tidyverse)
library(lubridate)
library(knitr)
library(readxl)
library(dplyr)
library(tidyverse)
library(lubridate)
library(knitr)
library(ggplot2)
# COMPARISON BETWEEEN USDA - AWARD MONEY
USDA_Compare_Data <- read_xlsx("USDA_Combined_Data_Recent_Awards.xlsx")
# Calculate total award money for each institution
USDA_total_award_money <- USDA_Compare_Data %>%
group_by(Grantee_Name) %>%
summarise(USDA_total_award_money = sum(Award_Dollars))
ggplot(USDA_total_award_money, aes(x = Grantee_Name, y = USDA_total_award_money)) +
geom_bar(stat = "identity", fill = "blue") +
ggtitle("Total of Award Money from USDA Grants") +
xlab("") +
ylab("Total Award Money") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.y = element_text(size = 12),
plot.title = element_text(hjust = 0.5)) +  # Corrected position of plot title
scale_y_continuous(labels = scales::number_format(scale = 1e-6, suffix = "M"))
USDA_Compare_Data <- read_xlsx("USDA_Combined_Data_Recent_Awards.xlsx")
View(USDA_Compare_Data)
new_name <- "UNIVERSITY OF IDAHO"
# Define a vector of old names and a new name
old_names <- c("SAES - UNIVERSITY OF IDAHO", "FRST - UNIVERSITY OF IDAHO-FORESTRY SCHOOL")
# Use mutate with ifelse and %in% to change multiple old names to the new name
USDA_Compare_Data <- mutate(USDA_Compare_Data, Grantee_Name = ifelse(Grantee_Name %in% old_names, new_name, Grantee_Name))
View(USDA_Compare_Data)
# COMPARISON BETWEEEN USDA - AWARD MONEY
USDA_Compare_Data <- read_xlsx("USDA_Combined_Data_Recent_Awards.xlsx")
# Define a vector of old names and a new name
old_names <- c("SAES - UNIVERSITY OF IDAHO", "FRST - UNIVERSITY OF IDAHO-FORESTRY SCHOOL")
new_name <- "UNIVERSITY OF IDAHO"
# Use mutate with ifelse and %in% to change multiple old names to the new name
USDA_Compare_Data <- mutate(USDA_Compare_Data, Grantee_Name = ifelse(Grantee_Name %in% old_names, new_name, Grantee_Name))
# Calculate total award money for each institution
USDA_total_award_money <- USDA_Compare_Data %>%
group_by(Grantee_Name) %>%
summarise(USDA_total_award_money = sum(Award_Dollars))
ggplot(USDA_total_award_money, aes(x = Grantee_Name, y = USDA_total_award_money)) +
geom_bar(stat = "identity", fill = "blue") +
ggtitle("Total of Award Money from USDA Grants") +
xlab("") +
ylab("Total Award Money") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.y = element_text(size = 12),
plot.title = element_text(hjust = 0.5)) +  # Corrected position of plot title
scale_y_continuous(labels = scales::number_format(scale = 1e-6, suffix = "M"))
# COMPARISON BETWEEEN USDA - AWARD MONEY
USDA_Compare_Data <- read_xlsx("USDA_Combined_Data_Recent_Awards.xlsx")
# Define a vector of old names and a new name
old_names <- c("SAES - UNIVERSITY OF IDAHO", "FRST - UNIVERSITY OF IDAHO-FORESTRY SCHOOL")
new_name <- "UNIVERSITY OF IDAHO"
# Use mutate with ifelse and %in% to change multiple old names to the new name
USDA_Compare_Data <- mutate(USDA_Compare_Data, Grantee_Name = ifelse(Grantee_Name %in% old_names, new_name, Grantee_Name))
# Calculate total award money for each institution
USDA_total_award_money <- USDA_Compare_Data %>%
group_by(Grantee_Name) %>%
summarise(USDA_total_award_money = sum(Award_Dollars))
my_colors_6 <- c("BOISE STATE UNIVERSITY" = "orange", "UNIVERSITY OF IDAHO" = "gold")
ggplot(USDA_total_award_money, aes(x = Grantee_Name, y = USDA_total_award_money)) +
geom_bar(stat = "identity", fill = my_colors_6) +
ggtitle("Total of Award Money from USDA Grants") +
xlab("") +
ylab("Total Award Money") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.y = element_text(size = 12),
plot.title = element_text(hjust = 0.5)) +  # Corrected position of plot title
scale_y_continuous(labels = scales::number_format(scale = 1e-6, suffix = "M"))
# COMPARISON BETWEEEN DOE - AWARD MONEY
DOE_Compare_Data <- read_xlsx("DOEawards_Combined_Data.xlsx")
# Calculate total award money for each institution
DOE_total_award_money <- DOE_Compare_Data %>%
group_by(Institution) %>%
summarise(DOE_total_award_money = sum(`Amount Awarded to Date`))
# Colors
my_colors <- c("Boise State University" = "orange", "Idaho State University" = "black", "Regents of the University of Idaho" = "gold")
ggplot(DOE_total_award_money, aes(x = Institution, y = DOE_total_award_money)) +
geom_bar(stat = "identity", position = "dodge", fill = my_colors)  +
ggtitle("Total of Award Money from USDA Grants") +
xlab("") +
ylab("Total Award Money") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12),  # Adjust size of x-axis labels
axis.text.y = element_text(size = 12),  # Adjust size of y-axis labels
legend.text = element_text(size = 12),  # Adjust size of legend text
plot.title = element_text(hjust = 0.5, size = 14)) +  # Adjust size of plot title
scale_y_continuous(labels = scales::number_format(scale = 1e-6, suffix = "M"))
# COMPARISON BETWEEEN DOE - AWARD MONEY
DOE_Compare_Data <- read_xlsx("DOEawards_Combined_Data.xlsx")
# Calculate total award money for each institution
DOE_total_award_money <- DOE_Compare_Data %>%
group_by(Institution) %>%
summarise(DOE_total_award_money = sum(`Amount Awarded to Date`))
# Colors
my_colors <- c("Boise State University" = "orange", "Idaho State University" = "black", "Regents of the University of Idaho" = "gold")
ggplot(DOE_total_award_money, aes(x = Institution, y = DOE_total_award_money)) +
geom_bar(stat = "identity", position = "dodge", fill = my_colors)  +
ggtitle("Total of Award Money from DOE Grants") +
xlab("") +
ylab("Total Award Money") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12),  # Adjust size of x-axis labels
axis.text.y = element_text(size = 12),  # Adjust size of y-axis labels
legend.text = element_text(size = 12),  # Adjust size of legend text
plot.title = element_text(hjust = 0.5, size = 14)) +  # Adjust size of plot title
scale_y_continuous(labels = scales::number_format(scale = 1e-6, suffix = "M"))
# COMPARISON BETWEEEN NSF - AWARD MONEY - NO APARECE LA DATA
NSF_Compare_Data <- read_xlsx("NSF_Combined_Data.xlsx")
# Filter the data for each institution
UI_NSF_data <- NSF_Compare_Data %>%
filter(Organization == "Regents of the University of Idaho")
BSU_NSF_data <- NSF_Compare_Data %>%
filter(Organization == "Boise State University")
ISU_NSF_data <- NSF_Compare_Data %>%
filter(Organization == "Idaho State University")
# Calculate the duration of grants for each institution
# Convert "Start Date" and "End Date" columns to date objects
#UI
# Convert AwardedAmountToDate column to numeric
NSF_Compare_Data$AwardedAmountToDate <- as.numeric(gsub("\\$", "", NSF_Compare_Data$AwardedAmountToDate))
# Calculate total award money for each institution
NSF_total_award_money <- NSF_Compare_Data %>%
group_by(Organization) %>%
summarise(NSF_total_award_money = sum(AwardedAmountToDate, na.rm = TRUE))
# Calculate total award money for each institution
NSF_total_award_money <- NSF_Compare_Data %>%
group_by(Organization) %>%
summarise(NSF_total_award_money = sum(AwardedAmountToDate))
# Colors
my_colors <- c("Boise State University" = "orange", "Idaho State University" = "black", "Regents of the University of Idaho" = "gold")
ggplot(NSF_total_award_money, aes(x = Organization, y = NSF_total_award_money)) +
geom_bar(stat = "identity", position = "dodge", fill = my_colors)  +
ggtitle("Total of Award Money from NSF Grants") +
xlab("") +
ylab("Total Award Money") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12),  # Adjust size of x-axis labels
axis.text.y = element_text(size = 12),  # Adjust size of y-axis labels
legend.text = element_text(size = 12),  # Adjust size of legend text
plot.title = element_text(hjust = 0.5, size = 14)) +  # Adjust size of plot title
scale_y_continuous(labels = scales::number_format(scale = 1e-6, suffix = "M"))
View(NSF_total_award_money)
# Filter the data for each institution
UI_NSF_data <- NSF_Compare_Data %>%
filter(Organization == "Regents of the University of Idaho")
BSU_NSF_data <- NSF_Compare_Data %>%
filter(Organization == "Boise State University")
ISU_NSF_data <- NSF_Compare_Data %>%
filter(Organization == "Idaho State University")
View(ISU_NSF_data)
View(BSU_NSF_data)
NSF_Compare_Data <- read_xlsx("NSF_Combined_Data.xlsx")
View(NSF_Compare_Data)
# Filter the data for each institution
UI_NSF_data <- NSF_Compare_Data %>%
filter(Organization == "Regents of the University of Idaho")
View(UI_NSF_data)
BSU_NSF_data <- NSF_Compare_Data %>%
filter(Organization == "Boise State University")
View(BSU_NSF_data)
ISU_NSF_data <- NSF_Compare_Data %>%
filter(Organization == "Idaho State University")
# Convert AwardedAmountToDate column to numeric
UI_NSF_data$AwardedAmountToDate <- as.numeric(gsub("\\$", "", UI_NSF_data$AwardedAmountToDate))
View(UI_NSF_data)
# Remove dollar signs ($) and commas (,) from numeric columns
UI_NSF_data <- UI_NSF_data %>%
mutate(AwardedAmountToDate = as.numeric(gsub("[\\$,]", "", AwardedAmountToDate)))
View(UI_NSF_data)
# Remove dollar signs ($) and commas (,) from numeric columns
# Remove dollar signs ($) and commas (,) from numeric columns and handle missing or non-numeric values
UI_NSF_data <- UI_NSF_data %>%
mutate(AwardedAmountToDate = ifelse(is.na(AwardedAmountToDate) | !grepl("^\\d+(\\.\\d+)?$", AwardedAmountToDate),
NA, as.numeric(gsub("[\\$,]", "", AwardedAmountToDate))))
View(UI_NSF_data)
View(filtered_data_UI_10y_NSF)
# COMPARISON BETWEEEN NSF - AWARD MONEY - NO APARECE LA DATA
NSF_Compare_Data <- read_xlsx("NSF_Combined_Data.xlsx")
# Filter the data for each institution
UI_NSF_data <- NSF_Compare_Data %>%
filter(Organization == "Regents of the University of Idaho")
BSU_NSF_data <- NSF_Compare_Data %>%
filter(Organization == "Boise State University")
ISU_NSF_data <- NSF_Compare_Data %>%
filter(Organization == "Idaho State University")
# Convert AwardedAmountToDate column to numeric
NSF_Compare_Data$AwardedAmountToDate <- as.numeric(gsub("\\$", "", NSF_Compare_Data$AwardedAmountToDate))
# Remove dollar signs ($) and commas (,) from numeric columns
UI_NSF_data <- UI_NSF_data %>%
mutate(AwardedAmountToDate = as.numeric(gsub("[\\$,]", "", AwardedAmountToDate)))
# Calculate total award money for each institution
NSF_total_award_money <- NSF_Compare_Data %>%
group_by(Organization) %>%
summarise(NSF_total_award_money = sum(AwardedAmountToDate, na.rm = TRUE))
# Calculate total award money for each institution
NSF_total_award_money <- NSF_Compare_Data %>%
group_by(Organization) %>%
summarise(NSF_total_award_money = sum(AwardedAmountToDate))
# Colors
my_colors <- c("Boise State University" = "orange", "Idaho State University" = "black", "Regents of the University of Idaho" = "gold")
ggplot(NSF_total_award_money, aes(x = Organization, y = NSF_total_award_money)) +
geom_bar(stat = "identity", position = "dodge", fill = my_colors)  +
ggtitle("Total of Award Money from NSF Grants") +
xlab("") +
ylab("Total Award Money") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12),  # Adjust size of x-axis labels
axis.text.y = element_text(size = 12),  # Adjust size of y-axis labels
legend.text = element_text(size = 12),  # Adjust size of legend text
plot.title = element_text(hjust = 0.5, size = 14)) +  # Adjust size of plot title
scale_y_continuous(labels = scales::number_format(scale = 1e-6, suffix = "M"))
# COMPARISON BETWEEEN NIH - AWARD MONEY - CALCULATED THE AVERAGE INSTEAD THE TOTAL AMMOUNT
NIH_Compare_Data <- read_xlsx("NIH_Combined_Data.xlsx")
# Calculate total award money for each institution, removing NA values in TotalCost
NIH_total_award_money <- NIH_Compare_Data %>%
group_by(OrganizationName) %>%
summarise(NIH_total_award_money = sum(TotalCost, na.rm = TRUE))
# Colors
my_colors_3 <- c("BOISE STATE UNIVERSITY" = "orange", "IDAHO STATE UNIVERSITY" = "black", "UNIVERSITY OF IDAHO" = "gold")
ggplot(NIH_total_award_money, aes(x = OrganizationName, y = NIH_total_award_money)) +
geom_bar(stat = "identity", position = "dodge", fill = my_colors_3)  +
ggtitle("Total of Award Money from NIH Grants") +
xlab("") +
ylab("Total Award Money") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12),  # Adjust size of x-axis labels
axis.text.y = element_text(size = 12),  # Adjust size of y-axis labels
legend.text = element_text(size = 12),  # Adjust size of legend text
plot.title = element_text(hjust = 0.5, size = 14)) +  # Adjust size of plot title
scale_y_continuous(labels = scales::number_format(scale = 1e-6, suffix = "M"))
