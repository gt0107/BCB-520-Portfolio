geom_line(aes(y=Platform * scalefactor, color="Platform"))
scale_y_continuous(
ggplot(my_df, aes(x = Genre)) +
geom_line(aes(y = Action, color = "Action")) +
geom_line(aes(y = Platform * scaleFactor, color = "Platform")) +
scale_y_continuous(
name = "Primary Axis for Action",
sec.axis = sec_axis(~./scaleFactor, name = "Secondary Axis for Platform")
) +
theme_minimal() +
scale_color_manual("", values = c("Action" = "blue", "Platform" = "red"))
ggplot(my_df, aes(x = Genre)) +
geom_line(aes(y = Action, color = "Action")) +
geom_line(aes(y = Platform * 20, color = "Platform")) +
scale_y_continuous(
name = "Primary Axis for Action",
sec.axis = sec_axis(~./scaleFactor, name = "Secondary Axis for Platform")
) +
theme_minimal() +
scale_color_manual("", values = c("Action" = "blue", "Platform" = "red"))
ggplot(my_df, aes(x = Genre)) +
geom_line(aes(y = Action, color = "Action")) +
geom_line(aes(y = Platform * 20, color = "Platform")) +
scale_y_continuous(
name = "Primary Axis for Action",
sec.axis = sec_axis(~./20, name = "Secondary Axis for Platform")
) +
theme_minimal() +
scale_color_manual("", values = c("Action" = "blue", "Platform" = "red"))
ggplot(my_df, aes(x = Genre)) +
geom_line(aes(y = NA_Sales, color = "NA_Sales")) +
geom_line(aes(y = Platform * 20, color = "Platform")) +
scale_y_continuous(
name = "Primary Axis for Action",
sec.axis = sec_axis(~./20, name = "Secondary Axis for Platform")
) +
theme_minimal() +
scale_color_manual("", values = c("Action" = "blue", "Platform" = "red"))
ggplot(my_df, aes(x = Genre)) +
geom_line(aes(y = NA_Sales, color = "NA_Sales")) +
geom_line(aes(y = JP_sales * 20, color = "JP_sales")) +
scale_y_continuous(
name = "Primary Axis for NA_Sales",
sec.axis = sec_axis(~./20, name = "Secondary Axis for JP_sales")
) +
theme_minimal() +
scale_color_manual("", values = c("NA)_Sales" = "blue", "JP_sales" = "red"))
ggplot(my_df, aes(x = Genre)) +
geom_line(aes(y = NA_Sales, color = "NA Sales")) +
geom_line(aes(y = JP_sales * 20, color = "JP Sales")) +
scale_y_continuous(
name = "Primary Axis for NA Sales",
sec.axis = sec_axis(~./20, name = "Secondary Axis for JP Sales")
) +
theme_minimal() +
scale_color_manual("", values = c("NA Sales" = "blue", "JP Sales" = "red"))
ggplot(my_df, aes(x = Genre)) +
geom_line(aes(y = NA_Sales, color = "NA Sales")) +
geom_line(aes(y = JP_Sales * 20, color = "JP Sales")) +
scale_y_continuous(
name = "Primary Axis for NA Sales",
sec.axis = sec_axis(~./20, name = "Secondary Axis for JP Sales")
) +
theme_minimal() +
scale_color_manual("", values = c("NA Sales" = "blue", "JP Sales" = "red"))
ggplot(my_df, aes(x = Genre)) +
geom_line(aes(y = NA_Sales* 40, color = "NA Sales")) +
geom_line(aes(y = JP_Sales * 20, color = "JP Sales")) +
scale_y_continuous(
name = "Primary Axis for NA Sales",
sec.axis = sec_axis(~./20, name = "Secondary Axis for JP Sales")
) +
theme_minimal() +
scale_color_manual("", values = c("NA Sales" = "blue", "JP Sales" = "red"))
# Create the column chart
ggplot(long_df, aes(x = Genre, y = Sales, fill = Region)) +
geom_col(position = position_dodge()) +
theme_minimal() +
labs(title = "Video Game Sales by Region and Genre",
x = "Genre",
y = "Sales",
fill = "Region") +
scale_fill_manual(values = c("NA_Sales" = "blue", "JP_Sales" = "red"))
library(ggplot2)
library(dplyr)
library(tidyr)
# Assuming my_df already has 'Genre', 'NA_Sales', 'JP_Sales'
# And assuming any necessary scaling of 'JP_Sales' has been considered or applied
# Transform the data from wide to long format for easier plotting with ggplot2
long_df <- my_df %>%
pivot_longer(cols = c(NA_Sales, JP_Sales), names_to = "Region", values_to = "Sales")
# Create the column chart
ggplot(long_df, aes(x = Genre, y = Sales, fill = Region)) +
geom_col(position = position_dodge()) +
theme_minimal() +
labs(title = "Video Game Sales by Region and Genre",
x = "Genre",
y = "Sales",
fill = "Region") +
scale_fill_manual(values = c("NA_Sales" = "blue", "JP_Sales" = "red"))
ggplot(my_df, aes(x=Genre, y=NA_Sales, JP_Sales)) +
geom_boxplot(alpha=0.5) +
geom_jitter(width=0.2, height=0, color="blue", size=1.5) +
theme_minimal() +
ggtitle("NA Sales By Genre") +
xlab("Genre") + ylab("NA_Sales", "JP_Sales")
library(tidyr)
library(ggplot2)
# Transform data to long format
long_df <- pivot_longer(my_df, cols = c(NA_Sales, JP_Sales), names_to = "Sales_Type", values_to = "Sales")
# Plot
ggplot(long_df, aes(x=Genre, y=Sales, color=Sales_Type)) +
geom_boxplot(alpha=0.5) +
geom_jitter(width=0.2, height=0, size=1.5) +
theme_minimal() +
ggtitle("Sales By Genre") +
xlab("Genre") + ylab("Sales")
title_NA_Sales <- my_df %>%
select(Genre, NA_Sales) %>%
group_by(Genre) %>%
summarise(Total_NA_Sales = sum(NA_Sales, na.rm = TRUE))
library(ggplot2)
ggplot(my_df, aes(x = Genre)) +
geom_line(aes(y = NA_Sales* 40, color = "NA Sales")) +
geom_line(aes(y = JP_Sales * 20, color = "JP Sales")) +
scale_y_continuous(
name = "Primary Axis for NA Sales",
sec.axis = sec_axis(~./20, name = "Secondary Axis for JP Sales")
) +
theme_minimal() +
scale_color_manual("", values = c("NA Sales" = "blue", "JP Sales" = "red"))
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
library(tidyr)
library(ggplot2)
# Transform data to long format
long_df <- pivot_longer(my_df, cols = c(NA_Sales, JP_Sales), names_to = "Sales_Type", values_to = "Sales")
# Plot
ggplot(long_df, aes(x=Genre, y=Sales, color=Sales_Type)) +
geom_boxplot(alpha=0.5) +
geom_jitter(width=0.2, height=0, size=1.5) +
theme_minimal() +
ggtitle("Sales By Genre") +
xlab("Genre") + ylab("Sales")
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
library(tidyr)
library(ggplot2)
# Transform data to long format
long_df <- pivot_longer(my_df, cols = c(NA_Sales, JP_Sales), names_to = "Sales_Type", values_to = "Sales")
# Plot
ggplot(long_df, aes(x=Genre, y=Sales, color=Sales_Type)) +
geom_boxplot(alpha=0.5) +
geom_jitter(width=0.2, height=0, size=1.5) +
theme_minimal() +
ggtitle("Sales By Genre") +
xlab("Genre") + ylab("Sales")
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 10))
library(tidyr)
library(ggplot2)
# Transform data to long format
long_df <- pivot_longer(my_df, cols = c(NA_Sales, JP_Sales), names_to = "Sales_Type", values_to = "Sales")
# Plot
ggplot(long_df, aes(x=Genre, y=Sales, color=Sales_Type)) +
geom_boxplot(alpha=0.5) +
geom_jitter(width=0.2, height=0, size=1.5) +
theme_minimal() +
ggtitle("Sales By Genre") +
xlab("Genre") + ylab("Sales")
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 20))
View(long_df)
long_df <- pivot_longer(my_df, cols = c(NA_Sales, JP_Sales, EU_Sales), names_to = "Sales_Type", values_to = "Sales")
View(long_df)
long_df <- pivot_longer(my_df, cols = c(NA_Sales, JP_Sales, EU_Sales, Other_Sales, Global_sales), names_to = "Sales_Type", values_to = "Sales")
long_df <- pivot_longer(my_df, cols = c(NA_Sales, JP_Sales, EU_Sales, Other_Sales, Global_Sales), names_to = "Sales_Type", values_to = "Sales")
library(tidyr)
library(ggplot2)
long_df <- pivot_longer(my_df, cols = c(NA_Sales, JP_Sales, EU_Sales, Other_Sales, Global_Sales), names_to = "Sales_Type", values_to = "Sales")
ggplot(long_df, aes(x=Genre, y=Sales, color=Sales_Type)) +
geom_boxplot(alpha=0.5) +
geom_jitter(width=0.2, height=0, size=1.5) +
theme_minimal() +
ggtitle("Sales By Genre") +
xlab("Genre") + ylab("Sales")
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 20))
library(tidyr)
library(ggplot2)
long_df <- pivot_longer(my_df, cols = c(NA_Sales, JP_Sales, EU_Sales, Other_Sales, Global_Sales), names_to = "Sales_Type", values_to = "Sales")
ggplot(long_df, aes(x=Genre, y=Sales, color=Sales_Type)) +
geom_boxplot(alpha=0.5) +
geom_jitter(width=0.2, height=0, size=1.5) +
theme_minimal() +
ggtitle("Sales By Genre") +
xlab("Genre") + ylab("Sales")
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 20))
library(tidyr)
library(ggplot2)
long_df <- pivot_longer(my_df, cols = c(NA_Sales, JP_Sales, EU_Sales, Other_Sales, Global_Sales),
names_to = "Sales_Type", values_to = "Sales")
ggplot(long_df, aes(x=Genre, y=Sales, color=Sales_Type)) +
geom_boxplot(alpha=0.5) +
geom_jitter(width=0.2, height=0, size=1.5) +
theme_minimal() +
ggtitle("Sales By Genre") +
xlab("Genre") + ylab("Sales") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12))
library(tidyr)
library(ggplot2)
# Assuming my_df is already defined
long_df <- pivot_longer(my_df, cols = c(NA_Sales, JP_Sales, EU_Sales, Other_Sales, Global_Sales),
names_to = "Sales_Type", values_to = "Sales")
ggplot(long_df, aes(x=Genre, y=Sales, color=Sales_Type, shape=Sales_Type)) +  # Add shape aesthetic
geom_boxplot(alpha=0.5) +
geom_jitter(width=0.2, height=0, size=1.5) +
theme_minimal() +
ggtitle("Sales By Genre") +
xlab("Genre") + ylab("Sales") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12)) +
scale_shape_manual(values=c(16, 17, 18, 19, 15))  # Manually set shapes
ggplot(long_df, aes(x=Genre, y=Sales, color=Sales_Type, shape=Sales_Type)) +  # Add shape aesthetic
geom_boxplot(alpha=0.5) +
geom_jitter(width=0.2, height=0, size=1.5) +
theme_minimal() +
ggtitle("Sales By Genre") +
xlab("Genre") + ylab("Sales") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12)) +
scale_shape_manual(values=c(16, 17, 18, 19, 15))  # Manually set shapes
ggplot(long_df, aes(x=Genre, y=Sales, color=Sales_Type, shape=Sales_Type)) +  # Add shape aesthetic
geom_boxplot(alpha=0.5) +
geom_jitter(width=0.2, height=0, size=1.5) +
theme_minimal() +
ggtitle("Sales By Genre") +
xlab("Genre") + ylab("Sales") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12)) +
scale_shape_manual(values=c(15, 16, 17, 18, 19))
library(tidyr)
library(ggplot2)
# Assuming my_df is already defined
long_df <- pivot_longer(my_df, cols = c(NA_Sales, JP_Sales, EU_Sales, Other_Sales, Global_Sales),
names_to = "Sales_Type", values_to = "Sales")
ggplot(long_df, aes(x=Genre, y=Sales, color=Sales_Type, shape=Sales_Type)) +  # Add shape aesthetic
geom_boxplot(alpha=0.5) +
geom_jitter(width=0.2, height=0, size=1.5) +
theme_minimal() +
ggtitle("Sales By Genre") +
xlab("Genre") + ylab("Sales") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12)) +
scale_shape_manual(values=c(15, 16, 17, 18, 19))
scale_color_manual(values=c("NA_Sales"="blue", "JP_Sales"="red", "EU_Sales"="green", "Other_Sales"="orange", "Global_Sales"="purple"))
library(tidyr)
library(ggplot2)
# Assuming my_df is already defined
long_df <- pivot_longer(my_df, cols = c(NA_Sales, JP_Sales, EU_Sales, Other_Sales, Global_Sales),
names_to = "Sales_Type", values_to = "Sales")
ggplot(long_df, aes(x=Genre, y=Sales, color=Sales_Type, shape=Sales_Type)) +
geom_boxplot(alpha=0.5) +
geom_jitter(width=0.2, height=0, size=1.5) +
theme_minimal() +
ggtitle("Sales By Genre") +
xlab("Genre") + ylab("Sales") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12)) +
scale_shape_manual(values=c(16, 17, 18, 19, 15)) +  # Manually set shapes
scale_color_brewer(palette="Set1")  # Change color scheme
library(tidyr)
library(ggplot2)
long_df <- pivot_longer(my_df, cols = c(NA_Sales, JP_Sales, EU_Sales, Other_Sales, Global_Sales),
names_to = "Sales_Type", values_to = "Sales")
ggplot(long_df, aes(x=Genre, y=Sales, color=Sales_Type)) +
geom_boxplot(alpha=0.5) +
geom_jitter(width=0.2, height=0, size=1.5) +
theme_minimal() +
ggtitle("Sales By Genre") +
xlab("Genre") + ylab("Sales") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12))
ggplot(long_df, aes(x=Genre, y=Sales, color=Sales_Type, shape=Sales_Type)) +
geom_boxplot(alpha=0.5) +
geom_jitter(width=0.2, height=0, size=1.5) +
theme_minimal() +
ggtitle("Sales By Genre") +
xlab("Genre") + ylab("Sales") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12)) +
scale_shape_manual(values=c(16, 17, 18, 19, 15)) +  # Manually set shapes
scale_color_brewer(palette="Dark2")  # Change color scheme
ggplot(long_df, aes(x=Genre, y=Sales, color=Sales_Type, shape=Sales_Type)) +
geom_boxplot(alpha=0.5) +
geom_jitter(width=0.2, height=0, size=1.5) +
theme_minimal() +
ggtitle("Sales By Genre") +
xlab("Genre") + ylab("Sales") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12)) +
scale_shape_manual(values=c(16, 17, 18, 19, 15)) +  # Manually set shapes
scale_color_brewer(palette = "Blues")
ggplot(long_df, aes(x=Genre, y=Sales, color=Sales_Type, shape=Sales_Type)) +
geom_boxplot(alpha=0.5) +
geom_jitter(width=0.2, height=0, size=2.5) +
theme_minimal(base_size = 14) +
ggtitle("Comparative Video Game Sales by Genre across Regions") +
xlab("Video Game Genre") + ylab("Sales (Millions)") +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5),
legend.title = element_blank(),
plot.title = element_text(face = "bold", size = 16),
axis.title = element_text(size = 14)) +
scale_color_brewer(palette = "Set3") +
guides(shape = guide_legend(override.aes = list(size = 6)))
ggplot(long_df, aes(x=Genre, y=Sales, color=Sales_Type, shape=Sales_Type)) +
geom_boxplot(alpha=0.5) +
geom_jitter(width=0.2, height=0, size=2.5) +
theme_minimal(base_size = 14) +
ggtitle("Comparative Video Game Sales by Genre across Regions") +
xlab("Video Game Genre") + ylab("Sales (Millions)") +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5),
legend.title = element_blank(),
plot.title = element_text(face = "bold", size = 16),
axis.title = element_text(size = 14)) +
scale_color_brewer(palette = "Set3") +
guides(shape = guide_legend(override.aes = list(size = 6)))
library(tidyr)
library(ggplot2)
long_df <- pivot_longer(my_df, cols = c(NA_Sales, JP_Sales, EU_Sales, Other_Sales, Global_Sales),
names_to = "Sales_Type", values_to = "Sales")
ggplot(long_df, aes(x=Genre, y=Sales, color=Sales_Type)) +
geom_boxplot(alpha=0.5) +
geom_jitter(width=0.2, height=0, size=1.5) +
theme_minimal() +
ggtitle("Sales By Genre") +
xlab("Genre") + ylab("Sales") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12))
library(readxl)
my_df <- read_excel("VIdeo_Game_sales.xlsx")
knitr::kable(head(my_df,10))
library(tidyverse)
ggplot(long_df, aes(x=Genre, y=Sales, color=Sales_Type, shape=Sales_Type)) +
geom_boxplot(alpha=0.5) +
geom_jitter(width=0.2, height=0, size=2.5) +
theme_minimal(base_size = 14) +
ggtitle("Comparative Video Game Sales by Genre across Regions") +
xlab("Video Game Genre") + ylab("Sales (Millions)") +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5),
legend.title = element_blank(),
plot.title = element_text(face = "bold", size = 16),
axis.title = element_text(size = 14)) +
scale_color_brewer(palette = "Set3") +
guides(shape = guide_legend(override.aes = list(size = 6)))
library(tidyr)
library(ggplot2)
long_df <- pivot_longer(my_df, cols = c(NA_Sales, JP_Sales, EU_Sales, Other_Sales, Global_Sales),
names_to = "Sales_Type", values_to = "Sales")
ggplot(long_df, aes(x=Genre, y=Sales, color=Sales_Type)) +
geom_boxplot(alpha=0.5) +
geom_jitter(width=0.2, height=0, size=1.5) +
theme_minimal() +
ggtitle("Sales By Genre") +
xlab("Genre") + ylab("Sales") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12))
ggplot(my_df, aes(x = Platform, fill = Platform)) +
geom_bar(color = "black", width = 0.7) +
ggtitle("Platform Distribution") +
xlab("Platform") +
ylab("Game Titles") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45, hjust = 1))
title_platform<-my_df%>%
select(Platform,Name)%>%
group_by(Platform, Name)%>%
summarise(count=n_distinct(Name))%>%
group_by(Platform) %>%
summarise(TotalCount = sum(count))
suppressMessages({title_platform<-my_df%>%
select(Platform,Name)%>%
group_by(Platform,Name)%>%
summarise(count=n_distinct(Name))%>%
group_by(Platform) %>%
summarise(TotalCount = sum(count))})
library(ggplot2)
title_platform$Platform <- reorder(title_platform$Platform, title_platform$TotalCount)
ggplot(data = title_platform, aes(x = Platform, y = TotalCount, fill = Platform)) +
geom_col(color = "black", width = 0.7) +
ggtitle("Platform Distribution") +
xlab("Platform") +
ylab("Game Titles") +
scale_fill_viridis_d() +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45, hjust = 1))
library(ggplot2)
library(reshape2)
title_sales <- my_df %>%
select(Genre,NA_Sales, EU_Sales, JP_Sales) %>%
group_by(Genre)
title_sales <- melt(title_sales, id.vars = "Genre", measure.vars = c("NA_Sales","EU_Sales","JP_Sales"))
ggplot(data = title_sales, aes(x = Genre, y = value, fill = variable)) +
geom_col(position = "dodge", color = "black", width = 0.7) +
ggtitle("Sales by Genre") +
xlab("Genre") +
ylab("Sales (per million)") +
scale_fill_manual(values = c( "NA_Sales"="magenta","EU_Sales" = "purple", "JP_Sales" = "lightpink")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45, hjust = 1))
long_df <- pivot_longer(my_df, cols = c(NA_Sales, JP_Sales, EU_Sales, Other_Sales, Global_Sales),
names_to = "Sales_Type", values_to = "Sales")
ggplot(long_df, aes(x=Genre, y=Sales, color=Sales_Type, shape=Sales_Type)) +
geom_boxplot(alpha=0.5) +
geom_jitter(width=0.2, height=0, size=2.5) +
theme_minimal(base_size = 14) +
ggtitle("Comparative Video Game Sales by Genre across Regions") +
xlab("Video Game Genre") + ylab("Sales (Millions)") +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5),
legend.title = element_blank(),
plot.title = element_text(face = "bold", size = 16),
axis.title = element_text(size = 14)) +
scale_color_brewer(palette = "Set3") +
guides(shape = guide_legend(override.aes = list(size = 6)))
# Example data frame
df <- data.frame(
Genre = c("Action", "Action", "Adventure", "Adventure", "Sports", "Sports"),
Region = c("NA", "EU", "NA", "EU", "NA", "EU"),
Sales = c(300, 150, 80, 40, 200, 100)
)
ggplot(df, aes(x = Genre, y = Sales, fill = Region)) +
geom_bar(stat = "identity", position = "stack") +
ggtitle("Sales by Genre and Region") +
xlab("Genre") + ylab("Sales")
# Example data frame
df <- data.frame(
Genre = c("Action", "Action", "Adventure", "Adventure", "Sports", "Sports"),
Region = c("NA", "EU", "NA", "EU", "NA", "EU"),
Sales = c(300, 150, 80, 40, 200, 100)
)
library(ggplot2)
ggplot(df, aes(x = Genre, y = Sales, fill = Region)) +
geom_bar(stat = "identity", position = "stack") +
ggtitle("Sales by Genre and Region") +
xlab("Genre") + ylab("Sales")
ggplot(df, aes(x = Genre, y = Sales, fill = Region)) +
geom_bar(stat = "identity", position = "stack") +
scale_fill_brewer(palette = "Pastel1") + # Custom color scheme
ggtitle("Sales by Genre and Region") +
xlab("Genre") + ylab("Sales") +
theme_minimal() + # Minimalist theme
theme(legend.title = element_blank()) # Remove legend title
library(readxl)
VIdeo_Game_Sales <- read_excel("posts/MarksChannels/VIdeo_Game_Sales.xlsx")
View(VIdeo_Game_Sales)
title_plubishare<-my_df%>%
select(Publisher,Name)%>%
group_by(Platform, Name)%>%
summarise(count=n_distinct(Name))%>%
group_by(Platform) %>%
summarise(TotalCount = sum(count))
title_plubishare<-my_df%>%
select(Publisher,Name)%>%
group_by(Publisher, Name)%>%
summarise(count=n_distinct(Name))%>%
group_by(Publisher) %>%
summarise(TotalCount = sum(count))
View(title_plubishare)
title_plubisher<-my_df%>%
select(Publisher,Name)%>%
group_by(Publisher, Name)%>%
summarise(count=n_distinct(Name))%>%
group_by(Publisher) %>%
summarise(TotalCount = sum(count))
View(title_plubishare)
View(title_plubishare)
View(title_plubisher)
library(dplyr)
title_publisher <- my_df %>%
select(Publisher, Name) %>%                # Select the relevant columns
distinct(Publisher, Name) %>%             # Keep only distinct Publisher-Name pairs
count(Publisher)                           # Count the number of titles per Publisher
# Renamed the result to title_publisher for consistency
View(title_publisher)
View(title_plubisher)
View(title_publisher)
View(title_plubisher)
View(title_publisher)
title_plubisher<-my_df%>%
select(Publisher,Name)%>%
group_by(Publisher, Name)%>%
summarise(count=n_distinct(Name))%>%
group_by(Publisher) %>%
summarise(TotalCount = sum(count))
library(ggplot2)
# Assuming title_publisher is the result from the previous aggregation
title_publisher <- my_df %>%
select(Publisher, Name) %>%
distinct(Publisher, Name) %>%
count(Publisher, name = "TotalTitles")
# Create a basic bar plot
ggplot(title_publisher, aes(x = reorder(Publisher, TotalTitles), y = TotalTitles, fill = Publisher)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(x = "Publisher", y = "Total Number of Distinct Titles", title = "Distinct Titles per Publisher") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
guides(fill=FALSE) # Remove the legend if it's redundant
df <- data.frame(
Genre = c("Action", "Action", "Adventure", "Adventure", "Sports", "Sports"),
Region = c("NA", "EU", "NA", "EU", "NA", "EU"),
Sales = c(300, 150, 80, 40, 200, 100)
)
library(ggplot2)
ggplot(df, aes(x = Genre, y = Sales, fill = Region)) +
geom_bar(stat = "identity", position = "stack") +
ggtitle("Sales by Genre and Region") +
xlab("Genre") + ylab("Sales")
ggplot(df, aes(x = Genre, y = Sales, fill = Region)) +
geom_bar(stat = "identity", position = "stack") +
scale_fill_brewer(palette = "Pastel1") + # Custom color scheme
ggtitle("Sales by Genre and Region") +
xlab("Genre") + ylab("Sales") +
theme_minimal() + # Minimalist theme
theme(legend.title = element_blank()) # Remove legend title
