group_by(OrganizationName) %>%
summarise(NIH_total_award_money = sum(TotalCost, na.rm = TRUE))
# COMPARISON BETWEEEN NIH - AWARD MONEY
library(dplyr)
library(ggplot2)
# Convert TotalCost column to numeric, ignoring non-numeric entries
NIH_Compare_Data <- NIH_Compare_Data %>%
mutate(TotalCost = as.numeric(as.character(TotalCost)))
# Calculate total award money for each institution, skipping NA values
NIH_total_award_money <- NIH_Compare_Data %>%
group_by(OrganizationName) %>%
summarise(NIH_total_award_money = sum(TotalCost, na.rm = TRUE))
# COMPARISON BETWEEEN NIH - AWARD MONEY
library(dplyr)
library(ggplot2)
# Remove rows with NA values in TotalCost column
NIH_Compare_Data <- NIH_Compare_Data %>%
filter(!is.na(TotalCost))
# Calculate total award money for each institution
NIH_total_award_money <- NIH_Compare_Data %>%
group_by(OrganizationName) %>%
summarise(NIH_total_award_money = sum(TotalCost))
# COMPARISON BETWEEEN NIH - AWARD MONEY
library(dplyr)
library(ggplot2)
# Convert TotalCost column to numeric, ignoring non-numeric entries
NIH_Compare_Data <- NIH_Compare_Data %>%
mutate(TotalCost = as.numeric(as.character(TotalCost)))
# Calculate total award money for each institution, skipping NA values
NIH_total_award_money <- NIH_Compare_Data %>%
group_by(OrganizationName) %>%
summarise(NIH_total_award_money = sum(TotalCost, na.rm = TRUE))
NIH_Compare_Data <- read_xlsx("NIH_Combined_Data.xlsx")
library(readxl)
NIH_Compare_Data <- read_xlsx("NIH_Combined_Data.xlsx")
View(NIH_Compare_Data)
# Calculate total award money for each institution
NIH_total_award_money <- NIH_Compare_Data %>%
group_by(OrganizationName) %>%
summarise(NIH_total_award_money = sum(TotalCost))
# Calculate total award money for each institution
NIH_total_award_money <- NIH_Compare_Data %>%
group_by(OrganizationName) %>%
summarise(NIH_total_award_money = sum(TotalCost))
# Calculate total award money for each institution, removing NA values in TotalCost
NIH_total_award_money <- NIH_Compare_Data %>%
filter(!is.na(TotalCost)) %>%
group_by(OrganizationName) %>%
summarise(NIH_total_award_money = sum(TotalCost))
# Calculate total award money for each institution, removing NA values in TotalCost
NIH_total_award_money <- NIH_Compare_Data %>%
group_by(OrganizationName) %>%
summarise(NIH_total_award_money = sum(TotalCost))
# Calculate total award money for each institution, removing NA values in TotalCost
NIH_total_award_money <- NIH_Compare_Data %>%
group_by(OrganizationName) %>%
summarise(NIH_total_award_money = sum(TotalCost))
View(NSF_total_award_money)
# Calculate total award money for each institution, excluding NA values in TotalCost
NIH_total_award_money <- NIH_Compare_Data %>%
group_by(OrganizationName) %>%
summarise(NIH_total_award_money = sum(TotalCost, na.rm = TRUE))
# COMPARISON BETWEEEN NIH - AWARD MONEY
library(dplyr)
library(ggplot2)
# Calculate total award money for each institution, removing NA values in TotalCost
library(dplyr)
# Calculate total award money for each institution, excluding NA values in TotalCost
NIH_total_award_money <- NIH_Compare_Data %>%
group_by(OrganizationName) %>%
summarise(NIH_total_award_money = sum(TotalCost, na.rm = TRUE))
# COMPARISON BETWEEEN NIH - AWARD MONEY
library(dplyr)
library(ggplot2)
# Calculate total award money for each institution, removing NA values in TotalCost
# Calculate total award money for each institution, excluding NA values in TotalCost
NIH_total_award_money <- NIH_Compare_Data %>%
group_by(OrganizationName) %>%
summarise(NIH_total_award_money = sum(TotalCost, na.rm = TRUE))
# COMPARISON BETWEEEN NIH - AWARD MONEY
library(dplyr)
library(ggplot2)
# Calculate total award money for each institution, removing NA values in TotalCost
# Calculate total award money for each institution, excluding NA values in TotalCost
NIH_average_award_money <- NIH_Compare_Data %>%
group_by(OrganizationName) %>%
summarise(NIH_average_award_money = mean(TotalCost, na.rm = TRUE))
# COMPARISON BETWEEEN NIH - AWARD MONEY
library(dplyr)
library(ggplot2)
# Calculate total award money for each institution, removing NA values in TotalCost
# Calculate total award money for each institution, excluding NA values in TotalCost
NIH_average_award_money <- NIH_Compare_Data %>%
filter(!is.na(TotalCost)) %>%
group_by(OrganizationName) %>%
summarise(NIH_average_award_money = mean(TotalCost))
View(NIH_average_award_money)
View(NIH_average_award_money)
View(NIH_average_award_money)
View(NIH_average_award_money)
View(NIH_average_award_money)
View(NIH_average_award_money)
View(NIH_average_award_money)
# COMPARISON BETWEEEN NIH - AWARD MONEY - CALCULATED THE AVERAGE INSTEAD THE TOTAL AMMOUNT
library(dplyr)
library(ggplot2)
# Calculate total award money for each institution, removing NA values in TotalCost
# Calculate total award money for each institution, excluding NA values in TotalCost
NIH_average_award_money <- NIH_Compare_Data %>%
filter(!is.na(TotalCost)) %>%
group_by(OrganizationName) %>%
summarise(NIH_average_award_money = mean(TotalCost))
NIH_total_award_money <- NIH_Compare_Data %>%
group_by(OrganizationName) %>%
summarise(NIH_total_award_money = sum(TotalCost, na.rm = TRUE))
View(NIH_total_award_money)
# COMPARISON BETWEEEN NIH - AWARD MONEY - CALCULATED THE AVERAGE INSTEAD THE TOTAL AMMOUNT
library(dplyr)
library(ggplot2)
# Calculate total award money for each institution, removing NA values in TotalCost
NIH_total_award_money <- NIH_Compare_Data %>%
group_by(OrganizationName) %>%
summarise(NIH_total_award_money = sum(TotalCost, na.rm = TRUE))
# Colors
my_colors_3 <- c("BOISE STATE UNIVERSITY" = "orange", "IDAHO STATE UNIVERSITY" = "black", "UNIVERSITY OF IDAHO" = "gold")
# COMPARISON BETWEEEN NIH - AWARD MONEY - CALCULATED THE AVERAGE INSTEAD THE TOTAL AMMOUNT
library(dplyr)
library(ggplot2)
# Calculate total award money for each institution, removing NA values in TotalCost
NIH_total_award_money <- NIH_Compare_Data %>%
group_by(OrganizationName) %>%
summarise(NIH_total_award_money = sum(TotalCost, na.rm = TRUE))
# Colors
my_colors_3 <- c("BOISE STATE UNIVERSITY" = "orange", "IDAHO STATE UNIVERSITY" = "black", "UNIVERSITY OF IDAHO" = "gold")
library(ggplot2)
ggplot(NIH_total_award_money, aes(x = OrganizationName, y = NIH_total_award_money)) +
geom_bar(stat = "identity", position = "dodge", fill = my_colors_3)  +
ggtitle("Total of Award Money from NSF Grants") +
xlab("") +
ylab("Total Award Money") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12),  # Adjust size of x-axis labels
axis.text.y = element_text(size = 12),  # Adjust size of y-axis labels
legend.text = element_text(size = 12),  # Adjust size of legend text
plot.title = element_text(hjust = 0.5, size = 14)) +  # Adjust size of plot title
scale_y_continuous(labels = scales::number_format(scale = 1e-6, suffix = "M"))
# COMPARISON BETWEEEN NIH - AWARD MONEY - CALCULATED THE AVERAGE INSTEAD THE TOTAL AMMOUNT
library(dplyr)
library(ggplot2)
# Calculate total award money for each institution, removing NA values in TotalCost
NIH_total_award_money <- NIH_Compare_Data %>%
group_by(OrganizationName) %>%
summarise(NIH_total_award_money = sum(TotalCost, na.rm = TRUE))
# Colors
my_colors_3 <- c("BOISE STATE UNIVERSITY" = "orange", "IDAHO STATE UNIVERSITY" = "black", "UNIVERSITY OF IDAHO" = "gold")
library(ggplot2)
ggplot(NIH_total_award_money, aes(x = OrganizationName, y = NIH_total_award_money)) +
geom_bar(stat = "identity", position = "dodge", fill = my_colors_3)  +
ggtitle("Total of Award Money from NIH Grants") +
xlab("") +
ylab("Total Award Money") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12),  # Adjust size of x-axis labels
axis.text.y = element_text(size = 12),  # Adjust size of y-axis labels
legend.text = element_text(size = 12),  # Adjust size of legend text
plot.title = element_text(hjust = 0.5, size = 14)) +  # Adjust size of plot title
scale_y_continuous(labels = scales::number_format(scale = 1e-6, suffix = "M"))
UI_NIH_data_2 <- UI_NIH_data_2%>%
mutate(`Award Notice Date` = as.Date(AwardNoticeDate, format = "%m/%d/%Y"),
`End Date` = as.Date(ProjectEndDate, format = "%m/%d/%Y"))
# Filter the data for each institution
UI_NIH_data_2 <- NIH_Compare_Data %>%
filter(OrganizationName == "UNIVERSITY OF IDAHO")
UI_NIH_data_2 <- UI_NIH_data_2%>%
mutate(`Award Notice Date` = as.Date(AwardNoticeDate, format = "%m/%d/%Y"),
`End Date` = as.Date(ProjectEndDate, format = "%m/%d/%Y"))
View(UI_NIH_data_2)
NSF_Compare_Data <- read_xlsx("NSF_Combined_Data.xlsx")
View(NSF_Compare_Data)
# Calculate total grant action count for each institution
NSF_Grant_Award_Instrument <- NSF_Compare_Data %>%
group_by(Organization, AwardInstrument) %>%
summarise(count = n(), .groups = "drop") %>%
ungroup()
View(NSF_Grant_Award_Instrument)
# COMPARISON BETWEEEN NSF - Grant Status
library(dplyr)
library(ggplot2)
# Calculate total grant action count for each institution
NSF_Grant_Award_Instrument <- NSF_Compare_Data %>%
group_by(Organization, AwardInstrument) %>%
summarise(count = n(), .groups = "drop") %>%
ungroup()
library(ggplot2)
# Assuming DOE_Grant_Action is your summarized data frame with counts of Action Type by Institution
ggplot(NSF_Grant_Award_Instrument , aes(x = Organization, y = count, fill = AwardInstrument)) +
geom_bar(stat = "identity", position = "dodge") +
ggtitle("Number of Counts of Action Type by Institution") +
xlab("") +
ylab("Number of Active Grants") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12),  # Adjust size of x-axis labels
axis.text.y = element_text(size = 12),  # Adjust size of y-axis labels
legend.text = element_text(size = 12),  # Adjust size of legend text
plot.title = element_text(hjust = 0.5, size = 14))
# COMPARISON BETWEEEN NSF - Grant Status
library(dplyr)
library(ggplot2)
# Calculate total grant action count for each institution
NSF_Grant_Award_Instrument <- NSF_Compare_Data %>%
group_by(Organization, AwardInstrument) %>%
summarise(count = n(), .groups = "drop") %>%
ungroup()
library(ggplot2)
# Assuming DOE_Grant_Action is your summarized data frame with counts of Action Type by Institution
my_colors_4 <- c("navyblue", "darkgreen", "darkorange", "darkred")
ggplot(NSF_Grant_Award_Instrument , aes(x = Organization, y = count, fill = AwardInstrument)) +
geom_bar(stat = "identity", position = "dodge",  fill = my_colors_4) +
ggtitle("Number of Counts of Action Type by Institution") +
xlab("") +
ylab("Number of Active Grants") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12),  # Adjust size of x-axis labels
axis.text.y = element_text(size = 12),  # Adjust size of y-axis labels
legend.text = element_text(size = 12),  # Adjust size of legend text
plot.title = element_text(hjust = 0.5, size = 14))
# COMPARISON BETWEEEN NSF - Grant Status
library(dplyr)
library(ggplot2)
# Calculate total grant action count for each institution
NSF_Grant_Award_Instrument <- NSF_Compare_Data %>%
group_by(Organization, AwardInstrument) %>%
summarise(count = n(), .groups = "drop") %>%
ungroup()
# Check unique levels of AwardInstrument
unique_levels <- unique(NSF_Grant_Award_Instrument$AwardInstrument)
# Adjust my_colors_4 to match the number of unique levels
my_colors_4 <- rainbow(length(unique_levels))  # or any other color palette you prefer
# Plot with adjusted colors
ggplot(NSF_Grant_Award_Instrument, aes(x = Organization, y = count, fill = AwardInstrument)) +
geom_bar(stat = "identity", position = "dodge", fill = my_colors_4) +
ggtitle("Number of Counts of Action Type by Institution") +
xlab("") +
ylab("Number of Active Grants") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12),
axis.text.y = element_text(size = 12),
legend.text = element_text(size = 12),
plot.title = element_text(hjust = 0.5, size = 14))
# COMPARISON BETWEEEN NSF - Grant Status
library(dplyr)
library(ggplot2)
# Calculate total grant action count for each institution
NSF_Grant_Award_Instrument <- NSF_Compare_Data %>%
group_by(Organization, AwardInstrument) %>%
summarise(count = n(), .groups = "drop") %>%
ungroup()
# Check unique levels of AwardInstrument
unique_levels <- unique(NSF_Grant_Award_Instrument$AwardInstrument)
# Adjust my_colors_4 to match the number of unique levels
my_colors_4 <- rainbow(length(unique_levels))  # or any other color palette you prefer
# Plot with adjusted colors
ggplot(NSF_Grant_Award_Instrument, aes(x = Organization, y = count, fill = AwardInstrument)) +
geom_bar(stat = "identity", position = "dodge") +
ggtitle("Number of Counts of Action Type by Institution") +
xlab("") +
ylab("Number of Active Grants") +
scale_fill_manual(values = my_colors_4) +  # Add this line to set custom colors
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12),
axis.text.y = element_text(size = 12),
legend.text = element_text(size = 12),
plot.title = element_text(hjust = 0.5, size = 14))
# COMPARISON BETWEEEN NSF - Grant Status
library(dplyr)
library(ggplot2)
# Calculate total grant action count for each institution
NSF_Grant_Award_Instrument <- NSF_Compare_Data %>%
group_by(Organization, AwardInstrument) %>%
summarise(count = n(), .groups = "drop") %>%
ungroup()
# Check unique levels of AwardInstrument
unique_levels <- unique(NSF_Grant_Award_Instrument$AwardInstrument)
# Adjust my_colors_4 to match the number of unique levels
my_colors_4 <- ("navyblue", "darkgreen", "darkorange", "darkred")  # or any other color palette you prefer
# Adjust my_colors_4 to match the number of unique levels
my_colors_4 <- ("navyblue", "darkgreen", "darkorange", "darkred")  # or any other color palette you prefer
# COMPARISON BETWEEEN NSF - Grant Status
library(dplyr)
library(ggplot2)
# Calculate total grant action count for each institution
NSF_Grant_Award_Instrument <- NSF_Compare_Data %>%
group_by(Organization, AwardInstrument) %>%
summarise(count = n(), .groups = "drop") %>%
ungroup()
# Check unique levels of AwardInstrument
unique_levels <- unique(NSF_Grant_Award_Instrument$AwardInstrument)
# Adjust my_colors_4 to match the number of unique levels
my_colors_4 <- c("navyblue", "darkgreen", "darkorange", "darkred")  # or any other color palette you prefer
# Plot with adjusted colors
ggplot(NSF_Grant_Award_Instrument, aes(x = Organization, y = count, fill = AwardInstrument)) +
geom_bar(stat = "identity", position = "dodge") +
ggtitle("Number of Counts of Action Type by Institution") +
xlab("") +
ylab("Number of Active Grants") +
scale_fill_manual(values = my_colors_4) +  # Add this line to set custom colors
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12),
axis.text.y = element_text(size = 12),
legend.text = element_text(size = 12),
plot.title = element_text(hjust = 0.5, size = 14))
DOEawardsUI_Dates <- read_xlsx("DOEawards.xlsx")
DOEawardsUI_Dates <- read_xlsx ("DOEawards.xlsx")
library(readxl)
DOEawardsUI_Dates <- read_xlsx ("DOEawards.xlsx")
View(DOEawardsUI_Dates)
library(readxl)
library(dplyr)
DOEawardsUI_Dates <- read_xlsx ("DOEawards.xlsx")
dplyr::filter(Institution == 'Regents of the University of Idaho')
library(readxl)
library(dplyr)
DOEawardsUI_Dates <- read_xlsx ("DOEawards.xlsx")
dplyr::filter(Institution == "Regents of the University of Idaho")
library(readxl)
library(dplyr)
DOEawardsUI_Dates <- read_xlsx ("DOEawards.xlsx")
dplyr::filter(Institution == 'Regents of the University of Idaho')
library(readxl)
library(dplyr)
DOEawardsUI_Dates <- read_xlsx ("DOEawards.xlsx")
dplyr::filter(Institution  == 'Regents of the University of Idaho')
library(readxl)
library(dplyr)
DOEawardsUI_Dates <- read_xlsx ("DOEawards.xlsx")
filter(Institution  == 'Regents of the University of Idaho')
library(readxl)
library(dplyr)
# Read the Excel file
DOEawardsUI_Dates <- read_xlsx("DOEawards.xlsx")
filtered_data_UI_DOE <- DOEawardsUI_Dates %>%
filter(Institution == 'Regents of the University of Idaho')
View(filtered_data_UI_DOE)
USDAawardsUI_Dates <- read.csv("USDAtoUI.csv")
View(DOEawardsUI_Dates)
View(USDAawardsUI_Dates)
View(USDAawardsUI_Dates)
install.packages("lubridate")
#DOE
library(readxl)
library(dplyr)
library(lubridate)
# Read the Excel file
DOEawardsUI_Dates <- read_xlsx("DOEawards.xlsx")
filtered_data_UI_DOE <- DOEawardsUI_Dates %>%
filter(Institution == 'Regents of the University of Idaho')
#USDA
USDAawardsUI_Dates <- read.csv("USDAtoUI.csv")
# Assuming the start date column is named "Start_Date"
five_years_ago <- Sys.Date() - years(5)  # Calculate the date 5 years ago
# Filter the data to include only awards that started 5 years ago or later
filtered_data <- USDAawardsUI_Dates %>%
filter(Award.Date >= five_years_ago)
#DOE
library(readxl)
library(dplyr)
library(lubridate)
# Read the Excel file
DOEawardsUI_Dates <- read_xlsx("DOEawards.xlsx")
filtered_data_UI_DOE <- DOEawardsUI_Dates %>%
filter(Institution == 'Regents of the University of Idaho')
#USDA
USDAawardsUI_Dates <- read.csv("USDAtoUI.csv")
# Assuming the start date column is named "Start_Date"
five_years_ago <- Sys.Date() - years(5)  # Calculate the date 5 years ago
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_5y_USDA <- USDAawardsUI_Dates %>%
filter(Award.Date >= five_years_ago)
View(filtered_data_UI_5y_USDA)
#DOE
library(readxl)
library(dplyr)
library(lubridate)
# Read the Excel file
DOEawardsUI_Dates <- read_xlsx("DOEawards.xlsx")
filtered_data_UI_DOE <- DOEawardsUI_Dates %>%
filter(Institution == 'Regents of the University of Idaho')
#USDA
USDAawardsUI_Dates <- read.csv("USDAtoUI.csv")
# Assuming the start date column is named "Start_Date"
five_years_ago <- Sys.Date() - years(5)  # Calculate the date 5 years ago
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_5y_USDA <- USDAawardsUI_Dates %>%
filter(Award.Date >= five_years_ago)
# Assuming the start date column is named "Start_Date"
ten_years_ago <- Sys.Date() - years(10)  # Calculate the date 5 years ago
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_10y_USDA <- USDAawardsUI_Dates %>%
filter(Award.Date >= ten_years_ago)
View(filtered_data_UI_10y_USDA)
NSFawardsUI_Dates_5 <- read_xlsx("5YR_UI_NSF.xlsx")
NSFawardsUI_Dates_5 <- read_xls("5YR_UI_NSF.xls")
View(NSFawardsUI_Dates_5)
NSFawardsUI_Dates_5 <- read_xls("5YR_UI_NSF.xls")
# Assuming the start date column is named "Start_Date"
five_years_ago <- Sys.Date() - years(5)  # Calculate the date 5 years ago
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_5y_NSF <- NSFawardsUI_Dates_5 %>%
filter(StartDate >= five_years_ago)
View(NSFawardsUI_Dates_5)
NSFawardsUI_Dates_10 <- read_xls("10YR_UI_NSF.xls")
#DOE
library(readxl)
library(dplyr)
library(lubridate)
# Read the Excel file
DOEawardsUI_Dates <- read_xlsx("DOEawards.xlsx")
filtered_data_UI_DOE <- DOEawardsUI_Dates %>%
filter(Institution == 'Regents of the University of Idaho')
#USDA
USDAawardsUI_Dates <- read.csv("USDAtoUI.csv")
# Assuming the start date column is named "Start_Date"
five_years_ago <- Sys.Date() - years(5)  # Calculate the date 5 years ago
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_5y_USDA <- USDAawardsUI_Dates %>%
filter(Award.Date >= five_years_ago)
# Assuming the start date column is named "Start_Date"
ten_years_ago <- Sys.Date() - years(10)  # Calculate the date 5 years ago
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_10y_USDA <- USDAawardsUI_Dates %>%
filter(Award.Date >= ten_years_ago)
#NSF
NSFawardsUI_Dates_5 <- read_xls("5YR_UI_NSF.xls")
# Assuming the start date column is named "Start_Date"
five_years_ago <- Sys.Date() - years(5)  # Calculate the date 5 years ago
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_5y_NSF <- NSFawardsUI_Dates_5 %>%
filter(StartDate >= five_years_ago)
NSFawardsUI_Dates_10 <- read_xls("10YR_UI_NSF.xls")
# Assuming the start date column is named "Start_Date"
ten_years_ago <- Sys.Date() - years(10)  # Calculate the date 5 years ago
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_10y_NSF <- NSFawardsUI_Dates_10 %>%
filter(StartDate >= ten_years_ago)
View(filtered_data_UI_10y_NSF)
View(filtered_data_UI_5y_NSF)
View(filtered_data_UI_5y_USDA)
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_5y_NSF <- NSFawardsUI_Dates_10 %>%
filter(StartDate >= five_years_ago)
#DOE
library(readxl)
library(dplyr)
library(lubridate)
# Read the Excel file
DOEawardsUI_Dates <- read_xlsx("DOEawards.xlsx")
filtered_data_UI_DOE <- DOEawardsUI_Dates %>%
filter(Institution == 'Regents of the University of Idaho')
#USDA
USDAawardsUI_Dates <- read.csv("USDAtoUI.csv")
# Assuming the start date column is named "Start_Date"
five_years_ago <- Sys.Date() - years(5)  # Calculate the date 5 years ago
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_5y_USDA <- USDAawardsUI_Dates %>%
filter(Award.Date >= five_years_ago)
# Assuming the start date column is named "Start_Date"
ten_years_ago <- Sys.Date() - years(10)  # Calculate the date 5 years ago
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_10y_USDA <- USDAawardsUI_Dates %>%
filter(Award.Date >= ten_years_ago)
#NSF
NSFawardsUI_Dates_5 <- read_xls("5YR_UI_NSF.xls")
# Assuming the start date column is named "Start_Date"
five_years_ago <- Sys.Date() - years(5)  # Calculate the date 5 years ago
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_5y_NSF <- NSFawardsUI_Dates_10 %>%
filter(StartDate >= five_years_ago)
NSFawardsUI_Dates_10 <- read_xls("10YR_UI_NSF.xls")
# Assuming the start date column is named "Start_Date"
ten_years_ago <- Sys.Date() - years(10)  # Calculate the date 5 years ago
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_10y_NSF <- NSFawardsUI_Dates_10 %>%
filter(StartDate >= ten_years_ago)
NIHawardsUI_Dates <- read_xlsx("10YR_UI_NIH.xlsx")
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_5y_NIH <- NIHawardsUI_Dates %>%
filter(Award.Date >= five_years_ago)
View(NIHawardsUI_Dates)
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_5y_NIH <- NIHawardsUI_Dates %>%
filter('Budget Start Date' >= five_years_ago)
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_5y_NIH <- NIHawardsUI_Dates %>%
filter("Budget Start Date" >= five_years_ago)
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_5y_NIH <- NIHawardsUI_Dates %>%
filter(`Budget Start Date` >= five_years_ago)
View(filtered_data_UI_5y_NIH)
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_5y_NIH <- NIHawardsUI_Dates %>%
filter(`Project Start Date` >= five_years_ago)
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_5y_NIH <- NIHawardsUI_Dates %>%
filter(`Award Notice Date` >= five_years_ago)
#Assuming the start date column is named "Start_Date"
five_years_ago <- Sys.Date() - years(5)  # Calculate the date 5 years ago
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_5y_NIH <- NIHawardsUI_Dates %>%
filter(`Award Notice Date` >= five_years_ago)
# Filter the data to include only awards that started 5 years ago or later
filtered_data_UI_5y_NIH <- NIHawardsUI_Dates %>%
filter(`Budget Start Date` >= five_years_ago)
