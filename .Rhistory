Q1_PI_NSF <- Q1_Data_PI %>%
filter(Sponsor == "NSF")
# Convert StartDate and EndDate to Date objects
Q1_PI_NSF$StartDate <- as.Date(Q1_PI_NSF$StartDate, format = "%m/%d/%Y")
Q1_PI_NSF$EndDate <- as.Date(Q1_PI_NSF$EndDate, format = "%m/%d/%Y")
# Filter out rows with NA values in StartDate or EndDate
Q1_PI_NSF <- Q1_PI_NSF[complete.cases(Q1_PI_NSF$StartDate, Q1_PI_NSF$EndDate), ]
# Create the Gantt chart with adjusted y-axis labels
ggplot(Q1_PI_NSF, aes(y = PI, x = StartDate, xend = EndDate, yend = PI)) +
geom_segment(size = 5, color = "gold") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
labs(title = "Active Awards Timeline by PI",
x = "Timeline",
y = "Principal Investigator") +
theme_minimal() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5),
axis.text.y = element_text(size = 6))  # Reduce the size of y-axis labels
library(ggplot2)
library(readxl)
library(dplyr)
library(lubridate)
# Read the data
Q1_Data_PI <- read_xlsx("Q1_Compilled_Data.xlsx")
# Filter the data for DOE sponsor
Q1_PI_NSF <- Q1_Data_PI %>%
filter(Sponsor == "NSF")
# Convert StartDate and EndDate to Date objects
Q1_PI_NSF$StartDate <- as.Date(Q1_PI_NSF$StartDate, format = "%m/%d/%Y")
Q1_PI_NSF$EndDate <- as.Date(Q1_PI_NSF$EndDate, format = "%m/%d/%Y")
# Filter out rows with NA values in StartDate or EndDate
Q1_PI_NSF <- Q1_PI_NSF[complete.cases(Q1_PI_NSF$StartDate, Q1_PI_NSF$EndDate), ]
# Create the Gantt chart with black borders
ggplot(Q1_PI_NSF, aes(y = PI, x = StartDate, xend = EndDate, yend = PI)) +
geom_segment(size = 5, color = "gold") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
labs(title = "Active Awards Timeline by PI",
x = "Timeline",
y = "Principal Investigator") +
theme_minimal() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5)) +  # Set horizontal justification to center
geom_segment(color = "black")  # Add black borders to the segments
library(ggplot2)
library(readxl)
library(dplyr)
library(lubridate)
# Read the data
Q1_Data_PI <- read_xlsx("Q1_Compilled_Data.xlsx")
# Filter the data for DOE sponsor
Q1_PI_NSF <- Q1_Data_PI %>%
filter(Sponsor == "NSF")
# Convert StartDate and EndDate to Date objects
Q1_PI_NSF$StartDate <- as.Date(Q1_PI_NSF$StartDate, format = "%m/%d/%Y")
Q1_PI_NSF$EndDate <- as.Date(Q1_PI_NSF$EndDate, format = "%m/%d/%Y")
# Filter out rows with NA values in StartDate or EndDate
Q1_PI_NSF <- Q1_PI_NSF[complete.cases(Q1_PI_NSF$StartDate, Q1_PI_NSF$EndDate), ]
# Create the Gantt chart with adjusted y-axis labels
ggplot(Q1_PI_NSF, aes(y = PI, x = StartDate, xend = EndDate, yend = PI)) +
geom_segment(size = 5, color = "gold") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
labs(title = "Active Awards Timeline by PI",
x = "Timeline",
y = "Principal Investigator") +
theme_minimal() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5),
axis.text.y = element_text(size = 6))  # Reduce the size of y-axis labels
library(ggplot2)
library(readxl)
library(dplyr)
library(lubridate)
# Read the data
Q1_Data_PI <- read_xlsx("Q1_Compilled_Data.xlsx")
# Filter the data for DOE sponsor
Q1_PI_NSF <- Q1_Data_PI %>%
filter(Sponsor == "NSF")
# Convert StartDate and EndDate to Date objects
Q1_PI_NSF$StartDate <- as.Date(Q1_PI_NSF$StartDate, format = "%m/%d/%Y")
Q1_PI_NSF$EndDate <- as.Date(Q1_PI_NSF$EndDate, format = "%m/%d/%Y")
# Filter out rows with NA values in StartDate or EndDate
Q1_PI_NSF <- Q1_PI_NSF[complete.cases(Q1_PI_NSF$StartDate, Q1_PI_NSF$EndDate), ]
# Create the Gantt chart with adjusted y-axis labels
ggplot(Q1_PI_NSF, aes(y = PI, x = StartDate, xend = EndDate, yend = PI)) +
geom_segment(size = 5, color = "gold") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
labs(title = "Active Awards Timeline by PI",
x = "Timeline",
y = "Principal Investigator") +
theme_minimal() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5),
axis.text.y = element_text(size = 6))  # Reduce the size of y-axis labels
library(ggplot2)
library(readxl)
library(dplyr)
library(lubridate)
# Read the data
Q1_Data_PI <- read_xlsx("Q1_Compilled_Data.xlsx")
# Filter the data for DOE sponsor
Q1_PI_NIH <- Q1_Data_PI %>%
filter(Sponsor == "NIH")
# Convert StartDate and EndDate to Date objects
Q1_PI_NIH$StartDate <- as.Date(Q1_PI_NIH$StartDate, format = "%m/%d/%Y")
Q1_PI_NIH$EndDate <- as.Date(Q1_PI_NIH$EndDate, format = "%m/%d/%Y")
# Filter out rows with NA values in StartDate or EndDate
Q1_PI_NIH <- Q1_PI_NIH[complete.cases(Q1_PI_NIH$StartDate, Q1_PI_NIH$EndDate), ]
# Create the Gantt chart
ggplot(Q1_PI_NIH, aes(y = PI, x = StartDate, xend = EndDate, yend = PI)) +
geom_segment(size = 5, color = "black") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
labs(title = "Active Awards Timeline by PI",
x = "Timeline",
y = "Principal Investigator") +
theme_minimal() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5))  # Set horizontal justification to center
library(ggplot2)
library(readxl)
library(dplyr)
library(lubridate)
# Read the data
Q1_Data_PI <- read_xlsx("Q1_Compilled_Data.xlsx")
# Filter the data for DOE sponsor
Q1_PI_DOE <- Q1_Data_PI %>%
filter(Sponsor == "DOE")
# Convert StartDate and EndDate to Date objects
Q1_PI_DOE$StartDate <- as.Date(Q1_PI_DOE$StartDate, format = "%m/%d/%Y")
Q1_PI_DOE$EndDate <- as.Date(Q1_PI_DOE$EndDate, format = "%m/%d/%Y")
# Filter out rows with NA values in StartDate or EndDate
Q1_PI_DOE <- Q1_PI_DOE[complete.cases(Q1_PI_DOE$StartDate, Q1_PI_DOE$EndDate), ]
# Create the Gantt chart
ggplot(Q1_PI_DOE, aes(y = PI, x = StartDate, xend = EndDate, yend = PI)) +
geom_segment(size = 5, color = "darkgrey") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
labs(title = "Active Awards Timeline by PI",
x = "Timeline",
y = "Principal Investigator") +
theme_minimal() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5))  # Set horizontal justification to center
library(ggplot2)
# Assuming the column names in Q1_Data include "Amount" and "Sponsor"
# If not, adjust the column names accordingly
# Create the bar plot
ggplot(Q1_Data, aes(x = Sponsor, y = Amount)) +
geom_bar(stat = "summary", fun = "sum", fill = "blue") +  # Summarize the Amount by Sponsor
labs(title = "Total Amount by Sponsor",
x = "Sponsor",
y = "Total Amount") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better readability
library(ggplot2)
# Assuming the column names in Q1_Data include "Amount" and "Sponsor"
# If not, adjust the column names accordingly
library(ggplot2)
library(scales)  # For formatting labels
# Create the bar plot
ggplot(Q1_Data, aes(x = Sponsor, y = Amount)) +
geom_bar(stat = "summary", fun = "sum", fill = "blue") +
labs(title = "Total Amount by Sponsor",
x = "Sponsor",
y = "Total Amount (Millions)") +
scale_y_continuous(labels = scales::unit_format(unit = "M")) +  # Format y-axis labels in millions
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better readability
library(ggplot2)
library(scales)  # For formatting labels
# Convert Amount to numeric
Q1_Data$Amount <- as.numeric(Q1_Data$Amount)
# Check if there are any non-numeric values in Amount
non_numeric <- Q1_Data[!is.na(as.numeric(Q1_Data$Amount)), ]
# Check the structure of the Amount variable
str(Q1_Data$Amount)
# Create the bar plot
ggplot(Q1_Data, aes(x = Sponsor, y = Amount)) +
geom_bar(stat = "summary", fun = "sum", fill = "blue") +
labs(title = "Total Amount by Sponsor",
x = "Sponsor",
y = "Total Amount (Millions)") +
scale_y_continuous(labels = scales::unit_format(unit = "M")) +  # Format y-axis labels in millions
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better readability
library(ggplot2)
library(scales)  # For formatting labels
# Convert Amount to numeric
Q1_Data$Amount <- as.numeric(Q1_Data$Amount)
# Check if there are any non-numeric values in Amount
non_numeric <- Q1_Data[!is.na(as.numeric(Q1_Data$Amount)), ]
# Check the structure of the Amount variable
str(Q1_Data$Amount)
# Define colors for each sponsor
sponsor_colors <- c("DOE" = "darkgray", "NSF" = "gold", "NIH" = "black")
# Create the bar plot with colors assigned to each sponsor
ggplot(Q1_Data, aes(x = Sponsor, y = Amount, fill = Sponsor)) +
geom_bar(stat = "summary", fun = "sum") +
labs(title = "Total Amount by Sponsor",
x = "Sponsor",
y = "Total Amount (Millions)") +
scale_y_continuous(labels = scales::unit_format(unit = "M")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = sponsor_colors)  # Use manually defined colors for each sponsor
library(ggplot2)
library(scales)  # For formatting labels
# Convert Amount to numeric
Q1_Data$Amount <- as.numeric(Q1_Data$Amount)
# Check if there are any non-numeric values in Amount
non_numeric <- Q1_Data[!is.na(as.numeric(Q1_Data$Amount)), ]
# Check the structure of the Amount variable
str(Q1_Data$Amount)
# Define colors for each sponsor
sponsor_colors <- c("DOE" = "darkgray", "NSF" = "gold", "NIH" = "black")
# Create the bar plot with colors assigned to each sponsor
ggplot(Q1_Data, aes(x = Sponsor, y = Amount, fill = Sponsor)) +
geom_bar(stat = "summary", fun = "sum") +
labs(title = "Total Amount by Sponsor",
x = "Sponsor",
y = "Total Amount (Millions)") +
scale_y_continuous(labels = scales::unit_format(unit = "M")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
plot.title = element_text(hjust = 0.5)
library(ggplot2)
library(scales)  # For formatting labels
# Convert Amount to numeric
Q1_Data$Amount <- as.numeric(Q1_Data$Amount)
# Check if there are any non-numeric values in Amount
non_numeric <- Q1_Data[!is.na(as.numeric(Q1_Data$Amount)), ]
# Check the structure of the Amount variable
str(Q1_Data$Amount)
# Define colors for each sponsor
sponsor_colors <- c("DOE" = "darkgray", "NSF" = "gold", "NIH" = "black")
# Create the bar plot with colors assigned to each sponsor
ggplot(Q1_Data, aes(x = Sponsor, y = Amount, fill = Sponsor)) +
geom_bar(stat = "summary", fun = "sum") +
labs(title = "Total Amount by Sponsor",
x = "Sponsor",
y = "Total Amount (Millions)") +
scale_y_continuous(labels = scales::unit_format(unit = "M")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5)) +  # Adjust title alignment
scale_fill_manual(values = sponsor_colors)  # Use manually defined colors for each sponsor
library(ggplot2)
library(scales)  # For formatting labels
# Convert Amount to numeric
Q1_Data$Amount <- as.numeric(Q1_Data$Amount)
# Define colors for each sponsor
sponsor_colors <- c("DOE" = "darkgray", "NSF" = "gold", "NIH" = "black")
# Create the bar plot with PI on the x-axis and filled bars by Sponsor
ggplot(Q1_Data, aes(x = PI, y = Amount, fill = Sponsor)) +
geom_bar(stat = "summary", fun = "sum") +
labs(title = "Total Amount by PI and Sponsor",
x = "Principal Investigator",
y = "Total Amount (Millions)") +
scale_y_continuous(labels = scales::unit_format(unit = "M")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5)) +  # Adjust title alignment
scale_fill_manual(values = sponsor_colors)  # Use manually defined colors for each sponsor
library(ggplot2)
library(scales)  # For formatting labels
# Convert Amount to numeric
Q1_Data$Amount <- as.numeric(Q1_Data$Amount)
# Define colors for each sponsor
sponsor_colors <- c("DOE" = "darkgray", "NSF" = "gold", "NIH" = "black")
# Order the PI variable by the total amount in descending order
Q1_Data <- Q1_Data %>%
group_by(PI) %>%
summarise(TotalAmount = sum(Amount)) %>%
arrange(desc(TotalAmount)) %>%
pull(PI)
# Create the bar plot with PI on the x-axis and filled bars by Sponsor
ggplot(Q1_Data, aes(x = fct_reorder(PI, -TotalAmount), y = Amount, fill = Sponsor)) +
geom_bar(stat = "summary", fun = "sum") +
labs(title = "Total Amount by PI and Sponsor",
x = "Principal Investigator",
y = "Total Amount (Millions)") +
scale_y_continuous(labels = scales::unit_format(unit = "M")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8),  # Adjust font size
plot.title = element_text(hjust = 0.5)) +  # Adjust title alignment
scale_fill_manual(values = sponsor_colors)  # Use manually defined colors for each sponsor
library(ggplot2)
library(scales)  # For formatting labels
# Convert Amount to numeric
Q1_Data$Amount <- as.numeric(Q1_Data$Amount)
library(ggplot2)
library(scales)  # For formatting labels
# Convert Amount to numeric
Q1_Data$Amount <- as.numeric(Q1_Data$Amount)
library(ggplot2)
library(scales)  # For formatting labels
Q1_Data <- as.data.frame(Q1_Data)  # Ensure Q1_Data is a data frame
Q1_Data$Amount <- as.numeric(Q1_Data$Amount)
View(Q1_Data)
library(ggplot2)
library(scales)  # For formatting labels
# Convert Amount to numeric
Q1_Data$Amount <- as.numeric(Q1_Data$Amount)
View(Q1_Data)
library(ggplot2)
library(readxl)
library(dplyr)
library(lubridate)
# Read the data
Q1_Data_PI <- read_xlsx("Q1_Compilled_Data.xlsx")
# Filter the data for DOE sponsor
Q1_PI_DOE <- Q1_Data_PI %>%
filter(Sponsor == "DOE")
# Convert StartDate and EndDate to Date objects
Q1_PI_DOE$StartDate <- as.Date(Q1_PI_DOE$StartDate, format = "%m/%d/%Y")
Q1_PI_DOE$EndDate <- as.Date(Q1_PI_DOE$EndDate, format = "%m/%d/%Y")
# Filter out rows with NA values in StartDate or EndDate
Q1_PI_DOE <- Q1_PI_DOE[complete.cases(Q1_PI_DOE$StartDate, Q1_PI_DOE$EndDate), ]
# Create the Gantt chart
ggplot(Q1_PI_DOE, aes(y = PI, x = StartDate, xend = EndDate, yend = PI)) +
geom_segment(size = 5, color = "darkgrey") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
labs(title = "Active Awards Timeline by PI",
x = "Timeline",
y = "Principal Investigator") +
theme_minimal() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5))  # Set horizontal justification to center
library(ggplot2)
library(readxl)
library(dplyr)
library(lubridate)
# Read the data
Q1_Data_PI <- read_xlsx("Q1_Compilled_Data.xlsx")
# Filter the data for DOE sponsor
Q1_PI_NIH <- Q1_Data_PI %>%
filter(Sponsor == "NIH")
# Convert StartDate and EndDate to Date objects
Q1_PI_NIH$StartDate <- as.Date(Q1_PI_NIH$StartDate, format = "%m/%d/%Y")
Q1_PI_NIH$EndDate <- as.Date(Q1_PI_NIH$EndDate, format = "%m/%d/%Y")
# Filter out rows with NA values in StartDate or EndDate
Q1_PI_NIH <- Q1_PI_NIH[complete.cases(Q1_PI_NIH$StartDate, Q1_PI_NIH$EndDate), ]
# Create the Gantt chart
ggplot(Q1_PI_NIH, aes(y = PI, x = StartDate, xend = EndDate, yend = PI)) +
geom_segment(size = 5, color = "black") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
labs(title = "Active Awards Timeline by PI",
x = "Timeline",
y = "Principal Investigator") +
theme_minimal() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5))  # Set horizontal justification to center
library(ggplot2)
library(readxl)
library(dplyr)
library(lubridate)
# Read the data
Q1_Data_PI <- read_xlsx("Q1_Compilled_Data.xlsx")
# Filter the data for DOE sponsor
Q1_PI_NSF <- Q1_Data_PI %>%
filter(Sponsor == "NSF")
# Convert StartDate and EndDate to Date objects
Q1_PI_NSF$StartDate <- as.Date(Q1_PI_NSF$StartDate, format = "%m/%d/%Y")
Q1_PI_NSF$EndDate <- as.Date(Q1_PI_NSF$EndDate, format = "%m/%d/%Y")
# Filter out rows with NA values in StartDate or EndDate
Q1_PI_NSF <- Q1_PI_NSF[complete.cases(Q1_PI_NSF$StartDate, Q1_PI_NSF$EndDate), ]
# Create the Gantt chart with adjusted y-axis labels
ggplot(Q1_PI_NSF, aes(y = PI, x = StartDate, xend = EndDate, yend = PI)) +
geom_segment(size = 5, color = "gold") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
labs(title = "Active Awards Timeline by PI",
x = "Timeline",
y = "Principal Investigator") +
theme_minimal() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5),
axis.text.y = element_text(size = 6))  # Reduce the size of y-axis labels
library(ggplot2)
library(scales)  # For formatting labels
# Convert Amount to numeric
Q1_Data$Amount <- as.numeric(Q1_Data$Amount)
library(readxl)
library(dplyr)
library(ggplot2)
Q1_Data <- read_xlsx("Q1_Compilled_Data.xlsx")
# Convert StartDate and EndDate to Date objects
Q1_Data$StartDate <- as.Date(Q1_Data$StartDate, format = "%m/%d/%Y")
Q1_Data$EndDate <- as.Date(Q1_Data$EndDate, format = "%m/%d/%Y")
# Filter out rows with NA values in StartDate or EndDate
Q1_Data <- Q1_Data[complete.cases(Q1_Data$StartDate, Q1_Data$EndDate), ]
# Create the Gantt chart
# Create the Gantt chart
ggplot(Q1_Data, aes(y = Sponsor, x = StartDate, xend = EndDate, yend = Sponsor)) +
geom_segment(size = 10, color = "black") +  # Use linewidth instead of size
scale_x_date(date_breaks = "1 year", date_labels = "%Y", limits = c(as.Date("2021-01-01"), as.Date("2029-01-01"))) +
labs(title = "Active Awards Timeline",
x = "Timeline",
y = "Sponsor") +
theme_minimal() +
theme(legend.position = "bottom")
library(ggplot2)
library(scales)  # For formatting labels
# Convert Amount to numeric
Q1_Data$Amount <- as.numeric(Q1_Data$Amount)
# Check if there are any non-numeric values in Amount
non_numeric <- Q1_Data[!is.na(as.numeric(Q1_Data$Amount)), ]
# Check the structure of the Amount variable
str(Q1_Data$Amount)
# Define colors for each sponsor
sponsor_colors <- c("DOE" = "darkgray", "NSF" = "gold", "NIH" = "black")
# Create the bar plot with colors assigned to each sponsor
ggplot(Q1_Data, aes(x = Sponsor, y = Amount, fill = Sponsor)) +
geom_bar(stat = "summary", fun = "sum") +
labs(title = "Total Amount by Sponsor",
x = "Sponsor",
y = "Total Amount (Millions)") +
scale_y_continuous(labels = scales::unit_format(unit = "M")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5)) +  # Adjust title alignment
scale_fill_manual(values = sponsor_colors)  # Use manually defined colors for each sponsor
# Convert Amount to numeric
Q1_Data$Amount <- as.numeric(Q1_Data$Amount)
# Define colors for each sponsor
sponsor_colors <- c("DOE" = "darkgray", "NSF" = "gold", "NIH" = "black")
# Create the bar plot with PI on the x-axis and filled bars by Sponsor
ggplot(Q1_Data, aes(x = PI, y = Amount, fill = Sponsor)) +
geom_bar(stat = "summary", fun = "sum") +
labs(title = "Total Amount by PI and Sponsor",
x = "Principal Investigator",
y = "Total Amount (Millions)") +
scale_y_continuous(labels = scales::unit_format(unit = "M")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8),  # Adjust font size
plot.title = element_text(hjust = 0.5)) +  # Adjust title alignment
scale_fill_manual(values = sponsor_colors)  # Use manually defined colors for each sponsor
library(readxl)
USDA_Combined_Data_Recent_Awards <- read_excel("posts/MidtermPortfolioPost/USDA_Combined_Data_Recent_Awards.xlsx")
View(USDA_Combined_Data_Recent_Awards)
# Convert Amount to numeric
Q1_Data$Amount <- as.numeric(Q1_Data$Amount)
# Define colors for each sponsor
sponsor_colors <- c("DOE" = "darkgray", "NSF" = "gold", "NIH" = "black")
# Create the bar plot with PI on the x-axis and filled bars by Sponsor
ggplot(Q1_Data, aes(x = PI, y = Amount, fill = Sponsor)) +
geom_bar(stat = "summary", fun = "sum") +
labs(title = "Total Amount by PI and Sponsor",
x = "Principal Investigator",
y = "Total Amount (Millions)") +
scale_y_continuous(labels = scales::unit_format(unit = "M")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8),  # Adjust font size
plot.title = element_text(hjust = 0.5)) +  # Adjust title alignment
scale_fill_manual(values = sponsor_colors)  # Use manually defined colors for each sponsor
library(ggplot2)
library(scales)  # For formatting labels
# Convert Amount to numeric
Q1_Data$Amount <- as.numeric(Q1_Data$Amount)
# Check if there are any non-numeric values in Amount
non_numeric <- Q1_Data[!is.na(as.numeric(Q1_Data$Amount)), ]
# Check the structure of the Amount variable
str(Q1_Data$Amount)
# Define colors for each sponsor
sponsor_colors <- c("DOE" = "darkgray", "NSF" = "gold", "NIH" = "black")
# Create the bar plot with colors assigned to each sponsor
ggplot(Q1_Data, aes(x = Sponsor, y = Amount, fill = Sponsor)) +
geom_bar(stat = "summary", fun = "sum") +
labs(title = "Total Amount by Sponsor",
x = "Sponsor",
y = "Total Amount (Millions)") +
scale_y_continuous(labels = scales::unit_format(unit = "M")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5)) +  # Adjust title alignment
scale_fill_manual(values = sponsor_colors)  # Use manually defined colors for each sponsor
library(ggplot2)
library(scales)  # For formatting labels
# Read the data
Q1_Data_Amount <- read_xlsx("Q1_Compilled_Data_4.xlsx")
# Convert Amount to numeric
Q1_Data_Amount$Amount <- as.numeric(Q1_Data_Amount$Amount)
# Check if there are any non-numeric values in Amount
non_numeric <- Q1_Data_Amount[!is.na(as.numeric(Q1_Data_Amount$Amount)), ]
# Check the structure of the Amount variable
str(Q1_Data_Amount$Amount)
# Define colors for each sponsor
sponsor_colors <- c("DOE" = "darkgray", "NSF" = "gold", "NIH" = "black", "USDA" = "lightgray")
# Create the bar plot with colors assigned to each sponsor
ggplot(Q1_Data_Amount, aes(x = Sponsor, y = Amount, fill = Sponsor)) +
geom_bar(stat = "summary", fun = "sum") +
labs(title = "Total Amount by Sponsor",
x = "Sponsor",
y = "Total Amount (Millions)") +
scale_y_continuous(labels = scales::unit_format(unit = "M")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5)) +  # Adjust title alignment
scale_fill_manual(values = sponsor_colors)  # Use manually defined colors for each sponsor
library(ggplot2)
# Convert Amount to numeric
Q1_Data$Amount <- as.numeric(Q1_Data$Amount)
# Define colors for each sponsor
sponsor_colors <- c("DOE" = "darkgray", "NSF" = "gold", "NIH" = "black")
# Create the bar plot with PI on the x-axis and filled bars by Sponsor
ggplot(Q1_Data, aes(x = PI, y = Amount, fill = Sponsor)) +
geom_bar(stat = "summary", fun = "sum") +
labs(title = "Total Amount by PI and Sponsor",
x = "Principal Investigator",
y = "Total Amount (Millions)") +
scale_y_continuous(labels = scales::unit_format(unit = "M")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8),  # Adjust font size
plot.title = element_text(hjust = 0.5)) +  # Adjust title alignment
scale_fill_manual(values = sponsor_colors)  # Use manually defined colors for each sponsor
