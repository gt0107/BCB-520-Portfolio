{
  "hash": "cff146c45d87cc086b58a3cc2964857e",
  "result": {
    "markdown": "---\ntitle: \"Practice with Spatial Data\"\nsubtitle: \"MAPS!\"\nformat:\n  html:\n    toc: false\n    echo: true\nauthor: \"Geraline Trossi-Torres\"\ndate: \"2024-04-18\"\ncategories: [DataViz, Spatial, GGPlot, Assignment]\nimage: \"map.png\"\ndescription: \"Maps and Spatial Fields are fun!\"\ncode-fold: true\ncode-tools: true\n\n---\n\n\n## OVERVIEW\n\nIn this assignment, we'll consider some of the tools and techniques for visualizing spatial data. Spatial data comes in two broad categories, geographic and spatial fields. Let's practice a few visualizations to get a feel for how these things work!\n\n## GEOGRAPHIC MAPS!\n\nIn class I bet Ronald that he would end up creating some kind of map based visualization before he graduated with his PHD. This is because he works on Malaria - a terrible disease with a strong spatial component to its risk levels. Let's get some Malaria data and map it!\n\nThe data I obtained were from the [Malaria Atlas](https://data.malariaatlas.org/trends?year=2020&metricGroup=Malaria&geographicLevel=admin0&metricSubcategory=Pf&metricType=rate&metricName=incidence). I downloaded a csv for 10 years of data for all the countries the had on file.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggplot2' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'lubridate' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(rnaturalearth)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'rnaturalearth' was built under R version 4.3.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(rnaturalearthdata)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'rnaturalearthdata' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'rnaturalearthdata'\n\nThe following object is masked from 'package:rnaturalearth':\n\n    countries110\n```\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\n\nMalaria <- read.csv(\"National_Unit_data.csv\")\n\nIncidence<- Malaria%>%\n  filter(Metric == \"Infection Prevalence\")%>%\n  mutate(Prevalence = Value, Year = as.factor(Year))\n\n#%>%\n  #select(c(ISO3, Prevalence, Year))\n```\n:::\n\n\nNow I'm going to use the `rnaturalearth` package to create contry polygons. Then I'll add the Malaria data to that data frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nworld_map <- ne_countries(scale = \"medium\", returnclass = \"sf\")\n\nmap_data <- world_map %>%\n  left_join(Incidence, by = c(\"iso_a3\" = \"ISO3\"))%>%\n  filter(!is.na(Prevalence))\n```\n:::\n\n\nNow I will make a plot!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gganimate)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'gganimate' was built under R version 4.3.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(transformr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'transformr' was built under R version 4.3.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(magick)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'magick' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLinking to ImageMagick 6.9.12.98\nEnabled features: cairo, freetype, fftw, ghostscript, heic, lcms, pango, raw, rsvg, webp\nDisabled features: fontconfig, x11\n```\n:::\n\n```{.r .cell-code}\nlibrary(gifski)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'gifski' was built under R version 4.3.3\n```\n:::\n\n```{.r .cell-code}\n# \nggplot() +\n  geom_sf(data = map_data%>%\n            filter(continent==\"Africa\"),\n          aes(fill = Prevalence)) +\n  scale_fill_gradient(low = \"white\", high = \"red\", na.value = \"gray\", name = \"Malaria Prevalence\") +\n  theme_minimal() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +\n  labs(title = \"Malaria Prevalence by Country\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n## My VERSION\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(sf)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'sf' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLinking to GEOS 3.11.2, GDAL 3.8.2, PROJ 9.3.1; sf_use_s2() is TRUE\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'sf'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:transformr':\n\n    st_normalize\n```\n:::\n\n```{.r .cell-code}\nlibrary(maps)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'maps' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'maps'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:purrr':\n\n    map\n```\n:::\n\n```{.r .cell-code}\n# Load U.S. map data\nusa <- map_data(\"usa\")\n\n# Plot U.S. map\nggplot() +\n  geom_polygon(data = usa, aes(x = long, y = lat, group = group), fill = \"white\", color = \"black\") +\n  coord_fixed(1.3) +  # Aspect ratio adjustment\n  theme_void()  # Remove unnecessary elements\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Load U.S. state boundary data\nstates <- map_data(\"state\")\n\n# Plot U.S. map with state boundaries\nggplot() +\n  geom_polygon(data = usa, aes(x = long, y = lat, group = group), fill = \"white\", color = \"black\") +\n  geom_polygon(data = states, aes(x = long, y = lat, group = group), fill = NA, color = \"gray\") + # Add state boundaries\n  coord_fixed(1.3) +  # Aspect ratio adjustment\n  theme_void()  # Remove unnecessary elements\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required packages\nlibrary(readxl)\nlibrary(ggplot2)\n\n# Load your Chlamydia cases dataset (assuming it's named 'ChlamydiaInfectionRate.xlsx')\nchlamydia_data <- read_excel(\"ChlamydiaInfectionRate.xlsx\")\n\n# Merge Chlamydia cases data with state boundaries data\nstates_chlamydia <- merge(states, chlamydia_data, by.x = \"region\", by.y = \"State\", all.x = TRUE)\n\n# Unique values in the 'region' column of the 'states' dataframe\nunique(states$region)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"alabama\"              \"arizona\"              \"arkansas\"            \n [4] \"california\"           \"colorado\"             \"connecticut\"         \n [7] \"delaware\"             \"district of columbia\" \"florida\"             \n[10] \"georgia\"              \"idaho\"                \"illinois\"            \n[13] \"indiana\"              \"iowa\"                 \"kansas\"              \n[16] \"kentucky\"             \"louisiana\"            \"maine\"               \n[19] \"maryland\"             \"massachusetts\"        \"michigan\"            \n[22] \"minnesota\"            \"mississippi\"          \"missouri\"            \n[25] \"montana\"              \"nebraska\"             \"nevada\"              \n[28] \"new hampshire\"        \"new jersey\"           \"new mexico\"          \n[31] \"new york\"             \"north carolina\"       \"north dakota\"        \n[34] \"ohio\"                 \"oklahoma\"             \"oregon\"              \n[37] \"pennsylvania\"         \"rhode island\"         \"south carolina\"      \n[40] \"south dakota\"         \"tennessee\"            \"texas\"               \n[43] \"utah\"                 \"vermont\"              \"virginia\"            \n[46] \"washington\"           \"west virginia\"        \"wisconsin\"           \n[49] \"wyoming\"             \n```\n:::\n\n```{.r .cell-code}\n# Unique values in the 'State' column of the 'chlamydia_data' dataframe\nunique(chlamydia_data$State)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Louisiana\"      \"Mississippi\"    \"Alaska\"         \"South Carolina\"\n [5] \"Georgia\"        \"Alabama\"        \"North Carolina\" \"Arkansas\"      \n [9] \"Illinois\"       \"South Dakota\"   \"Arizona\"        \"Tennessee\"     \n[13] \"New Mexico\"     \"New York\"       \"Missouri\"       \"Texas\"         \n[17] \"Nevada\"         \"Delaware\"       \"Maryland\"       \"Oklahoma\"      \n[21] \"Indiana\"        \"US TOTAL†\"      \"California\"     \"Nebraska\"      \n[25] \"Florida\"        \"Rhode Island\"   \"North Dakota\"   \"Kansas\"        \n[29] \"Virginia\"       \"Ohio\"           \"Iowa\"           \"Colorado\"      \n[33] \"Wisconsin\"      \"Michigan\"       \"Pennsylvania\"   \"Kentucky\"      \n[37] \"Massachusetts\"  \"Minnesota\"      \"Hawaii\"         \"Oregon\"        \n[41] \"Washington\"     \"Montana\"        \"New Jersey\"     \"Connecticut\"   \n[45] \"Utah\"           \"Wyoming\"        \"Idaho\"          \"West Virginia\" \n[49] \"Maine\"          \"New Hampshire\"  \"Vermont\"       \n```\n:::\n\n```{.r .cell-code}\n# Trim leading and trailing spaces from the key columns\nstates$region <- trimws(states$region)\nchlamydia_data$State <- trimws(chlamydia_data$State)\n\n# Convert key columns to lowercase before merging\nstates$region <- tolower(states$region)\nchlamydia_data$State <- tolower(chlamydia_data$State)\n\n# Perform merge\nstates_chlamydia <- merge(states, chlamydia_data, by.x = \"region\", by.y = \"State\", all.x = TRUE)\n\n# Plot the map with Chlamydia cases data\nggplot() +\n  geom_polygon(data = usa, aes(x = long, y = lat, group = group), fill = \"white\", color = \"black\") +\n  geom_polygon(data = states_chlamydia, aes(x = long, y = lat, group = group, fill = Cases), color = \"darkgray\") + # Add state boundaries with Chlamydia cases\n  scale_fill_gradient(low = \"lightpink\", high = \"darkred\", name = \"Chlamydia Cases\") + # Customize the color scale\n  coord_fixed(1.3) +  # Aspect ratio adjustment\n  theme_void()  # Remove unnecessary elements\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}