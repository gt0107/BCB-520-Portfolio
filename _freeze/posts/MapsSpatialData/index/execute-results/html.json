{
  "hash": "bc68d2dbd66f49ccc5f9de5d703437c7",
  "result": {
    "markdown": "---\ntitle: \"Practice with Spatial Data\"\nsubtitle: \"Malaria, Ocean Currents, Baseball...\"\nformat:\n  html:\n    toc: false\n    echo: true\nauthor: \"Barrie Robison\"\ndate: \"2024-04-18\"\ncategories: [Portfolio, DataViz, Spatial, GGPlot, Assignment]\nimage: \"Rlyeh.png\"\ndescription: \"Maps and Spatial Fields are fun!\"\ncode-fold: true\ncode-tools: true\n\n---\n\n\n## OVERVIEW\n\nIn this assignment, we'll consider some of the tools and techniques for visualizing spatial data. Spatial data comes in two broad categories, geographic and spatial fields. Let's practice a few visualizations to get a feel for how these things work!\n\n## GEOGRAPHIC MAPS!\n\nIn class I bet Ronald that he would end up creating some kind of map based visualization before he graduated with his PHD. This is because he works on Malaria - a terrible disease with a strong spatial component to its risk levels. Let's get some Malaria data and map it!\n\nThe data I obtained were from the [Malaria Atlas](https://data.malariaatlas.org/trends?year=2020&metricGroup=Malaria&geographicLevel=admin0&metricSubcategory=Pf&metricType=rate&metricName=incidence). I downloaded a csv for 10 years of data for all the countries the had on file.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggplot2' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'lubridate' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(rnaturalearth)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'rnaturalearth' was built under R version 4.3.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(rnaturalearthdata)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'rnaturalearthdata' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'rnaturalearthdata'\n\nThe following object is masked from 'package:rnaturalearth':\n\n    countries110\n```\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\n\nMalaria <- read.csv(\"National_Unit_data.csv\")\n\nIncidence<- Malaria%>%\n  filter(Metric == \"Infection Prevalence\")%>%\n  mutate(Prevalence = Value, Year = as.factor(Year))\n\n#%>%\n  #select(c(ISO3, Prevalence, Year))\n```\n:::\n\n\nNow I'm going to use the `rnaturalearth` package to create contry polygons. Then I'll add the Malaria data to that data frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nworld_map <- ne_countries(scale = \"medium\", returnclass = \"sf\")\n\nmap_data <- world_map %>%\n  left_join(Incidence, by = c(\"iso_a3\" = \"ISO3\"))%>%\n  filter(!is.na(Prevalence))\n```\n:::\n\n\nNow I will make a plot!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gganimate)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'gganimate' was built under R version 4.3.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(transformr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'transformr' was built under R version 4.3.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(magick)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'magick' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLinking to ImageMagick 6.9.12.98\nEnabled features: cairo, freetype, fftw, ghostscript, heic, lcms, pango, raw, rsvg, webp\nDisabled features: fontconfig, x11\n```\n:::\n\n```{.r .cell-code}\nlibrary(gifski)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'gifski' was built under R version 4.3.3\n```\n:::\n\n```{.r .cell-code}\n# \nggplot() +\n  geom_sf(data = map_data%>%\n            filter(continent==\"Africa\"),\n          aes(fill = Prevalence)) +\n  scale_fill_gradient(low = \"white\", high = \"red\", na.value = \"gray\", name = \"Malaria Prevalence\") +\n  theme_minimal() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +\n  labs(title = \"Malaria Prevalence by Country\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\nOh SNAP! We made a MAP!\n\nHey! That rhymes!\n\nWhat is missing? Units? Is that actually prevalence? We sure left a lot of data on the table? Can we add some kind of time thing? Change the variable?\n\n## SPATIAL FIELDS\n\nSpatial field data refers to data that has a continuous spatial distribution and can be measured at any location within the defined area. Here are some interesting examples of spatial field data:\n\n1.  Air temperature: Air temperature data collected from weather stations or remote sensing technologies can be used to create temperature maps or to study climate change, urban heat islands, and other environmental phenomena. [TROPICAL CYCLONE!](https://svs.gsfc.nasa.gov/14312)\n\n2.  Precipitation: Rainfall, snowfall, or other forms of precipitation data collected from weather stations or satellites can be used to study the hydrological cycle, flood risk, droughts, or water resource management.\n\n3.  Soil moisture: Soil moisture data collected from in situ sensors or remote sensing technologies can be used to study agricultural productivity, irrigation management, droughts, and land degradation. Elevation data (Digital Elevation Models, DEMs):\n\n4.  Elevation data collected from satellite-based radar, LiDAR, or photogrammetry can be used to study topography, watershed delineation, flood risk, landslides, or geomorphology.\n\n5.  Vegetation indices: Indices like the Normalized Difference Vegetation Index (NDVI) or Enhanced Vegetation Index (EVI) derived from satellite imagery can be used to study vegetation health, land cover change, deforestation, agricultural productivity, and carbon sequestration.\n\n6.  Air quality: Data on air pollutants like PM2.5, PM10, NO2, SO2, O3, and CO collected from ground-based monitors or satellites can be used to study the impact of pollution on human health, urban planning, or environmental policy.\n\n7.  Oceanographic data: Sea surface temperature, salinity, and chlorophyll-a concentration data collected from buoys, ships, or satellites can be used to study ocean currents, climate change, or marine ecosystems. [OCEAN CURRENTS!](https://earth.nullschool.net/#current/ocean/surface/currents/orthographic=-177.96,0.40,1571)\n\n8.  Population density: Spatially explicit population density data can be used to study urbanization, migration patterns, infrastructure planning, or public health.\n\n9.  Land use and land cover: Land use and land cover data collected from satellite imagery can be used to study urban growth, deforestation, habitat fragmentation, or landscape ecology.\n\n10. Seismic activity: Spatial distribution of earthquakes and their magnitudes can be used to study tectonics, fault zones, seismic hazards, or infrastructure resilience. [DARK NIGHTS IN ANTAKYA](https://svs.gsfc.nasa.gov/31224)\n\n11. SPORTS! Let's check out a baseball example!\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#install.packages(\"baseballr\")\nlibrary(remotes)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'remotes' was built under R version 4.3.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(devtools)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'devtools' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: usethis\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'usethis'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:remotes':\n\n    git_credentials\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'devtools'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:remotes':\n\n    dev_package_deps, install_bioc, install_bitbucket, install_cran,\n    install_deps, install_dev, install_git, install_github,\n    install_gitlab, install_local, install_svn, install_url,\n    install_version, update_packages\n```\n:::\n\n```{.r .cell-code}\n#install_github(\"bayesball/CalledStrike\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(baseballr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'baseballr' was built under R version 4.3.3\n```\n:::\n\n```{.r .cell-code}\n#ShinyDemo()\n```\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}