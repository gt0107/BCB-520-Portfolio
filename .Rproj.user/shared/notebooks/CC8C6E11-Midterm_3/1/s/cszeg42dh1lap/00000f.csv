"0","library(readxl)"
"0","library(dplyr)"
"0","library(ggplot2)"
"0","library(tidyr)"
"0",""
"0","# Read the Excel file"
"0","Q1_Data <- read_xlsx(""Q1_Compilled_Data_3.xlsx"")"
"0",""
"0","# Remove commas and dollar signs from the 'Amount' column and convert to numeric"
"0","Q1_Data$Amount <- as.numeric(gsub(""[,$]"", """", Q1_Data$Amount))"
"0",""
"0","# Assuming your data frame has columns 'PI', 'Amount', and 'Sponsor'"
"0","# Perform necessary data manipulation"
"0","data <- Q1_Data %>%"
"0","  group_by(PI, Sponsor) %>%"
"0","  summarise(total_amount = sum(Amount, na.rm = TRUE)) %>%"
"0","  ungroup() %>%"
"0","  group_by(PI) %>%"
"0","  mutate(total_amount = sum(total_amount)) %>%"
"0","  ungroup() %>%"
"0","  mutate(percentage = total_amount / sum(total_amount))"
"2","`summarise()` has grouped output by 'PI'. You can override using the `.groups` argument."
"0","# Create stacked bar plot using ggplot2"
"0","ggplot(data, aes(x = reorder(PI, total_amount), y = percentage, fill = Sponsor)) +"
"0","  geom_bar(stat = ""identity"") +"
"0","  labs(x = ""PI Names"", y = ""Percentage"") +"
"0","  scale_fill_brewer(palette = ""Set3"") +  # Choose color palette"
"0","  theme_minimal() +  # Optional: apply a minimal theme"
"0","  theme(axis.text.x = element_text(angle = 45, hjust = 1), "
"0","        plot.title = element_text(size = 20),  # Increase title size"
"0","        axis.title.x = element_text(size = 16),  # Increase x-axis label size"
"0","        axis.title.y = element_text(size = 16),  # Increase y-axis label size"
"0","        axis.text = element_text(size = 14),  # Increase axis tick label size"
"0","        legend.text = element_text(size = 14),  # Increase legend text size"
"0","        legend.title = element_text(size = 16))  # Increase legend title size"
