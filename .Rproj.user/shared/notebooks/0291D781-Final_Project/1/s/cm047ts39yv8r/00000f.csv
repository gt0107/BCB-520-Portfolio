"0","library(tidyverse)"
"0","library(readxl)"
"0",""
"0","#2009"
"0","# Read the data"
"0","rainfallprwide <- read_excel('geraline_data_mm.xlsx')"
"0",""
"0","# Create the stations data frame and filter for month 1"
"0","stations_rain <- rainfallprwide %>%"
"0","  filter(MONTH == 1) %>%"
"0","  select(STATION, LATITUDE, LONGITUDE, NAME, MONTH, ""2009"") %>%"
"0","  unique()"
"0",""
"0","# Extract years from column names"
"0","years <- as.character(2009:2023)"
"0",""
"0","# Convert the numeric columns to numeric type"
"0","rainfallprwide[,-(1:5)] <- lapply(rainfallprwide[,-(1:5)], as.numeric)"
"2","Warning: NAs introduced by coercion"
"0","# Calculate total rainfall for each station for each year individually"
"0","station_year_total_rainfall <- rainfallprwide %>%"
"0","  group_by(STATION, LATITUDE, LONGITUDE, NAME) %>%"
"0","  summarise(across(all_of(years), ~sum(.x, na.rm = TRUE), .names = ""Total_Rainfall_{.col}""))"
"2","`summarise()` has grouped output by 'STATION', 'LATITUDE', 'LONGITUDE'. You can override using the `.groups` argument."
"0","# Convert the base map to a Plotly object"
"0","plotly_map <- ggplotly(base_map)"
"0",""
"0","# Assuming 'stations_rain' is your data frame and it has columns 'LATITUDE', 'LONGITUDE', 'NAME', and '2009'"
"0","# Add station markers to the Plotly map with size based on rainfall in 2009"
"0"," plotly_map %>%"
"0","  add_markers("
"0","    data = station_year_total_rainfall,"
"0","    x = ~LONGITUDE,"
"0","    y = ~LATITUDE,"
"0","    text = ~NAME,"
"0","    marker = list("
"0","      symbol = ""circle"",       # Change the symbol to square"
"0","      color = ~Total_Rainfall_2009 / 100,          # Change the color to blue"
"0","      size = ~Total_Rainfall_2009 / 100,"
"0","      colorscale = ""Blues"","
"0","      reversescale = TRUE              # Size based on rainfall in 2009"
"0","    ),"
"0","    hoverinfo = ""text"""
"0","  ) "
