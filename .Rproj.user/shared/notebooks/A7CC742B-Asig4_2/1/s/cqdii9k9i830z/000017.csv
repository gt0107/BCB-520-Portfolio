"0","title_genre<-my_df%>%"
"0","  select(Genre,Name)%>%"
"0","  group_by(Genre, Name)%>%"
"0","  summarise(count=n_distinct(Name))%>%"
"0","  group_by(Genre) %>%"
"0","  summarise(TotalCount = sum(count))"
"2","`summarise()` has grouped output by 'Genre'. You can override using the `.groups` argument."
"0","library(ggplot2)"
"0","library(viridis)  # For appealing color palettes, ensure it's installed with install.packages(""viridis"")"
"0",""
"0","ggplot(data = title_genre, aes(x = Genre, y = TotalCount, fill = Genre)) +"
"0","  geom_col(color = ""black"", width = 0.7) +"
"0","  scale_fill_viridis_d(option = ""plasma"", begin = 0.1, end = 0.9) +  # Applying a vibrant color palette with good contrast"
"0","  ggtitle(""Genre Distribution"") +"
"0","  xlab(""Genre"") +"
"0","  ylab(""Game Titles"") +"
"0","  theme_minimal(base_size = 12) +  # Using a minimal theme with a base font size for better readability"
"0","  theme("
"0","    plot.title = element_text(hjust = 0.5, size = 18, face = ""bold"", color = ""grey20""),  # Centered and bold title with adjusted color"
"0","    axis.title = element_text(size = 14, face = ""bold"", color = ""grey20""),  # Bold and slightly larger axis titles for clarity"
"0","    axis.text.x = element_text(angle = 45, hjust = 1, size = 12, color = ""grey20"", vjust = 1),  # Adjusted x-axis labels for better legibility"
"0","    axis.text.y = element_text(size = 12, color = ""grey20""),  # Y-axis labels with adjusted size and color"
"0","    legend.position = ""none""  # Removing the legend since the fill color is directly linked to the x-axis labels"
"0","  )"
